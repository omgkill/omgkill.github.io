[{"categories":["docs","shortcodes","index"],"contents":"Markdown is created by Daring Fireball, the original guideline is here. Its syntax, however, varies between different parsers or editors.\nPlease note that HTML fragments in markdown source will be recognized but not parsed or rendered. Also, there may be small reformatting on the original markdown source code after saving.\nParagraph and line breaks A paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by more than one blank lines. In Typora, you only need to press Return to create a new paragraph.\nPress Shift + Return to create a single line break. However, most markdown parser will ignore single line break, to make other markdown parsers recognize your line break, you can leave two whitespace at the end of the line, or insert \u0026lt;br/\u0026gt;.\nHeaders Headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:\n1# This is an H1 2 3## This is an H2 4 5###### This is an H6 In typora, input ‚Äò#‚Äôs followed by title content, and press Return key will create a header.\nBlockquotes Markdown uses email-style \u0026gt; characters for block quoting. They are presented as:\nThis is a blockquote with two paragraphs. This is first paragraph.\nThis is second paragraph. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\nThis is another blockquote with one paragraph. There is three empty line to separate two blockquote.\nËøôÊòØ‰∏ÄÊÆµ‰∏≠ÊñáÊµãËØï„ÄÇ\nIn typora, just input ‚Äò\u0026gt;‚Äô followed by quote contents a block quote is generated. Typora will insert proper ‚Äò\u0026gt;‚Äô or line break for you. Block quote inside anther block quote is allowed by adding additional levels of ‚Äò\u0026gt;‚Äô.\nLists Input * list item 1 will create an un-ordered list, the * symbol can be replace with + or -.\nInput 1. list item 1 will create an ordered list, their markdown source code is like:\nRed Green Blue Red Green Blue Task List Task lists are lists with items marked as either [ ] or [x] (incomplete or complete). For example:\na task list item list syntax required normal formatting, @mentions, #1234 refs incomplete completed You can change the complete/incomplete state by click the checkbox before the item.\nSyntax Highlighting unset language:\n1function helloWorld () { 2 alert(\u0026#34;Hello, World!\u0026#34;) 3} 1plain text 2 3first line 4second line choose different style:\n1public class HelloWorld { 2 public static void main(String[] args) { 3 System.out.println(\u0026#34;Hello, World!\u0026#34;); 4 } 5} 1public class HelloWorld { 2 public static void main(String[] args) { 3 System.out.println(\u0026#34;Hello, World!\u0026#34;); 4 } 5} Math Blocks You can render¬†LaTeX¬†mathematical expressions using¬†MathJax.\nInput $$, then press \u0026lsquo;Return\u0026rsquo; key will trigger an input field which accept Tex/LaTex source. Following is an example: $$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} \u0026amp; \\mathbf{j} \u0026amp; \\mathbf{k} \\ \\frac{\\partial X}{\\partial u} \u0026amp; \\frac{\\partial Y}{\\partial u} \u0026amp; 0 \\ \\frac{\\partial X}{\\partial v} \u0026amp; \\frac{\\partial Y}{\\partial v} \u0026amp; 0 \\ \\end{vmatrix} $$\nIn markdown source file, math block is LaTeX expression wrapped by ‚Äò$$‚Äô mark:\n1$$ 2\\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} 3\\mathbf{i} \u0026amp; \\mathbf{j} \u0026amp; \\mathbf{k} \\\\ 4\\frac{\\partial X}{\\partial u} \u0026amp; \\frac{\\partial Y}{\\partial u} \u0026amp; 0 \\\\ 5\\frac{\\partial X}{\\partial v} \u0026amp; \\frac{\\partial Y}{\\partial v} \u0026amp; 0 \\\\ 6\\end{vmatrix} 7$$ Tables Input | First Header | Second Header | and press return key will create a table with two column.\nAfter table is created, focus on that table will pop up a toolbar for table, where you can resize, align, or delete table. You can also use context menu to copy and add/delete column/row.\nFollowing descriptions can be skipped, as markdown source code for tables are generated by typora automatically.\nIn markdown source code, they look like:\n1| Name | Markdown | HTML tag | 2| ----------------- | ------------------- | -------------------- | 3| *Emphasis* | `*Emphasis*` | `\u0026lt;em\u0026gt;\u0026lt;/em\u0026gt;` | 4| **Strong** | `**Strong**` | `\u0026lt;strong\u0026gt;\u0026lt;/strong\u0026gt;` | 5| `code` | ``code`` | `\u0026lt;code\u0026gt;\u0026lt;/code\u0026gt;` | 6| ~~Strikethrough~~ | `~~Strikethrough~~` | `\u0026lt;del\u0026gt;\u0026lt;/del` | 7| \u0026lt;u\u0026gt;Underline\u0026lt;/u\u0026gt; | `\u0026lt;u\u0026gt;underline\u0026lt;/u\u0026gt;` | `\u0026lt;u\u0026gt;\u0026lt;/u\u0026gt;` | Name Markdown HTML tag Emphasis *Emphasis* \u0026lt;em\u0026gt;\u0026lt;/em\u0026gt; Strong **Strong** \u0026lt;strong\u0026gt;\u0026lt;/strong\u0026gt; code `code` \u0026lt;code\u0026gt;\u0026lt;/code\u0026gt; Strikethrough ~~Strikethrough~~ \u0026lt;del\u0026gt;\u0026lt;/del Underline \u0026lt;u\u0026gt;underline\u0026lt;/u\u0026gt; \u0026lt;u\u0026gt;\u0026lt;/u\u0026gt; Footnotes 1You can create footnotes like this[^footnote]. 2 3[^footnote]: Here is the *text* of the **footnote**. will produce:\nYou can create footnotes like this1.\nThis is another footnote2.\nMouse on the ‚Äòfootnote‚Äô superscript to see content of the footnote.\nHorizontal Rules Horizontal Rules Horizontal Rules Horizontal Rules Horizontal Rules Horizontal Rules Horizontal Rules Input *** or --- on a blank line and press return will draw a horizontal line.\nLinks Markdown supports two style of links: inline and reference.\nIn both styles, the link text is delimited by [square brackets].\nTo create an inline link, use a set of regular parentheses immediately after the link text‚Äôs closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:\n1This is [an example](http://example.com/ \u0026#34;Title\u0026#34;) inline link. 2 3[This link](http://example.net/) has no title attribute. will produce:\nThis is an example inline link. (\u0026lt;p\u0026gt;This is \u0026lt;a href=\u0026quot;http://example.com/\u0026quot; title=\u0026quot;Title\u0026quot;\u0026gt;)\nThis link has no title attribute. (\u0026lt;p\u0026gt;\u0026lt;a href=\u0026quot;http://example.net/\u0026quot;\u0026gt;This link\u0026lt;/a\u0026gt; has no)\nInternal Links You can set the href to headers, which will create a bookmark that allow you to jump to that section after clicking. For example:\nCommand(on Windows: Ctrl) + Click This link will jump to header Block Elements. To see how to write that, please move cursor or click that link with ‚åò key pressed to expand the element into markdown source.\nReference Links Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:\n1This is [an example][id] reference-style link. 2 3Then, anywhere in the document, you define your link label like this, on a line by itself: 4 5[id]: http://example.com/ \u0026#34;Optional Title Here\u0026#34; In typora, they will be rendered like:\nThis is an example reference-style link.\nThe implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets ‚Äî e.g., to link the word ‚ÄúGoogle‚Äù to the google.com web site, you could simply write:\n1[Google][] 2And then define the link: 3 4[Google]: http://google.com/ In typora click link will expand it for editing, command+click will open the hyperlink in web browser.\nURLs Typora allows you to insert urls as links, wrapped by \u0026lt;brackets\u0026gt;.\n\u0026lt;i@typora.io\u0026gt; becomes i@typora.io.\nTypora will also auto link standard URLs. e.g: www.google.com.\nImages Image looks similar with links, but it requires an additional ! char before the start of link. Image syntax looks like this:\n1![Alt text](/path/to/img.jpg) 2 3![Alt text](/path/to/img.jpg \u0026#34;Optional title\u0026#34;) You are able to use drag \u0026amp; drop to insert image from image file or we browser. And modify the markdown source code by clicking on the image. Relative path will be used if image is in same directory or sub-directory with current editing document when drag \u0026amp; drop.\nFor more tips on images, please read http://support.typora.io//Images/\nEmphasis Markdown treats asterisks (*) and underscores (_) as indicators of emphasis. Text wrapped with one * or _ will be wrapped with an HTML \u0026lt;em\u0026gt; tag. E.g:\n1*single asterisks* 2 3_single underscores_ output:\nsingle asterisks\nsingle underscores\nGFM will ignores underscores in words, which is commonly used in code and names, like this:\nwow_great_stuff\ndo_this_and_do_that_and_another_thing.\nTo produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:\n1\\*this text is surrounded by literal asterisks\\* Typora recommends to use * symbol.\nStrong double *‚Äôs or _‚Äôs will be wrapped with an HTML \u0026lt;strong\u0026gt; tag, e.g:\n1**double asterisks** 2 3__double underscores__ output:\ndouble asterisks\ndouble underscores\nTypora recommends to use ** symbol.\nCode To indicate a span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:\n1Use the `printf()` function. will produce:\nUse the printf() function.\nStrikethrough GFM adds syntax to create strikethrough text, which is missing from standard Markdown.\n~~Mistaken text.~~ becomes Mistaken text.\nUnderline Underline is powered by raw HTML.\n\u0026lt;u\u0026gt;Underline\u0026lt;/u\u0026gt; becomes Underline.\nEmoji :happy: Input emoji with syntax üòÑ.\nUser can trigger auto-complete suggestions for emoji by pressing ESC key, or trigger it automatically after enable it on preference panel. Also, input UTF8 emoji char directly from Edit -\u0026gt; Emoji \u0026amp; Symbols from menu bar is also supported.\nInline Math To use this feature, first, please enable it in Preference Panel -\u0026gt; Markdown Tab. Then use $ to wrap TeX command, for example: $\\lim_{x \\to \\infty} \\exp(-x) = 0$ will be rendered as LaTeX command.\nTo trigger inline preview for inline math: input ‚Äú$‚Äù, then press ESC key, then input TeX command, a preview tooltip will be visible like below:\nHere is the text of the footnote.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nsecond footnote is here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://omgkill.github.io/post/jane-theme-preview/","tags":["preview","shortcodes","tag-6"],"title":"Jane Theme Preview"},{"categories":null,"contents":"Hugo is a static site engine written in Go.\nIt makes use of a variety of open source projects including:\nCobra Viper J Walter Weatherman Cast Learn more and contribute on GitHub.\n","permalink":"https://omgkill.github.io/about/","tags":null,"title":"About"},{"categories":["git"],"contents":"git ‰ΩøÁî® ËøúÁ®ã‰ªìÂ∫ìÁöÑ‰ΩøÁî® Êü•ÁúãËøúÁ®ã‰ªìÂ∫ì\ngit remote ÁúãÂà∞origin ËøôÊòØgitÁªô‰Ω†ÂÖãÈöÜÁöÑ‰ªìÂ∫ìÊúçÂä°Âô®ÁöÑ ÈªòËÆ§ÂêçÂ≠ó git remote -v ‰ºöÊòæÁ§∫ÂêçÂ≠ó‰∏éurlÔºåÊãâÂèñ‰∏éÊé®ÈÄÅ‰ºöÁã¨Á´ãÊòæÁ§∫ Ê∑ªÂä†ËøúÁ®ã‰ªìÂ∫ì\ngit remote add ‰ªéËøúÁ®ã‰ªìÂ∫ìÊãâÂèñ\ngit fetch [remote-name] fetch ÂëΩ‰ª§‰ºöÂ∞ÜÊï∞ÊçÆÊãâÂéªÂà∞‰Ω†ÁöÑÊú¨Âú∞‰ªìÂ∫ìÔºåÂÆÉÂπ∂‰∏ç‰ºöËá™Âä®ÂêàÂπ∂Êàñ‰øÆÊîπ‰Ω†ÂΩìÂâçÁöÑÂ∑•‰Ωú„ÄÇÂΩìÂáÜÂ§áÂ•ΩÊó∂‰Ω†ÂøÖÈ°ªÊâãÂä®Â∞ÜÂÖ∂ÂêàÂπ∂ÂÖ•‰Ω†ÁöÑÂ∑•‰Ωú git clone\nÂëΩ‰ª§‰ºöËá™Âä®Â∞ÜÂÖ∂Ê∑ªÂä†‰∏∫ËøúÁ®ã‰ªìÂ∫ì Âπ∂ÈªòËÆ§‰ª•‚Äòorigin‚Äô ‰∏∫ÁÆÄÂÜô git fetch origin ‰ºöÊäìÂèñÂÖãÈöÜÔºàÊàñ‰∏äÊ¨°ÊäìÂèñÔºâÂêéÊñ∞Êé®ÈÄÅÁöÑÊâÄÊúâÂ∑•‰Ωú ‰ºöËá™Âä®ËÆæÁΩÆÊú¨Âú∞masterÂàÜÊîØË∑üË∏™ÂÖãÈöÜÁöÑËøúÁ®ã‰ªìÂ∫ìÁöÑmasterÂàÜÊîØ git pull\nËá™Âä®ÊäìÂèñÁÑ∂ÂêéÂêàÂπ∂ËøúÁ®ãÂàÜÊîØÂà∞ÂΩìÂâçÂàÜÊîØ fetch ‰∏épullÂå∫Âà´\ngit fetchÔºö‰ªéËøúÁ®ãËé∑ÂèñÊúÄÊñ∞ÁâàÊú¨Âà∞Êú¨Âú∞Ôºå‰ΩÜ‰∏ç‰ºöËá™Âä® mergeÔºåÁî®‰∫é‰ªéËøúÁ®ãË∑üË∏™ÂàÜÊîØ‰∏ãËΩΩÂíåÊü•ÁúãÂÖ∂‰ªñ‰∫∫ÂÆåÊàêÁöÑÊúÄÊñ∞Êèê‰∫§Ôºå‰ΩÜ‰∏çÂ∞ÜËøô‰∫õÊèê‰∫§ÂêàÂπ∂Âà∞Êú¨Âú∞Â≠òÂÇ®Â∫ì‰∏≠„ÄÇÂÆÉ‰ªéËøúÁ®ãÂ≠òÂÇ®Â∫ì‰∏≠Ëé∑ÂèñÊõ¥ÊîπÂπ∂Â∞ÜÂÖ∂Â≠òÂÇ®Âú®Êú¨Âú∞Â≠òÂÇ®Â∫ì‰∏≠„ÄÇ\ngit pullÔºö‰ªéËøúÁ®ãËé∑ÂèñÊúÄÊñ∞ÁâàÊú¨Âπ∂ merge Âà∞Êú¨Âú∞ÔºåÂÆÉ‰ºöËá™Âä®Â∞ÜÊèê‰∫§ÂêàÂπ∂Âà∞ÊÇ®ÁöÑÊú¨Âú∞Â≠òÂÇ®Â∫ì‰∏≠ÔºåËÄåÊó†ÈúÄÊü•ÁúãÊèê‰∫§„ÄÇ\nÂèÇËÄÉÔºöhttps://worktile.com/kb/ask/22877.html\nÊü•ÁúãÂàÜÊîØ\ngit branch -a *rebaseÂíåmergeÂå∫Âà´*\nÂèÇËÄÉÔºöhttps://baijiahao.baidu.com/s?id=1726894961804450124\u0026amp;wfr=spider\u0026amp;for=pc\ngit IDEAÁöÑÂàÜÊîØÂêàÂπ∂Êó∂ÁöÑÂÜ≤Á™ÅÈóÆÈ¢òÊÄªÁªìÔºåmergeÂíårebaseÁöÑÂå∫Âà´_rebaseÂíåmergeÁöÑÂå∫Âà´_YHJÁöÑÂçöÂÆ¢-CSDNÂçöÂÆ¢\nÊí§Âõû\nÂú®ÂΩìÂâçÂàÜÊîØÔºåÊâìÂºÄÁªàÁ´ØÔºåÊâßË°åÂëΩ‰ª§ÂõûÈÄÄ git reset --hard commit_id„ÄÇ Êé®ÈÄÅÂà∞ËøúÁ®ã‰ªìÂ∫ì\ngit push origin master Â¶ÇÊûúËøúÁ®ã‰ªìÂ∫ì‰∏éÊú¨Âú∞ÊúâÂÜ≤Á™ÅÔºåÂèØ‰ª•ÂÖàÊäämasterÊãâÂèñ‰∏ãÊù•ÂêàÂπ∂ÔºåËß£ÂÜ≥ÂÆåÂÜ≤Á™ÅÔºåÂÜçÊé®ÈÄÅ Êü•ÁúãËøúÁ®ã‰ªìÂ∫ì\ngit remote show [remote-name] ÂÆû‰æãÔºögit remote show origin Êú¨Âú∞ËøúÁ®ã‰ªìÂ∫ìÁöÑÈáçÂëΩÂêç\ngit remote rename [ÂéüÂêçÂ≠ó] [Êñ∞ÂêçÂ≠ó] git remote rename pb paul git remote Êü•ÁúãÊú¨Âú∞ÁÆÄÁß∞ÊòØÂê¶‰øÆÊîπ Êú¨Âú∞ËøúÁ®ã‰ªìÂ∫ìÁöÑÂà†Èô§\ngit remote rm paul ÊâìÊ†áÁ≠æ ÂàóÂá∫Ê†áÁ≠æ git tag ÊêúÁ¥¢Êü•Êâæ git tag -l ‚Äôv1.8.5*‚Äò Ê†áÁ≠æÁ±ªÂûã ËΩªÈáèÊ†áÁ≠æ ÂæàÂÉè‰∏Ä‰∏™‰∏ç‰ºöÊîπÂèòÁöÑÂàÜÊîØ-ÂÆÉÁü•ËØÜ‰∏Ä‰∏™ÁâπÂÆöÊèê‰∫§ÁöÑÂºïÁî® ÈôÑÊ≥®Ê†áÁ≠æ Êó∂Â≠òÂÇ®ÂÜçgitÊï∞ÊçÆÂ∫ì‰∏≠ÁöÑ‰∏Ä‰∏™ÂÆåÊï¥ÂØπË±°Ôºå‰ªñ‰ª¨ÂèØ‰ª•Ë¢´Ê†°È™åÁöÑÔºöÂÖ∂‰∏≠ÂåÖÊã¨ÊâìÊ†áÁ≠æËÄÖÁöÑÂêçÂ≠ó„ÄÅÁîµÂ≠êÈÇÆ‰ª∂Âú∞ÂùÄ„ÄÅÊó•ÊúüÊó∂Èó¥ÔºõËøòÊúâ‰∏Ä‰∏™Ê†áÁ≠æ‰ø°ÊÅØÔºõÂπ∂‰∏îÂèØ‰ª•‰ΩøÁî®GUN Privacy Guard(GPG)Á≠æÂêç‰∏éÈ™åËØÅ ÂàõÂª∫ÈôÑÊ≥®Ê†áÁ≠æ git tag -a v1.4 -m ‚Äòmy version 1.4‚Äô -m ÈÄâÈ°πÊåáÂÆö‰∏Ä‰∏™Â∞Ü‰ºöÂ≠òÂÇ®ÂÜçÊ†áÁ≠æ‰∏≠ÁöÑ‰ø°ÊÅØ git show v1.4 Êü•ÁúãÊèê‰∫§‰ø°ÊÅØ ÂàõÂª∫ËΩªÈáèÊ†áÁ≠æ git tag v1.4 ÂêéÊúüÊâìÊ†áÁ≠æ ÂèØ‰ª•ÂØπËøáÂéªÁöÑÊèê‰∫§ÊâìÊ†áÁ≠æ Êü•ÁúãlogÔºå git log ‚Äîpretty=online git tag -a v1.2 [Ê†°È™åÂíåÔºå‰πüÂ∞±ÊòØcommentId] ÂÖ±‰∫´Ê†áÁ≠æ ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºågit push ÂëΩ‰ª§‰∏ç‰ºö‰º†ÈÄÅÊ†áÁ≠æÂà∞ËøúÁ®ã‰ªìÂ∫ìÊúçÂä°Âô®‰∏ä git push origin [tagname] ‰∏ÄÊ¨°ÊÄßÊé®ÈÄÅÂæàÂ§öÊ†áÁ≠æ git push origin \u0026ndash; tags Ê£ÄÂá∫Ê†áÁ≠æ git checkout -b [branchname] [tagname]7887 Á§∫‰æãÔºögit checkout -b version2 v2.0.0 Git Âà´Âêç git config \u0026ndash;global alias.co checkout git config ‚Äîglobal alias.ci commit ÂΩìËæìÂÖ•git commitÊó∂ÔºåÂè™ÈúÄË¶ÅËæìÂÖ•git ci ‰∏∫Ëß£ÂÜ≥ÂèñÊ∂àÊöÇÂ≠òÊñá‰ª∂ÁöÑÊòìÁî®ÊÄßÈóÆÈ¢òÔºåÂèØ‰ª•ÂêëGitÊ∑ªÂä†Ëá™Â∑±ÁöÑÂèñÊ∂àÊöÇÂ≠òÂà´ÂêçÔºö git config ‚Äîglobal alias.unstage ‚Äòreset HEAD ‚Äî‚Äô Ëøô‰ºö‰Ωø‰∏ãÈù¢ÁöÑ‰∏§‰∏™ÂëΩ‰ª§Á≠â‰ª∑Ôºö git unstage fileA git reset HEAD ‚Äî fileA Â¶ÇÊûúÊÉ≥Ë¶ÅÊâßË°åÂ§ñÈÉ®ÂëΩ‰ª§ÔºåÈúÄË¶ÅÂú®ÂëΩ‰ª§ÂâçÈù¢Âä†ÂÖ•ÔºÅÁ¨¶Âè∑ git config ‚Äîglobal alias.visual ‚Äò!gitk‚Äô Git ÂàÜÊîØ Êü•ÁúãÂêÑ‰∏™ÂàÜÊîØÂΩìÂâçÊâÄÊåáÁöÑÂØπË±° git log ‚Äîoneline ‚Äîdecorate ÂàáÊç¢ÂàÜÊîØ git checkout testing Êü•ÁúãÂàÜÂèâÂéÜÂè≤ git log ‚Äîoneline ‚Äîdecorate ‚Äîgraph -all ÂàÜÊîØÁöÑÊñ∞Âª∫ÂíåÂêàÂπ∂ Áé∞Âú®Êúâ‰∏™bugÔºåÈúÄË¶Å‰øÆÂ§ç„ÄÇÊµÅÁ®ãÂ¶Ç‰∏ã ÂàõÂª∫issueÂàÜÊîØ git checkout - b iss53 Êèê‰∫§‰∫Ü‰øÆÂ§ç‰ª£Á†Å Á∫ø‰∏äÊúâ‰∏™Á¥ßÊÄ•ÈóÆÈ¢ò git checkout master git checkout - b hotfix ‰øÆÊîπÊèê‰∫§ ËøêË°åÊµãËØï git checkout master git merge hotfix fast-forward ÔºåÁî±‰∫éÂΩìÂâçmasterÂàÜÊîØÊâÄÊåáÂêëÁöÑÊèê‰∫§ÊòØ‰Ω†ÂΩìÂâçÊèê‰∫§ÁöÑÁõ¥Êé•‰∏äÊ∏∏ÔºåÊâÄ‰ª•gitÂè™ÊòØÁÆÄÂçïÁöÑÂ∞ÜÊåáÈíàÂêëÂâçÁßªÂä®„ÄÇ git branch -d hotfix git checkout iss53 Â¶ÇÊûúÊÉ≥Ë¶ÅhotfixÁöÑ‰øÆÊîπÔºåÂèØ‰ª•git merge master ÂàÜÊîØÁÆ°ÁêÜ Ëé∑ÂèñÂΩìÂâçÂàÜÊîØÂàóË°® git branch *‰ª£Ë°®Áé∞Âú®Ê£ÄÂá∫ÁöÑÈÇ£‰∏Ä‰∏™ÂàÜÊîØ Êü•ÁúãÊØè‰∏Ä‰∏™ÂàÜÊîØÊúÄÂêéÁöÑÊèê‰∫§ git branch -v Êü•ÁúãÂì™‰∫õÂàÜÊîØÂ∑≤ÁªèÂêàÂπ∂Âà∞ÂΩìÂâçÂàÜÊîØ git branch ‚Äîmerged Âà†Èô§ÂàÜÊîØ git branch -d Âº∫Âà∂Âà†Èô§ git branch -D Êü•ÁúãÊâÄÊúâÂåÖÂê´Êú™ÂêàÂπ∂Â∑•‰ΩúÁöÑÂàÜÊîØ git branch ‚Äîno-merged ÂàÜÊîØÂºÄÂèëÂ∑•‰ΩúÊµÅÁ®ã ÊòæÁ§∫ÁöÑËé∑ÂèñËøúÁ®ãÂºïÁî®ÁöÑÂÆåÊï¥ÂàóË°® git ls-remote git remote show [‰ªìÂ∫ìÂêç] Ëé∑ÂæóËøúÁ®ãÂàÜÊîØÁöÑÊõ¥Â§ö‰ø°ÊÅØ ÂàõÂª∫ÂàÜÊîØ Ê≠£Â∏∏ÁöÑÔºögit checkout -b [branch] [remotename]/[branch] Âø´Êç∑ÊñπÂºèÔºögit checkout ‚Äîtrack origin/serverfix ‰øÆÊîπ‰∏äÊ∏∏ÂàÜÊîØ git branch -u origin/serverfix Êü•ÁúãËÆæÁΩÆÁöÑÊâÄÊúâË∑üË∏™ÂàÜÊîØ git branch -vv Êõ¥Êñ∞‰ªìÂ∫ìÊï∞ÊçÆ git fetch ‚Äîall Âà†Èô§ËøúÁ®ãÂàÜÊîØ git push origin ‚Äîdelete serverfix ÂêàÂπ∂ merge ‰∏é rebaseÔºåËøô‰∏§ÁßçÊï¥ÂêàÊñπÊ≥ïÁöÑÊúÄÁªàÁªìÊûúÊ≤°Êúâ‰ªª‰ΩïÂå∫Âà´Ôºå‰ΩÜÊòØrebase‰ΩøÂæóÊèê‰∫§ÂéÜÂè≤‰∏≠Êõ¥Âä†Êï¥Ê¥Å„ÄÇ‰Ω†Âú®Êü•Áúã‰∏Ä‰∏™ÁªèËøárebaseÁöÑÂàÜÊîØÂéÜÂè≤ËÆ∞ÂΩïÊó∂‰ºöÂèëÁé∞ÔºåÂ∞ΩÁÆ°ÂÆûÈôÖÁöÑÂºÄÂèëÂ∑•‰ΩúÊó∂Âπ∂Ë°åÁöÑÔºå‰ΩÜÂÆÉ‰ª¨Áúã‰∏äÂéªÂ∞±ÂÉèÊó∂ÂÖàÂêé‰∏≤Ë°åÁöÑ‰∏ÄÊ†∑ÔºåÊèê‰∫§ÂéÜÂè≤ÊòØ‰∏ÄÊù°Áõ¥Á∫øÊ≤°ÊúâÂàÜÂèâ Êó†ËÆ∫ÈÄöËøárebaseËøòÊòØÁ¨¨‰∏âÊñπÂêàÂπ∂ÔºåÊï¥ÂêàÁöÑÊúÄÁªàÁªìÊûúÊâÄÊåáÂêëÁöÑÂø´ÁÖßÂßãÁªàÊó∂‰∏ÄÊ†∑ÁöÑÔºåÂè™‰∏çËøáÊèê‰∫§ÂéÜÂè≤‰∏çÂêåÁΩ¢‰∫Ü„ÄÇrebaseÊòØÂ∞Ü‰∏ÄÁ≥ªÂàóÊèê‰∫§ÊåâÁÖßÂéüÊúâÊ¨°Â∫è‰æùÊ¨°Â∫îÁî®Âà∞Âè¶‰∏ÄÂàÜÊîØ‰∏äÔºåËÄåÂêàÂπ∂ÊòØÊúÄÁªàÁªìÊûúÂêàÂú®‰∏ÄËµ∑„ÄÇ ÊúâË∂£ÁöÑrebase ‰æãÂ≠ê ÂàõÂª∫ÂàÜÊîØserverÔºåÊèê‰∫§C3,C4 ‰ªéC3ÂàõÂª∫ÁâπÊÄßÂàÜÊîØclientÔºåÊèê‰∫§C8,C9 ÂõûÂà∞serverÂàÜÊîØÔºåÊèê‰∫§C10 ÂÅáËÆæ‰Ω†Â∏åÊúõÂ∞Üclient‰∏≠ÁöÑ‰øÆÊîπÂêàÂπ∂Âà∞‰∏ªÂàÜÊîØÂπ∂ÂèëÂ∏ÉÔºå‰ΩÜÊöÇÊó∂Âπ∂‰∏çÊÉ≥ÂêàÂπ∂server‰∏≠ÁöÑ‰øÆÊîπÔºåÂõ†‰∏∫ÂÆÉ‰ª¨ËøòÈúÄË¶ÅÁªèËøáÊõ¥ÂÖ®Èù¢ÁöÑÊµãËØï git rebase ‚Äîonto master server client Ëøô‰∏™ÊÑèÊÄùÊòØÔºåÊääclient‰∏éserverÁöÑÂÖ±ÂêåÁ•ñÂÖàÂêàÂπ∂ git checkout master git merge client server‰πüÂêàÂπ∂master git rebase master server rebaseÁöÑÈ£éÈô© ‰∏çË¶ÅÂØπÂú®‰Ω†ÁöÑ‰ªìÂ∫ìÂ§ñÊúâÂâØÊú¨ÁöÑÂàÜÊîØÊâßË°årebase Â¶ÇÊûúÂà´‰∫∫ÔºåpushÂêéÔºåÂèà ÈáçÊñ∞rebaseÔºåÈúÄË¶Å‰ΩøÁî®Ëøô‰∏™ÂëΩ‰ª§ git pull ‚Äîrebase Áõ∏ÂΩì‰∫éÔºögit fetch , git rebase master ÊÄªÁöÑÂéüÂàôÔºåÂè™ÂØπÂ∞öÊú™Êé®ÈÄÅÊàñÂàÜ‰∫´ÁªôÂà´‰∫∫ÁöÑÊú¨Âú∞‰øÆÊîπÊâßË°årebaseÊìç‰ΩúÊ∏ÖÁêÜÂéÜÂè≤Ôºå‰ªé‰∏çÂØπÂ∑≤Êé®ÈÄÅËá≥Âà´Â§ÑÁöÑÊèê‰∫§ÊâßË°årebaseÊìç‰ΩúÔºåËøôÊ†∑Ôºå‰Ω†ÊâçËÉΩ‰∫´ÂèóÂà∞‰∏§ÁßçÊñπÂºèÂ∏¶Êù•ÁöÑ‰æøÂà© Êèê‰∫§ÂáÜÂàô Á©∫ÁôΩÈîôËØØÊ£ÄÊü• git diff ‚Äîcheck ÊöÇÂ≠òÊñá‰ª∂ git add ‚Äîpatch ‰ºòË¥®Êèê‰∫§‰ø°ÊÅØÁöÑ‰π†ÊÉØ‰ºö‰ΩøGitÁöÑ‰ΩøÁî®‰∏éÂçè‰ΩúÂÆπÊòìÁöÑÂ§ö Âêë‰∏Ä‰∏™È°πÁõÆË¥°ÁåÆ Â∏¶‰∏ä-u ÂèÇÊï∞ÂÖ∂ÂÆûÂ∞±Áõ∏ÂΩì‰∫éËÆ∞ÂΩï‰∫ÜpushÂà∞ËøúÁ´ØÂàÜÊîØÁöÑÈªòËÆ§ÂÄºÔºåËøôÊ†∑ÂΩì‰∏ãÊ¨°Êàë‰ª¨ËøòÊÉ≥Ë¶ÅÁªßÁª≠pushÁöÑËøô‰∏™ËøúÁ´ØÂàÜÊîØÁöÑÊó∂ÂÄôÊé®ÈÄÅÂëΩ‰ª§Â∞±ÂèØ‰ª•ÁÆÄÂÜôÊàêgit pushÂç≥ÂèØ„ÄÇ git push -u origin featureA -u ÊòØ ‚Äîset-upstreamÁöÑÁÆÄÂÜôÔºåËØ•Ê†áËÆ∞‰∏∫‰πãÂêéËΩªÊùæÂú∞Êé®ÈÄÅÂíåÊãâÂéªÈÖçÁΩÆÂàÜÊîØ Êé®ÈÄÅËøúÁ®ãÂàÜÊîØ,featureBÊòØÊú¨Âú∞ÂàÜÊîØÔºåfeatureBeeÊòØËøúÁ®ãÂàÜÊîØ git push -u origin featureB:featureBee Êó•ÂøóËøáÊª§Âô®ÔºåË¶ÅiÊ±ÇGitÂè™ÊòæÁ§∫ÊâÄÊúâÂú®ÂêéÈù¢ÂàÜÊîØÔºå‰ΩÜ‰∏çÂú®ÂâçÈù¢ÂàÜÊîØÁöÑÊèê‰∫§ÂàóË°® git log issue54..origin/master Âè¶‰∏Ä‰∏™‰æãÂ≠êÔºögit log featureA..origin/featureA Ê≤°ÊúâÂêàÂπ∂Êó•Âøógit log ‚Äîno-merge issue54..origin/master Ê¥æÁîüÁöÑÂÖ¨ÂºÄÈ°πÁõÆ ÂêàÂπ∂‰øÆÊîπ ÂÖàÊääÁõÆÊ†áÂÖãÈöÜÂà∞Êú¨Âú∞ Êèê‰∫§‰øÆÊîπ github‰∏äÔºåforkÁõÆÊ†áÈ°πÁõÆÂà∞Ëá™Â∑±Ë¥¶Âè∑‰∏ã Ê∑ªÂä†Ëá™Â∑±ÁöÑËøúÁ®ã‰ªìÂ∫ìÂú∞ÂùÄÔºågit remote add myfork (url) git push -u myfork featureA ÂèëÈÄÅÊãâÂéªËØ∑Ê±Ç ‚Äîsquash ÈÄâÈ°πÊé•ÂèóË¢´ÂêàÂπ∂ÁöÑÂàÜÊîØ‰∏äÁöÑÊâÄÊúâÂ∑•‰ΩúÔºåÂπ∂Â∞ÜÂÖ∂ÂéãÁº©Ëá≥‰∏Ä‰∏™ÂèòÊõ¥ÈõÜÔºåÊòØ‰ªìÂ∫ìÂèòÊàê‰∏Ä‰∏™ÁúüÊ≠£ÁöÑÂêàÂπ∂ÁöÑÁä∂ÊÄÅÔºåËÄå‰∏ç‰ºöÁúüÁöÑÁîüÊàê‰∏Ä‰∏™ÂêàÂπ∂Êèê‰∫§ ‚Äîno-commit ÈÄâÈ°πÂú®ÈªòËÆ§ÂêàÂπ∂ËøáÁ®ã‰∏≠ÂèØ‰ª•Áî®Êù•Âª∂ËøüÁîüÊàêÂêàÂπ∂Êèê‰∫§ Áª¥Êä§È°πÁõÆ Â∫îÁî®ÈÇÆ‰ª∂Ë°•‰∏Å ‰ΩøÁî®applyÂëΩ‰ª§Â∫îÁî®Ë°•‰∏Å git apply /temp/patch-ruby-client.patch git apply ‰∏é patch -p1 ÂëΩ‰ª§Êù•Â∫îÁî®Ë°•‰∏ÅÂá†‰πéÊòØÁ≠âÊïàÁöÑÔºå‰ΩÜËøôÁßçÊñπÂºèÊõ¥‰∏•Ê†º„ÄÇ git applyÂëΩ‰ª§ÈááÁî®‰∫Ü‰∏ÄÁßç‚ÄúÂÖ®ÈÉ®Â∫îÁî®ÔºåÂê¶ÂàôÂÖ®ÈÉ®Êí§ÈîÄ‚Äù ÂèØ‰ª•‰ΩøÁî®git apply Êù•Ê£ÄÊü•Ë°•‰∏ÅÊòØÂê¶ÂèØ‰ª•È°∫Âà©Â∫îÁî® git apply ‚Äîcheck xxx.patch ‰ΩøÁî®amÂëΩ‰ª§Â∫îÁî®Ë°•‰∏Å ÊâæÂà∞ÂàÜÊîØÁöÑÂÖ±ÂêåÁ•ñÂÖà git merge-base contrib master git diff master..contrib ËØ•ÂëΩ‰ª§‰ªÖ‰ºöÊòæÁ§∫Ëá™ÂΩìÂâçÁâπÊÄßÂàÜÊîØ‰∏émasterÂàÜÊîØÁöÑÂÖ±ÂêåÁ•ñÂÖàËµ∑ÔºåËØ•ÂàÜÊîØ‰∏≠ÁöÑÂ∑•‰Ωú„ÄÇ Âè¶‰∏ÄÁßçÂ∞ÜÂºïÂÖ•ÁöÑÂ∑•‰ΩúËΩ¨ÁßªÂà∞ÂÖ∂‰ªñÂàÜÊîØÁöÑÊñπÊ≥ïÊòØÊã£ÈÄâ„ÄÇ git cherry-pick [git commit id] ‰∏∫ÂèëÂ∏ÉÊâìÊ†áÁ≠æ git tag -s v1.5 -m ‚Äòmy signed 1.5 tag‚Äô Âø´ÁÖßÂΩíÊ°£ git archive master ‚Äîprefix=‚Äôproject/‚Äô | gzip \u0026gt; ‚Äògit describe master‚Äô.tar.gz Âà∂‰ΩúÊèê‰∫§ÁÆÄÊä• git shortlog ‚Äîno-merges mater ‚Äînot v1.0.1 ","permalink":"https://omgkill.github.io/post/git/git%E7%9A%84%E4%BD%BF%E7%94%A8/","tags":["git"],"title":"git ‰ΩøÁî®"},{"categories":null,"contents":"wiki.js ÂÆâË£ÖÊêúÁ¥¢ Êï¥‰ΩìÂÆâË£ÖÔºåÂèÇËÄÉ https://www.bilibili.com/read/cv16951722/ ÂèÇËÄÉÂÆâË£ÖElasticSearch https://zhuanlan.zhihu.com/p/257867352 ÂÆâË£ÖÂ•ΩÂêéÔºåÈúÄË¶Årebuild Note that if you already have content in your wiki, you must click on Rebuild Index afterwards to import all your existing content into the search engine. Any change (new, edit, delete page) will be handled automatically from this point forward.\nYour content here\n","permalink":"https://omgkill.github.io/bak/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1/wikijs/wiki%E6%90%9C%E7%B4%A2/","tags":null,"title":"wikiÊêúÁ¥¢"},{"categories":null,"contents":"wiki.js ÂÆâË£ÖÊêúÁ¥¢ Êï¥‰ΩìÂÆâË£ÖÔºåÂèÇËÄÉ https://www.bilibili.com/read/cv16951722/ ÂèÇËÄÉÂÆâË£ÖElasticSearch https://zhuanlan.zhihu.com/p/257867352 ÂÆâË£ÖÂ•ΩÂêéÔºåÈúÄË¶Årebuild Note that if you already have content in your wiki, you must click on Rebuild Index afterwards to import all your existing content into the search engine. Any change (new, edit, delete page) will be handled automatically from this point forward.\nYour content here\n","permalink":"https://omgkill.github.io/post/knowledgesite/wiki%E6%90%9C%E7%B4%A2/","tags":null,"title":"wikiÊêúÁ¥¢"},{"categories":null,"contents":" windowsÁ≥ªÁªüË¶ÅÊ±Ç Á≥ªÁªüÊòØ‰∏ì‰∏öÁâà Á≥ªÁªüÁâàÊú¨Âè∑Windows10 2018 AprilÔºàWindows 1803ÔºâÂèä‰ª•‰∏äÁâàÊú¨ ÂÆâË£ÖÈúÄË¶ÅÁöÑÂäüËÉΩ ÊâìÂºÄÊéßÂà∂Èù¢Êùø -\u0026gt; ÊêúÁ¥¢ÂêØÂä®ÊàñÂÖ≥Èó≠WindowsÂäüËÉΩ -\u0026gt; ÈÄâÊã©‰ª•‰∏ãÂäüËÉΩ -\u0026gt; ÁÇπÂáªÁ°ÆÂÆö -\u0026gt; ÂÆâË£Ö -\u0026gt; ÈáçÂêØ Êõ¥Êñ∞wsl2 ‰∏ãËΩΩÂÆâË£Ö https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi Âú®ÁÆ°ÁêÜÂëò‰∏ãÊâßË°åÂëΩ‰ª§ wsl \u0026ndash;set-default-version 2 ÈúÄË¶ÅÊõ¥Â§öÁöÑËÆæÁΩÆÂèÇËÄÉ https://docs.microsoft.com/zh-cn/windows/wsl/setup/environment https://docs.microsoft.com/zh-cn/windows/wsl/tutorials/gui-apps https://docs.microsoft.com/en-us/windows/wsl/install-manual Êõ¥Êñ∞wsl2ÂÜÖÊ†∏ - Âú®ÁÆ°ÁêÜÂëò‰∏ãÊâßË°åÂëΩ‰ª§ Êõ¥Êñ∞Ôºöwsl \u0026ndash;update ÈáçÂêØÔºöwsl \u0026ndash;shutdown ÂÆâË£Öcentos7Â≠êÁ≥ªÁªü ‰∏ãËΩΩÂú∞ÂùÄÔºåÂØπÂ∫îcentos7 https://github.com/wsldl-pg/CentWSL/releases/ Ëß£ÂéãÂà∞ÊåáÂÆöÁõÆÂΩï ÁÇπÂáªcentos7.exe,‰ºöËá™Âä®ÂÆâË£Ö ÂÆåÊàêÂêéÔºåÊàë‰ª¨Êü•ÁúãÂΩìÂâçÂ≠êÁ≥ªÁªü ÂëΩ‰ª§Ë°å‰∏ãÊâßË°åÔºöwsl -l -v ËÆæÁΩÆcentos7‰∏∫ÈªòËÆ§Â≠êÁ≥ªÁªü wslconfig /s CentOS7 wsl ËøõÂÖ•centos7,Êü•ÁúãÁ≥ªÁªü‰ø°ÊÅØ cat /etc/redhat-release ÁõÆÂâç‰∏∫Ê≠¢Ôºåwindows‰∏ãlinuxÂ≠êÁ≥ªÁªüÂ∑≤ÂÆâË£ÖÂÆåÊàêÔºåÊé•‰∏ãËøûÂÆâË£Ödocker docker ‰∏ãËΩΩÂú∞ÂùÄ https://www.docker.com/get-started/ ÈÄâÊã©wsl2ÂÆâË£Ö ÂÆâË£ÖÂÆåÊàêÂêéÔºåÈúÄË¶ÅÊîπÁöÑÈÖçÁΩÆ Âä†‰ªìÂ∫ìÂú∞ÂùÄ docker‰πüÂÆâË£ÖÂÆåÊàê ÂêØÂä®dockerÂëΩ‰ª§ ÈúÄË¶ÅÊääÊúçidÔºàSERVER_IDÔºâÊîπ‰∏∫Ëá™Â∑±ÁöÑÊúçid 1docker run -d --privileged --rm --name game -h game -v C:\\Users\\Administrator\\Desktop\\td\\ClashOfKingProject:/home/ams2/ClashOfKingProject --env SERVER_ID=11 -p 8080:8080 -p 8088:8088 -p 8788:8788 -v redis_data:/home/elex/redis/data 10.0.3.2:5001/developer/game ÂÖºÂÆπÁöÑÊ®°ÊãüÂô® ‰∏ãËΩΩÂú∞ÂùÄ https://www.bluestacks.com/download.html psÔºöwindows ‰∏ã docker‰∏éwslÂç†Áî®ÂÜÖÂ≠òÂ§™È´ò‰∫ÜÔºå‰∏çÂª∫ËÆÆÁî® ","permalink":"https://omgkill.github.io/post/docker/windows%E5%B9%B3%E5%8F%B0%E4%BD%BF%E7%94%A8docker%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%9C%8D/","tags":["windows","docker"],"title":"windowsÂπ≥Âè∞‰ΩøÁî®dockerÂêØÂä®ÊµãËØïÊúç"},{"categories":null,"contents":"ÈÉ®ÁΩ≤WIKI.js wikiÁöÑ‰ªãÁªçÂú∞ÂùÄ\nhttps://sspai.com/post/78945 wiki ÁöÑdocker composeÊñá‰ª∂\n1version: \u0026#34;3\u0026#34; 2services: 3 4 db: 5 image: postgres:11-alpine 6 environment: 7 POSTGRES_DB: wiki 8 POSTGRES_PASSWORD: wikijsrocks 9 POSTGRES_USER: wikijs 10 logging: 11 driver: \u0026#34;none\u0026#34; 12 restart: unless-stopped 13 volumes: 14 - db-data:/var/lib/postgresql/data 15 16 wiki: 17 image: ghcr.io/requarks/wiki:2 18 depends_on: 19 - db 20 environment: 21 DB_TYPE: postgres 22 DB_HOST: db 23 DB_PORT: 5432 24 DB_USER: wikijs 25 DB_PASS: wikijsrocks 26 DB_NAME: wiki 27 restart: unless-stopped 28 ports: 29 - \u0026#34;80:3000\u0026#34; 30 31volumes: 32 db-data: ÂÆâË£Ödocker\nyum install -y docker ÂÆâË£Ödocker compose\ncurl -L https://github.com/docker/compose/releases/download/1.23.1/docker-compose-`uname -s-uname -m` \u0026gt; /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose curl -L https://raw.githubusercontent.com/docker/compose/1.29.1/contrib/completion/bash/docker-compose \u0026gt; /etc/bash_completion.d/docker-compose Êä•Èîô1:Cannot connect to the Docker daemon at unix:///var/run/docker.sock\nmv /usr/bin/systemctl /usr/bin/systemctl.old curl https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl.py \u0026gt; /usr/bin/systemctl chmod +x /usr/bin/systemctl Âú®cmd‰∏ãÔºå wsl \u0026ndash;shutdown Âú®cmd‰∏ãÔºå wsl ÂêØÂä®ÊúçÂä°\nservice docker start docker-compose up -d Êä•Èîô2:wsl Cannot start service db: oci runtime error: systemd cgroup flag passed, but systemd support for mana\n1I just performed the following steps, and it appears that the error has disappeared. FYI. 2 3Re-enable Hyper-V and restart the computer. 4Edit (or create) the file /etc/wsl.conf in WSL, and add the follow lines: 5[boot] 6systemd=true 7Run wsl --shutdown as an administrator in PowerShell to close the WSL instance, and then restart WSL. 8After logging back into WSL, I found that the systemctl command could be used properly and the error had disappeared. At the moment, my Docker seems to be running well. - ÂèÇËÄÉÔºöhttps://github.com/microsoft/WSL/issues/9868 ","permalink":"https://omgkill.github.io/bak/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1/wikijs/%E5%88%9B%E5%BB%BAwiki.js/","tags":null,"title":"ÂàõÂª∫wiki.js"},{"categories":null,"contents":"ÈÉ®ÁΩ≤WIKI.js wikiÁöÑ‰ªãÁªçÂú∞ÂùÄ\nhttps://sspai.com/post/78945 wiki ÁöÑdocker composeÊñá‰ª∂\n1version: \u0026#34;3\u0026#34; 2services: 3 4 db: 5 image: postgres:11-alpine 6 environment: 7 POSTGRES_DB: wiki 8 POSTGRES_PASSWORD: wikijsrocks 9 POSTGRES_USER: wikijs 10 logging: 11 driver: \u0026#34;none\u0026#34; 12 restart: unless-stopped 13 volumes: 14 - db-data:/var/lib/postgresql/data 15 16 wiki: 17 image: ghcr.io/requarks/wiki:2 18 depends_on: 19 - db 20 environment: 21 DB_TYPE: postgres 22 DB_HOST: db 23 DB_PORT: 5432 24 DB_USER: wikijs 25 DB_PASS: wikijsrocks 26 DB_NAME: wiki 27 restart: unless-stopped 28 ports: 29 - \u0026#34;80:3000\u0026#34; 30 31volumes: 32 db-data: ÂÆâË£Ödocker\nyum install -y docker ÂÆâË£Ödocker compose\ncurl -L https://github.com/docker/compose/releases/download/1.23.1/docker-compose-`uname -s-uname -m` \u0026gt; /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose curl -L https://raw.githubusercontent.com/docker/compose/1.29.1/contrib/completion/bash/docker-compose \u0026gt; /etc/bash_completion.d/docker-compose Êä•Èîô1:Cannot connect to the Docker daemon at unix:///var/run/docker.sock\nmv /usr/bin/systemctl /usr/bin/systemctl.old curl https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl.py \u0026gt; /usr/bin/systemctl chmod +x /usr/bin/systemctl Âú®cmd‰∏ãÔºå wsl \u0026ndash;shutdown Âú®cmd‰∏ãÔºå wsl ÂêØÂä®ÊúçÂä°\nservice docker start docker-compose up -d Êä•Èîô2:wsl Cannot start service db: oci runtime error: systemd cgroup flag passed, but systemd support for mana\n1I just performed the following steps, and it appears that the error has disappeared. FYI. 2 3Re-enable Hyper-V and restart the computer. 4Edit (or create) the file /etc/wsl.conf in WSL, and add the follow lines: 5[boot] 6systemd=true 7Run wsl --shutdown as an administrator in PowerShell to close the WSL instance, and then restart WSL. 8After logging back into WSL, I found that the systemctl command could be used properly and the error had disappeared. At the moment, my Docker seems to be running well. - ÂèÇËÄÉÔºöhttps://github.com/microsoft/WSL/issues/9868 ","permalink":"https://omgkill.github.io/post/knowledgesite/%E5%88%9B%E5%BB%BAwiki.js/","tags":null,"title":"ÂàõÂª∫wiki.js"},{"categories":null,"contents":"‰∏ÄÂùóÂ§çÊùÇÁöÑ‰ª£Á†ÅÂ¶Ç‰ΩïÂÜô ‰ª•‰ºòÂåñÊù•‰∫ÜÔºåÈúÄË¶ÅÂä†‰∏ÄÁÇπÈÄªËæë„ÄÇ‰ΩÜÂä†ËøôÁÇπÈÄªËæëÂØºËá¥‰ª£Á†ÅÈÄªËæëÊõ¥Â§çÊùÇ„ÄÇÂ∫îËØ•Â¶Ç‰ΩïÂÜôÂë¢ ÊñπÊ°àÊúâ‰ª•‰∏ãÂá†Áßç ÊîπÂä®ÊúÄÂ∞èÔºå‰ª£Á†ÅÈÄªËæëÊ≠£Â∏∏Ë∑ëÔºå‰ΩÜ‰∏çÂÆπÊòìÁêÜËß£Ôºå‰∏îÁêÜËß£ÈîôËØØ ÊîπÂä®‰∏≠Á≠âÔºå‰ΩÜÈÄªËæëÊ∑∑‰π± ÊîπÂä®Êï¥‰ΩìÔºå‰ΩÜ‰∏öÂä°ÈÄªËæëÂàÜÁ¶ªÂ∞ÅË£ÖÔºåÊõ¥ÂÆπÊòìÁêÜËß£ Your content here ","permalink":"https://omgkill.github.io/bak/%E4%BB%A3%E7%A0%81%E6%8C%87%E5%8D%97/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E5%A4%8D%E6%9D%82%E7%9A%84%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91/","tags":null,"title":"‰ª£Á†Å"},{"categories":null,"contents":"‰ª£Á†ÅËß£ÂÜ≥ÊñπÊ°à\n1. ÈóÆÈ¢òÔºöÈÄªËæëÊúâÁÇπÂ§çÊùÇÔºåËøòË¶ÅÂú®Â§çÊùÇÁöÑÈÄªËæë‰∏ä‰øÆÊîπ - Ëß£ÂÜ≥ÊñπÊ°àÔºö - 1. ÊîπÂä®Â∞èÔºå‰ª£Á†ÅÊâßË°åÊòØÊ≤°ÈóÆÈ¢ò„ÄÇ‰ΩÜ‰∏çÂÆπÊòìÁêÜËß£ - 2. ÊîπÂä®Â§ßÔºå‰ª£Á†ÅÊòØËß£ÊûÑÁöÑ„ÄÇÊõ¥ÂÆπÊòìÁêÜËß£ - ÊúÄÁªàËß£ÂÜ≥ - ÈÄâÊã©ÁöÑÊñπÊ°à2 - ÂéüÂõ†Ôºö - ÁªìÊûÑÊ∏ÖÊô∞ÔºåÊõ¥ÂÆπÊòìÁêÜËß£ - reviewer‰πüÊõ¥ÂÆπÊòìÁúãÊòéÁôΩÔºåÁ°Æ‰øùÊ≤°ÊúâÈóÆÈ¢ò 2. ÈóÆÈ¢òÔºöleaderÂ∏åÊúõÂ§çÁî®ÂÖ±ÂêåÁöÑÈÄªËæëÔºå‰ΩÜÈÖçÁΩÆÂç¥ÊòØÁã¨Á´ãÁöÑÔºåÊ≤°ÊúâÁî®ÂÖ±ÂêåÁöÑ„ÄÇÂêåÊó∂ÈÖçÁΩÆÂèàÊ∑±ÂÖ•ÂµåÂÖ•Âà∞ÈÄªËæëÁöÑÂêÑÂ§Ñ - leaderÂ∏åÊúõÁöÑ - Â§çÁî®ÂÖ±ÂêåÈÄªËæëÔºåÂèØ‰ª•Áî®Ê®°ÊùøÊñπÊ≥ïËß£ÂÜ≥ - Êàë‰∏ÄÂºÄÂßãÁöÑÂÅöÊ≥ï - Âè™ÂÖ±Áî®‰∏Ä‰∏™Êé•Âè£ÔºåÈÄªËæë‰ª£Á†ÅÊòØcopyÁöÑ - ËøôÊ†∑Â∞±ÂèàÂÜ≤Á™Å‰∫Ü„ÄÇ - ÊúÄÂêéÊñπÊ°à - ‰ΩøÁî®ÈÄÇÈÖçÂô®Ê®°ÂºèÔºåÈÄöËøá‰∏Ä‰∏™ÈÖçÁΩÆÁ±ªÂÖ≥ËÅî‰∏§‰∏™Áã¨Á´ãÁöÑÈÖçÁΩÆ - ËøôÊ†∑Â∫ïÂ±ÇÁöÑÈÖçÁΩÆËØªÂèñÂ∞±ÊòØÂÖ±ÂêåÁöÑÔºå‰∏çÈúÄË¶ÅÂÅöÁâπÊÆäÂ§ÑÁêÜ„ÄÇÂêéÁª≠Áõ∏ÂÖ≥ÁöÑÊ¥ªÂä®‰πüÂèØ‰ª•ËøôÊ†∑Â§ÑÁêÜ - ÂàõÂª∫‰∏Ä‰∏™stageÁ±ªÔºåÁÑ∂ÂêéÂÜçÂàõÂª∫stageGcÁ±ªÂπ∂ÁªßÊâøstage„ÄÇÂêåÊó∂‰∏Ä‰∏™ÈÖçÁΩÆËß£ÊûêÁ±ª ","permalink":"https://omgkill.github.io/post/%E4%BB%A3%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","tags":["‰ª£Á†Å"],"title":"‰ª£Á†ÅËß£ÂÜ≥ÊñπÊ°à"},{"categories":["docker"],"contents":"ams2 ÂéãÊµãÊúçgameÊúçÂä°ÂÆπÂô®Âåñ Áî±‰∫éÂéãÊµãÈÉΩÊòØÊâæÁ©∫Èó≤ÁöÑÊú∫Âô®Êù•ÊµãËØïÔºåÊâÄ‰ª•ÊØèÊ¨°ÂéãÊµãÈÉΩË¶ÅÈáçÊñ∞ÈÉ®ÁΩ≤ÁéØÂ¢ÉÔºå‰∏∫‰∫ÜÁÆÄÂåñÊµÅÁ®ãÔºåÊÉ≥ÈÄöËøádockerÁÆÄÂåñÊìç‰Ωú\nÂèÇËÄÉlostÁßÅÊúçÂÅöÁöÑ‰øÆÊîπ\nlostÁßÅÊúç:http://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=75476077 Êñá‰ª∂Ë∑ØÂæÑ\nhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds ‰ΩøÁî®jenkinsÊûÑÂª∫dockerÈïúÂÉè\njenkinsÂú∞ÂùÄÔºöhttp://10.0.3.2:7005/ ‰ΩøÁî®nexus3‰Ωú‰∏∫dockerÈïúÂÉè‰ªìÂ∫ì\n‰ªìÂ∫ìÂú∞ÂùÄÔºöhttp://10.0.3.2:8082/ docker ÁÆ°ÁêÜÁïåÈù¢\nÂú∞ÂùÄÔºöhttp://10.0.3.2:9000/ ÂÖ≥‰∫ébaseÁöÑÊûÑÂª∫\nbaseÁöÑÊÑèÊÄùÊòØÊê≠Âª∫‰∏Ä‰∏™Âü∫Á°ÄÁéØÂ¢É\nÂåÖÂê´cetos7„ÄÅjdkÂÆâË£Ö„ÄÅmysqlÂÆâË£Ö„ÄÅredisÂÆâË£Ö„ÄÅsshÂÆâË£Ö\njenkinsÊûÑÂª∫base\nËøõÂÖ•jenkinsÁïåÈù¢ÔºåÁÇπÂáªbuild_ams2_base\n‚Äã\nÂÜçÁÇπÂáªÁ´ãÂç≥ÊûÑÂª∫ÔºåÂ∞±‰ºöËá™Âä®ÁºñËØëÔºåÂπ∂ÁºñËØëÊé®ÈÄÅÂà∞‰ªìÂ∫ì\njenkinsÈÖçÁΩÆÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/jenkins/build_ams2_base.jenkins\ndockerfile‰ª•ÂèäÂÖ∂‰ªñÊñá‰ª∂Ôºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/docker/base\nÂÖ≥‰∫éams2ÁöÑÊûÑÂª∫\nËøô‰∏™Â∞±ÊòØÁúüÊ≠£ÊûÑÂª∫gameÊúçÂä° ÂåÖÂê´redisÂêØÂä®„ÄÅmysqlÂêØÂä®„ÄÅmysqlÊï∞ÊçÆÂØºÂÖ•„ÄÅgameÈÉ®ÁΩ≤Êñá‰ª∂„ÄÅgameÂêØÂä® jenkinsÊûÑÂª∫base ËøõÂÖ•jenkinsÁïåÈù¢ÔºåÁÇπÂáªbuild_ams2_ds ÂÜçÁÇπÂáªÁ´ãÂç≥ÊûÑÂª∫ÔºåÂ∞±‰ºöËá™Âä®ÁºñËØëÔºåÂπ∂ÁºñËØëÊé®ÈÄÅÂà∞‰ªìÂ∫ì jenkinsÈÖçÁΩÆÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/jenkins/build_ams2_ds.jenkins dockerfile‰ª•ÂèäÂÖ∂‰ªñÊñá‰ª∂Ôºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/docker/ams2 ËØ¥‰∏Ä‰∏ãbuild_ams2_base Ëøô‰∏™‰ªªÂä°Â¶Ç‰ΩïÂàõÂª∫ÁöÑ„ÄÇbuild_ams2_dsÂêåÁêÜ\nÁÇπÂáªÊñ∞Âª∫‰ªªÂä°Ôºå ËæìÂÖ•‰ªªÂä°ÂêçÂ≠óÔºåÁÇπÂáªÊµÅÊ∞¥Á∫øÔºåÂÜçÁÇπÂáªÊä•Èîô Â°´ÂÜôÊèèËø∞ÔºåÁÇπÂáª‰∏çÂÖÅËÆ∏Âπ∂ÂèëÊûÑÂª∫ ÊåâÁÖßÂ¶Ç‰∏ãÈÖçÁΩÆÔºåCredentialsÊòØsvnÁöÑË¥¶Âè∑ÂØÜÁ†Å ËøòÊúâ‰∏Ä‰∏™ËÑöÊú¨Ë∑ØÂæÑÔºåËøô‰∏™ÊòØÁõ∏ÂØπË∑ØÂæÑ„ÄÇÁõ∏ÂØπ‰∫ésvn downÁöÑÁõÆÂΩï ÁÇπÂáª‰øùÂ≠òÂ∞±Â•Ω‰∫Ü_ ","permalink":"https://omgkill.github.io/post/docker/game%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8%E5%8C%96/","tags":["docker","ÁΩëÁªú"],"title":"ams2 ÂéãÊµãÊúçgameÊúçÂä°ÂÆπÂô®Âåñ"},{"categories":["docker"],"contents":"#Docker Ë∑®‰∏ªÊú∫ÂÆπÂô®ÈÄö‰ø°ÂÆûË∑µ\nDockerOverlayÁΩëÁªú\nOverlayÊòØ‰∏ÄÁßçË¶ÜÁõñÂú®‰∏ªÊú∫‰∏äÁöÑËôöÊãüÁΩëÁªúÔºåÊàëÁêÜËß£ÁöÑoverlay‰ªñÈúÄË¶ÅÂÄüÂä©Êèí‰ª∂ÊàñÂ∑•ÂÖ∑ÂÆåÊàêÂØπÊï∞ÊçÆÁöÑ‰øùÂ≠òÂíåËΩ¨Âèë„ÄÇÊàë‰ª¨ËøôÈáå‰ΩøÁî®etcdÊù•ÂÆåÊàêoverlayÁöÑË∑®‰∏ªÊú∫ÂÆπÂô®ÈÄö‰ø° Êú¨Êñá‰ª•‰∏§Âè∞Êú∫Âô®‰∏∫‰æãÔºåipÂàÜÈÖçÊòØ 10.0.3.2 ‰∏é 10.0.3.21\nÊ£ÄÊü•‰∏§Âè∞Êú∫Âô®hostnameÊòØÂê¶‰∏çÂêåÔºåÂ¶ÇÊûúÁõ∏ÂêåÈúÄË¶Å‰øÆÊîπ„ÄÇ‰∏çÁÑ∂Êó†Ê≥ïËÅîÈÄö\n‰∏§Âè∞Êú∫Âô®ÂÆâË£Ödocker\nyum install -y docker ‰øÆÊîπdockerÈÖçÁΩÆ,ÊåáÂÆöÂ§ñÈÉ®Â≠òÂÇ®‰ΩøÁî®etcdÔºå/etc/docker/daemon.json Âä†Â¶Ç‰∏ãÊï∞ÊçÆ\n‰∏ªÊú∫10.0.3.2 \u0026ldquo;cluster-store\u0026rdquo;:\u0026ldquo;etcd://10.0.3.2:2379\u0026rdquo;,\u0026ldquo;cluster-advertise\u0026rdquo;:\u0026ldquo;10.0.3.2:2375\u0026rdquo; ‰∏ªÊú∫10.0.3.21 \u0026ldquo;cluster-store\u0026rdquo;:\u0026ldquo;etcd://10.0.3.21:2379\u0026rdquo;,\u0026ldquo;cluster-advertise\u0026rdquo;:\u0026ldquo;10.0.3.21:2375\u0026rdquo; ÈáçÂêØdocker\nsystemctl daemon-reload systemctl restart docker ÂêØÂä®etcd\n‰∏ªÊú∫10.0.3.2, etcdËäÇÁÇπÂêç‰∏∫node1 1 docker run -d --name etcd --rm \\ 2 --publish 2379:2379 \\ 3 --publish 2380:2380 \\ 4 --env ALLOW_NONE_AUTHENTICATION=yes \\ 5 --env ETCD_NAME=node1 \\ 6 --env ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380 \\ 7 --env ETCD_ADVERTISE_CLIENT_URLS=http://10.0.3.2:2379 \\ 8 --env ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379 \\ 9 --env ETCD_INITIAL_ADVERTISE_PEER_URLS=http://10.0.3.2:2380 \\ 10 --env ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster \\ 11 --env ETCD_INITIAL_CLUSTER=node1=http://10.0.3.2:2380,node2=http://10.0.3.21:2380 \\ 12 --env ETCD_INITIAL_CLUSTER_STATE=new \\ 13 bitnami/etcd:3.5.3 etcd --enable-v2 ‰∏ªÊú∫10.0.3.21, etcdËäÇÁÇπÂêç‰∏∫node1 1docker run -d --name etcd --rm \\ 2--publish 2379:2379 \\ 3--publish 2380:2380 \\ 4--env ALLOW_NONE_AUTHENTICATION=yes \\ 5--env ETCD_NAME=node2 \\ 6--env ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380 \\ 7--env ETCD_ADVERTISE_CLIENT_URLS=http://10.0.3.21:2379 \\ 8--env ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379 \\ 9--env ETCD_INITIAL_ADVERTISE_PEER_URLS=http://10.0.3.21:2380 \\ 10--env ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster \\ 11--env ETCD_INITIAL_CLUSTER=node1=http://10.0.3.2:2380,node2=http://10.0.3.21:2380 \\ 12--env ETCD_INITIAL_CLUSTER_STATE=new \\ 13bitnami/etcd:3.5.3 etcd --enable-v2 Êü•Áúãetcd node\n1[root@ams2-10 ~]# docker exec -it etcd etcdctl member list 2796e13f38b3a972b, started, node2, http://10.0.3.21:2380, http://10.0.3.21:2379, false 3ff63796d3826f6b6, started, node1, http://10.0.3.2:2380, http://10.0.3.2:2379, false ÂàõÂª∫overlay network\n‰∏ªÊú∫10.0.3.2\n1 [root@ams2-10 SFS2X]# docker network create -d overlay etcdnet 2 f2c12e0259409c0f11c9c4a4a585753d46a80ac60c336625fd48e5322be9084e Êü•ÁúãÁΩëÁªúÔºåÂèëÁé∞Â§ö‰∫ÜÂàöÂàöÂàõÂª∫ÁöÑetcdnet.ËÄå‰∏îscopeÊòØglobalÁöÑ 1 [root@ams2-10 SFS2X]# docker network ls 2 NETWORK ID NAME DRIVER SCOPE 3 f406ad6eb59c bridge bridge local 4 f2c12e025940 etcdnet overlay global 5 097d3b78ec65 host host local 6 02d4e89d5af5 none null local Êàë‰ª¨inspect‰∏ãetcdnet‰ø°ÊÅØ 1 [root@ams2-10 SFS2X]# docker network inspect etcdnet 2 [ 3 { 4 \u0026#34;Name\u0026#34;: \u0026#34;etcdnet\u0026#34;, 5 \u0026#34;Id\u0026#34;: \u0026#34;f2c12e0259409c0f11c9c4a4a585753d46a80ac60c336625fd48e5322be9084e\u0026#34;, 6 \u0026#34;Created\u0026#34;: \u0026#34;2022-04-18T14:18:10.96517192Z\u0026#34;, 7 \u0026#34;Scope\u0026#34;: \u0026#34;global\u0026#34;, 8 \u0026#34;Driver\u0026#34;: \u0026#34;overlay\u0026#34;, 9 \u0026#34;EnableIPv6\u0026#34;: false, 10 \u0026#34;IPAM\u0026#34;: { 11 \u0026#34;Driver\u0026#34;: \u0026#34;default\u0026#34;, 12 \u0026#34;Options\u0026#34;: {}, 13 \u0026#34;Config\u0026#34;: [ 14 { 15 \u0026#34;Subnet\u0026#34;: \u0026#34;10.0.0.0/24\u0026#34;, 16 \u0026#34;Gateway\u0026#34;: \u0026#34;10.0.0.1\u0026#34; 17 } 18 ] 19 }, 20 \u0026#34;Internal\u0026#34;: false, 21 \u0026#34;Attachable\u0026#34;: false, 22 \u0026#34;Containers\u0026#34;: {}, 23 \u0026#34;Options\u0026#34;: {}, 24 \u0026#34;Labels\u0026#34;: {} 25 } 26 ] ‰∏ªÊú∫10.0.3.21\nÊü•ÁúãÁΩëÁªúÔºåÂèëÁé∞‰πüÊúâetcdnet‰∫ÜÔºå‰πüÂ∞±ÊòØËØ¥‰∏Ä‰∏™‰∏ªÊú∫ÂàõÂª∫ÔºåÂêåÈõÜÁæ§‰∏ãÁöÑ‰∏ªÊú∫ÈÉΩ‰ºöËá™Âä®ÂàõÂª∫ 1 [root@ams2-10 ~]# docker network ls 2 NETWORK ID NAME DRIVER SCOPE 3 3ed479747a1e bridge bridge local 4 f2c12e025940 etcdnet overlay global 5 4097f7659809 host host local 6 e72e71890e1a none null local ÂºÄÂêØ‰∏Ä‰∏™redisÊúçÂä°\n‰∏ªÊú∫ 10.0.3.2 1 [root@ams2-10 SFS2X]# docker run -d --rm --name redis1 -h redis1 --net etcdnet 10.0.3.2:5001/base_redis 2 8769e01b7003bb42edf226c812405a2e955fb0e16fae0752c37a703efdcc2135 ‰∏ªÊú∫10.0.3.21 Â∞ùËØï‰πüÂàõÂª∫‰∏Ä‰∏™docker name‰∏∫redis1ÁöÑÂÆπÂô®. 1 [root@ams2-10 ~]# docker run -d --rm --name redis1 -h redis1 --net etcdnet 10.0.3.2:5001/base_redis 2 9499adbbce469022ec1bef41415d58398fa79bc1a155316a07182f0278657a4d 3 /usr/bin/docker-current: Error response from daemon: service endpoint with name redis1 already exists. Êä•Èîô‰∫ÜÔºå‰πüÂ∞±ÊòØ‰∏çËÉΩÂàõÂª∫Áõ∏ÂêånameÁöÑÂÆπÂô®„ÄÇÊàë‰ª¨Ëµ∑‰∏Ä‰∏™name‰∏∫redis2ÁöÑÂÆπÂô® 1 [root@ams2-10 ~]# docker run -d --rm --name redis2 -h redis2 --net etcdnet 10.0.3.2:5001/base_redis 2 fea93e725e69f01ffa2e5431d470e230aa8496d8a9106a10ea738c0ff411e340 Êü•ÁúãÁΩëÁªú‰ø°ÊÅØ\n‰∏ªÊú∫ 10.0.3.2 ËøêË°ådocker network lsÔºåÂ§ö‰∫Ü‰∏Ä‰∏™docker_gwbridgeÔºåÁúã‰∏ãËøô‰∏™ÁΩëÁªúÂÆπÂô®ÁöÑËØ¶ÊÉÖ‰ø°ÊÅØ 1 [root@ams2-10 SFS2X]# docker inspect docker_gwbridge 2 [ 3 { 4 \u0026#34;Name\u0026#34;: \u0026#34;docker_gwbridge\u0026#34;, 5 \u0026#34;Id\u0026#34;: \u0026#34;d56f9aef3da6f93cc2749efcdace3265bb29150f145041e4d736e3928fd4e363\u0026#34;, 6 \u0026#34;Created\u0026#34;: \u0026#34;2022-04-18T14:34:44.715406625Z\u0026#34;, 7 \u0026#34;Scope\u0026#34;: \u0026#34;local\u0026#34;, 8 \u0026#34;Driver\u0026#34;: \u0026#34;bridge\u0026#34;, 9 \u0026#34;EnableIPv6\u0026#34;: false, 10 \u0026#34;IPAM\u0026#34;: { 11 \u0026#34;Driver\u0026#34;: \u0026#34;default\u0026#34;, 12 \u0026#34;Options\u0026#34;: null, 13 \u0026#34;Config\u0026#34;: [ 14 { 15 \u0026#34;Subnet\u0026#34;: \u0026#34;172.18.0.0/16\u0026#34;, 16 \u0026#34;Gateway\u0026#34;: \u0026#34;172.18.0.1\u0026#34; 17 } 18 ] 19 }, 20 \u0026#34;Internal\u0026#34;: false, 21 \u0026#34;Attachable\u0026#34;: false, 22 \u0026#34;Containers\u0026#34;: { 23 \u0026#34;d0ffff5fdc19975d8930e25438b1e03f7a960f5387dc5a577e02c89809be0d62\u0026#34;: { 24 \u0026#34;Name\u0026#34;: \u0026#34;gateway_d0ffff5fdc19\u0026#34;, 25 \u0026#34;EndpointID\u0026#34;: \u0026#34;e90ebc5c48f17d5e64bdcf442173617d0b35ed81af33a901a3ae8a75a7d11a55\u0026#34;, 26 \u0026#34;MacAddress\u0026#34;: \u0026#34;02:42:ac:12:00:02\u0026#34;, 27 \u0026#34;IPv4Address\u0026#34;: \u0026#34;172.18.0.2/16\u0026#34;, 28 \u0026#34;IPv6Address\u0026#34;: \u0026#34;\u0026#34; 29 } 30 }, 31 \u0026#34;Options\u0026#34;: { 32 \u0026#34;com.docker.network.bridge.enable_icc\u0026#34;: \u0026#34;false\u0026#34;, 33 \u0026#34;com.docker.network.bridge.enable_ip_masquerade\u0026#34;: \u0026#34;true\u0026#34;, 34 \u0026#34;com.docker.network.bridge.name\u0026#34;: \u0026#34;docker_gwbridge\u0026#34; 35 }, 36 \u0026#34;Labels\u0026#34;: {} 37 } 38 ] Êàë‰ª¨ÂÜçÁúã‰∏ã etcdnetËØ¶ÊÉÖ, ÂèØ‰ª•ÁúãÂà∞Áªô‰∏§‰∏™ÂÆπÂô®ÂàÜÈÖç‰∫Üip 1 [root@ams2-10 SFS2X]# docker network inspect etcdnet 2 [ 3 { 4 \u0026#34;Name\u0026#34;: \u0026#34;etcdnet\u0026#34;, 5 \u0026#34;Id\u0026#34;: \u0026#34;f2c12e0259409c0f11c9c4a4a585753d46a80ac60c336625fd48e5322be9084e\u0026#34;, 6 \u0026#34;Created\u0026#34;: \u0026#34;2022-04-18T14:18:10.96517192Z\u0026#34;, 7 \u0026#34;Scope\u0026#34;: \u0026#34;global\u0026#34;, 8 \u0026#34;Driver\u0026#34;: \u0026#34;overlay\u0026#34;, 9 \u0026#34;EnableIPv6\u0026#34;: false, 10 \u0026#34;IPAM\u0026#34;: { 11 \u0026#34;Driver\u0026#34;: \u0026#34;default\u0026#34;, 12 \u0026#34;Options\u0026#34;: {}, 13 \u0026#34;Config\u0026#34;: [ 14 { 15 \u0026#34;Subnet\u0026#34;: \u0026#34;10.0.0.0/24\u0026#34;, 16 \u0026#34;Gateway\u0026#34;: \u0026#34;10.0.0.1\u0026#34; 17 } 18 ] 19 }, 20 \u0026#34;Internal\u0026#34;: false, 21 \u0026#34;Attachable\u0026#34;: false, 22 \u0026#34;Containers\u0026#34;: { 23 \u0026#34;d0ffff5fdc19975d8930e25438b1e03f7a960f5387dc5a577e02c89809be0d62\u0026#34;: { 24 \u0026#34;Name\u0026#34;: \u0026#34;redis1\u0026#34;, 25 \u0026#34;EndpointID\u0026#34;: \u0026#34;fbc06b25b76eb1e4475582f0eeb51d509ca72f070891140ab482d0f54a140601\u0026#34;, 26 \u0026#34;MacAddress\u0026#34;: \u0026#34;02:42:0a:00:00:02\u0026#34;, 27 \u0026#34;IPv4Address\u0026#34;: \u0026#34;10.0.0.2/24\u0026#34;, 28 \u0026#34;IPv6Address\u0026#34;: \u0026#34;\u0026#34; 29 }, 30 \u0026#34;ep-69ecc615e82eeddbd03cd27006130607e2440d2e1025978c00267c1ba2f7544b\u0026#34;: { 31 \u0026#34;Name\u0026#34;: \u0026#34;redis2\u0026#34;, 32 \u0026#34;EndpointID\u0026#34;: \u0026#34;69ecc615e82eeddbd03cd27006130607e2440d2e1025978c00267c1ba2f7544b\u0026#34;, 33 \u0026#34;MacAddress\u0026#34;: \u0026#34;02:42:0a:00:00:03\u0026#34;, 34 \u0026#34;IPv4Address\u0026#34;: \u0026#34;10.0.0.3/24\u0026#34;, 35 \u0026#34;IPv6Address\u0026#34;: \u0026#34;\u0026#34; 36 } 37 }, 38 \u0026#34;Options\u0026#34;: {}, 39 \u0026#34;Labels\u0026#34;: {} 40 } 41 ] ËøõÂÖ•redis1ÂÆπÂô®ÔºåifconfigÁúã‰∏ã‰∏Ä‰∏ã 1 [root@ams2-10 SFS2X]# docker exec -it redis1 yum install -y net-tools.x86_64 2 [root@ams2-10 SFS2X]# docker exec -it redis1 ifconfig 3 eth0: flags=4163\u0026lt;UP,BROADCAST,RUNNING,MULTICAST\u0026gt; mtu 1450 4 inet 10.0.0.2 netmask 255.255.255.0 broadcast 0.0.0.0 5 inet6 fe80::42:aff:fe00:2 prefixlen 64 scopeid 0x20\u0026lt;link\u0026gt; 6 ether 02:42:0a:00:00:02 txqueuelen 0 (Ethernet) 7 RX packets 13 bytes 1034 (1.0 KiB) 8 RX errors 0 dropped 0 overruns 0 frame 0 9 TX packets 11 bytes 894 (894.0 B) 10 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 11 12 eth1: flags=4163\u0026lt;UP,BROADCAST,RUNNING,MULTICAST\u0026gt; mtu 1500 13 inet 172.18.0.2 netmask 255.255.0.0 broadcast 0.0.0.0 14 inet6 fe80::42:acff:fe12:2 prefixlen 64 scopeid 0x20\u0026lt;link\u0026gt; 15 ether 02:42:ac:12:00:02 txqueuelen 0 (Ethernet) 16 RX packets 7138 bytes 16361245 (15.6 MiB) 17 RX errors 0 dropped 0 overruns 0 frame 0 18 TX packets 7125 bytes 387572 (378.4 KiB) 19 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 20 21 lo: flags=73\u0026lt;UP,LOOPBACK,RUNNING\u0026gt; mtu 65536 22 inet 127.0.0.1 netmask 255.0.0.0 23 inet6 ::1 prefixlen 128 scopeid 0x10\u0026lt;host\u0026gt; 24 loop txqueuelen 1000 (Local Loopback) 25 RX packets 56 bytes 4827 (4.7 KiB) 26 RX errors 0 dropped 0 overruns 0 frame 0 27 TX packets 56 bytes 4827 (4.7 KiB) 28 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 29 30 [root@ams2-10 SFS2X]# ÊµãËØïÊòØÂê¶pingÈÄö\n‰∏ªÊú∫10.0.3.2 Êàë‰ª¨ping‰∏Ä‰∏ãredis2 ÁöÑip ÂíåÂÆπÂô®ÂêçÔºåÂèëÁé∞ÈÉΩÂèØ‰ª•pingÈÄö 1 [root@ams2-10 SFS2X]# docker exec -it redis1 ping -c 5 redis2 2 PING redis2 (10.0.0.3) 56(84) bytes of data. 3 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=1 ttl=64 time=0.325 ms 4 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=2 ttl=64 time=0.557 ms 5 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=3 ttl=64 time=0.446 ms 6 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=4 ttl=64 time=0.430 ms 7 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=5 ttl=64 time=0.578 ms 8 --- redis2 ping statistics --- 9 5 packets transmitted, 5 received, 0% packet loss, time 3999ms 10 rtt min/avg/max/mdev = 0.325/0.467/0.578/0.093 ms Â∞ùËØïËøûÊé•redis2ÁöÑÊúçÂä°ÔºåÁúãÂà∞Ê≤°ÈóÆÈ¢ò 1 # ÂèØ‰ª•Ê≠£Â∏∏ÈìæÊé• 2 [root@ams2-10 SFS2X]# docker exec -it redis1 /home/elex/redis/bin/redis-cli -h redis2 set m1 dd 3 OK 4 [root@ams2-10 SFS2X]# docker exec -it redis1 /home/elex/redis/bin/redis-cli -h redis2 get m1 5 \u0026#34;dd\u0026#34; ‰∏ªÊú∫10.0.3.21Ôºå redis2 ÂêåÊ†∑ÂèØ‰ª•ÈÄöËøáipÂíåÂÆπÂô®Âêç pingÈÄö ps\nÊü•ÁúãetcdÁâàÊú¨Âè∑ curl http://10.0.3.2:2379/versoin ","permalink":"https://omgkill.github.io/post/docker/docker-%E8%B7%A8%E4%B8%BB%E6%9C%BA%E5%AE%B9%E5%99%A8%E9%97%B4%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/","tags":["docker","ÁΩëÁªú"],"title":"Docker Ë∑®‰∏ªÊú∫ÂÆπÂô®Èó¥ÁΩëÁªúÈÄö‰ø°"},{"categories":["blob"],"contents":" sixdian Notes Hugo ‰ΩøÁî® Jane ‰∏ªÈ¢òÂ∏∏Áî®ÁöÑ‰∏Ä‰∫õÈÖçÁΩÆ Published on: April 21, 2022 | Reading Time: 4 min | Last Modified: April 21, 2022\nhugojaneÈÖçÁΩÆ\nHugo ‰∏ãÁöÑ Jane ‰∏ªÈ¢òÊòØÂü∫‰∫é even ‰∏ªÈ¢òËøõË°åÁöÑÈáçÊñ∞ÊîπÈÄ†Ôºå‰∏ªË¶ÅÊúâ‰ª•‰∏ãÁâπËâ≤Ôºö\nÂìçÂ∫îÂºèËÆæËÆ° Â§öÂõΩËØ≠Ë®ÄÊîØÊåÅ ÊîØÊåÅÂ§ö‰∏™ Shortcode ÂçïÁã¨ËÆæËÆ°ÁöÑÊ†áÁ≠æÈ°µÂíåÂàÜÁ±ªÈ°µ ÊîØÊåÅÁ§æ‰∫§ÁΩëÁ´ôÈìæÊé• ‰ºòÁßÄÁöÑÂàÜÈ°µ„ÄÅÁõÆÂΩï„ÄÅÊ≥®ËÑöÊ†∑Âºè ‰ΩøÁî®Êõ¥Âø´ÁöÑ Chroma ‰ª£Á†ÅÈ´ò‰∫Æ Ëá™ÂÆö‰πâ css„ÄÅjs„ÄÅhead ÊîØÊåÅÂ≠êÁõÆÂΩï ÊêúÁ¥¢ÂºïÊìé‰ºòÂåñ ÂàùÂßãÂåñÁöÑÊ†∑ÂºèÂ±ïÁ§∫ÁöÑÂÖÉÁ¥†ÁπÅÂ§öÂèØËÉΩ‰∏çÂ§™Á¨¶ÂêàÊØè‰∏™‰∫∫ÁöÑÂÆûÈôÖÈúÄÊ±ÇÔºåÊàë‰ª¨ÈúÄË¶ÅÂØπÈúÄË¶ÅÊòæÁ§∫ÁöÑÂÜÖÂÆπÊ†∑ÂºèËøõË°å‰øÆÊîπÊù•Â¢ûÂº∫Á´ôÁÇπÊï¥‰ΩìÁöÑÁæéÊÑü„ÄÇ‰∏ãÈù¢Â∞±‰ªãÁªçÂ¶Ç‰ΩïÊîπÈù†Ëá™Â∑±ÁöÑÁã¨Áâπ‰∏ªÈ¢òÔºö\nÈªòËÆ§ÊÉÖÂÜµ‰∏ãÁîüÊàêÁöÑÁ´ôÁÇπÈÉ®ÁΩ≤ÂêéÊàëÊàë‰ª¨‰ºöÂèëÁé∞Âú®ÊâãÊú∫‰∏äÁÇπÊåâËèúÂçï‰ΩçÁΩÆÊó†ÊïàÔºåÊó†Ê≥ïÊ≠£Â∏∏ÊòæÁ§∫‰∏ãÊãâËèúÂçï„ÄÇÊàë‰ª¨ÂèØ‰ª•ÊåâÁÖß‰∏ãÈù¢ÁöÑÊñπÊ≥ïËÆ©ËèúÂçïËÉΩÂú®ÁßªÂä®Á´ØÊ≠£Â∏∏ÊòæÁ§∫„ÄÇ\nJane ‰∏ªÈ¢òÁßªÂä®Á´ØÊó†Ê≥ïÊòæÁ§∫‰∏ãÊãâËèúÂçïÁöÑËß£ÂÜ≥ÊñπÊ≥ï themes\\jane\\layouts\\partials\\scripts.html #Ê†πÊçÆË∑ØÂæÑÊâæÂà∞Ëøô‰∏™Êñá‰ª∂,Âà†Èô§ÂÖ∂‰∏≠ÁöÑ integrity Â±ûÊÄß\n1\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;{{ $secureJS.RelPermalink }}\u0026#34; integrity=\u0026#34;{{ $secureJS.Data.Integrity }}\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; Âè¶Â§ñÁé∞Âú®‰∫∫‰ª¨ÈÄöËøá RSS ÂÆ¢Êà∑Á´ØÈòÖËØªÁöÑÊñπÂºèÂ∑≤ÁªèË∂äÊù•Ë∂äÂ∞ëÔºåJane ‰∏ªÈ¢òÂÜÖÁöÑ RSS ËÆ¢ÈòÖÂõæÊ†áÊàë‰∏™‰∫∫ËßâÂæóÂ§™ËøáÂ§ö‰Ωô‰∏çÁ¨¶ÂêàÊàëËøΩÊ±ÇÁÆÄÊ¥ÅÁöÑÂÆ°ÁæéËßÇÔºåÊâÄ‰ª•‰πüË¶ÅÂØπÂÆÉËøõË°åÈöêËóèÂ§ÑÁêÜ„ÄÇÂÖ∑‰ΩìÂ§ÑÁêÜÊñπÊ≥ïÂ¶Ç‰∏ãÔºö\nJane ‰∏ªÈ¢òÂ∫ïÈÉ® RSS ËÆ¢ÈòÖÂõæÊ†áÂà†Èô§ ./layouts/partials/social_links.html #Âú® themes Êñá‰ª∂Â§π‰∏ãÊ†πÊçÆË∑ØÂæÑÊâæÂà∞Ëøô‰∏™Êñá‰ª∂ÔºåÂà†Èô§‰ª•‰∏ã‰ª£Á†Å\n1\u0026lt;!-- 2{{/* RSS icon */}} 3{{ with .Site.GetPage \u0026#34;home\u0026#34; -}} 4 {{- with .OutputFormats.Get \u0026#34;RSS\u0026#34; -}} 5 \u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34; rel=\u0026#34;noopener {{ .Rel }}\u0026#34; type=\u0026#34;{{ .MediaType.Type }}\u0026#34; 6 class=\u0026#34;iconfont\u0026#34; title=\u0026#34;rss\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt; 7 {{ partial \u0026#34;svg/rss.svg\u0026#34; }} 8 \u0026lt;/a\u0026gt; 9 {{ end -}} 10{{- end -}} 11--\u0026gt; ÂÖ∂ÂÆÉÈúÄË¶ÅËÆæÁΩÆÁöÑÁªÜËäÇÂÜÖÂÆπËøáÂ§öÔºåËÄå‰∏îËøá‰∫éÁÆÄÂçïÔºå‰∏ãÈù¢Áªü‰∏ÄÂÅö‰∏™ÊÄªÁªìÔºö\nJane ‰∏ªÈ¢òÈÖçÁΩÆÊñá‰ª∂ËØ¶ÁªÜËß£Èáä 1# Âü∫Á°ÄËÆæÁΩÆ 2#------------------------------------------------------------------- 3baseURL = \u0026#34;https://sixdian.com/\u0026#34; # ÂçöÂÆ¢ÈÉ®ÁΩ≤ÁΩëÂùÄ 4title = \u0026#34;ÂÖ≠ÁÇπÈöèËÆ∞\u0026#34; # ÁΩëÁ´ôÂêçÁß∞ 5enableRobotsTXT = true # ÊòØÂê¶ÊîØÊåÅRobotsÂçèËÆÆ 6enableEmoji = true # ÊòØÂê¶ÊîØÊåÅEmojiË°®ÊÉÖÁ¨¶Âè∑ 7theme = \u0026#34;jane\u0026#34; # ÈÄâÁî®jane‰∏ªÈ¢ò 8hasCJKLanguage = true # Ëá™Âä®Ê£ÄÊµãÊòØÂê¶ÂåÖÂê´ ‰∏≠Êñá\\Êó•Êñá\\Èü©Êñá 9paginate = 10 # È¶ñÈ°µÊØèÈ°µÊòæÁ§∫ÁöÑÊñáÁ´†Êï∞ÁõÆ 10rssLimit = 20 # ÈôêÂà∂ Rss ÊñáÁ´†ËæìÂá∫Êï∞Èáè 11disqusShortname = \u0026#34;\u0026#34; # disqus_shortname 12googleAnalytics = \u0026#34;\u0026#34; # ÈÖçÁΩÆgoogleÁªüËÆ° 13copyright = \u0026#34;\u0026#34; # ÈªòËÆ§‰∏∫‰∏ãÈù¢ÈÖçÁΩÆÁöÑauthor.nameÔºå 14 15# ÂÖ≥‰∫éËØ≠Ë®Ä 16defaultContentLanguage = \u0026#34;zh-cn\u0026#34; # ÈªòËÆ§ÂçöÂÆ¢ËØ≠Ë®ÄÁéØÂ¢É 17[languages.zh-cn] # ËØ≠Ë®ÄÊîØÊåÅ 18 languageCode = \u0026#34;zh-cn\u0026#34; 19 20# ÂÖ≥‰∫éËØ≠Ê≥ïÈ´ò‰∫ÆÔºåÂÖ∑‰Ωì‰ΩøÁî®ÂèØÊü•Áúãhttps://gohugo.io/content-management/syntax-highlighting/ 21PygmentsCodeFences = true # Enable syntax highlighting with GitHub flavoured code fences 22PygmentsUseClasses = true # Use CSS classes to format highlighted code 23PygmentsCodefencesGuessSyntax = true # 24PygmentsOptions = \u0026#34;linenos=table\u0026#34; # ÂºÄÂêØÊòæÁ§∫Ë°åÂè∑ 25 26[author] # ‰ΩúËÄÖÂêçÁß∞ 27 name = \u0026#34;sixdian\u0026#34; 28[sitemap] # Á´ôÁÇπÂú∞Âõæ 29 changefreq = \u0026#34;weekly\u0026#34; 30 priority = 0.5 31 filename = \u0026#34;sitemap.xml\u0026#34; 32#------------------------------------------------------------------- 33 34#ËèúÂçïËÆæÁΩÆ 35#------------------------------------------------------------------- 36[[menu.main]] 37 name = \u0026#34;‰∏ªÈ°µ\u0026#34; 38 weight = 10 39 identifier = \u0026#34;home\u0026#34; 40 url = \u0026#34;/\u0026#34; 41[[menu.main]] 42 name = \u0026#34;ÂΩíÊ°£\u0026#34; 43 weight = 20 44 identifier = \u0026#34;archives\u0026#34; 45 url = \u0026#34;/post/\u0026#34; 46[[menu.main]] 47 name = \u0026#34;ÂàÜÁ±ª\u0026#34; 48 weight = 30 49 identifier = \u0026#34;categories\u0026#34; 50 url = \u0026#34;/categories/\u0026#34; 51[[menu.main]] 52 name = \u0026#34;Ê†áÁ≠æ\u0026#34; 53 weight = 40 54 identifier = \u0026#34;tags\u0026#34; 55 url = \u0026#34;/tags/\u0026#34; 56[[menu.main]] 57 name = \u0026#34;ÂÖ≥‰∫é\u0026#34; 58 weight = 50 59 identifier = \u0026#34;about\u0026#34; 60 url = \u0026#34;/about/\u0026#34; 61[[menu.main]] 62 name = \u0026#34;ÂèãÈìæ\u0026#34; 63 weight = 60 64 identifier = \u0026#34;links\u0026#34; 65 url = \u0026#34;/links/\u0026#34; 66[[menu.main]] 67 name = \u0026#34;ËÆ¢ÈòÖ\u0026#34; 68 weight = 70 69 identifier = \u0026#34;feed\u0026#34; 70 url = \u0026#34;/index.xml\u0026#34; 71#------------------------------------------------------------------- 72 73#ÂÖ∂‰ªñÂèÇÊï∞ËÆæÁΩÆ 74#------------------------------------------------------------------- 75[params] 76 since = \u0026#34;2022\u0026#34; # Á´ôÁÇπÂª∫Á´ãÊó∂Èó¥ 77 homeFullContent = false # ‰∏ªÈ°µÊòØÂê¶ÊòæÁ§∫ÂÖ®ÈÉ®ÊñáÁ´†ÂÜÖÂÆπ 78 rssFullContent = true # if false, Rss feed instead of the summary 79 logoTitle = \u0026#34;ÂÖ≠ÁÇπÈöèÁ¨î\u0026#34; # ÂçöÂÆ¢Ê†áÈ¢òÔºåÈªòËÆ§ÂÄºÊòØ‰∏äÈù¢ËÆæÁΩÆÁöÑtitleÔºå‰πüÂ∞±ÊòØÁΩëÂùÄÂêçÁß∞ 80 keywords = [\u0026#34;Hugo\u0026#34;, \u0026#34;linux\u0026#34;, \u0026#34;emacs\u0026#34;, \u0026#34;CPU\u0026#34;] # ÂÖ≥ÈîÆÂ≠ó 81 description = \u0026#34;\u0026#34; # ÁΩëÈ°µÊèèËø∞ 82 archive-paginate = 30 # ÂΩíÊ°£„ÄÅÊ†áÁ≠æ„ÄÅÂàÜÁ±ªÊØèÈ°µÊòæÁ§∫ÁöÑÊñáÁ´†Êï∞ÁõÆ 83 dateFormatToUse = \u0026#34;2006-01-02\u0026#34; # Êó•ÊúüÊòæÁ§∫Ê†ºÂºèÔºåÊü•ÁúãÂèØÊîØÊåÅÁöÑÊ†ºÂºèËßÅhttps://gohugo.io/functions/format/ 84 moreMeta = true # ÊòØÂê¶ÊòæÁ§∫Â≠óÊï∞ÁªüËÆ°‰∏éÈòÖËØªÊó∂Èó¥ 85 showMenuLanguageChooser = true # ÊòæÁ§∫ËØ≠Ë®ÄÈÄâÊã©ÂºÄÂÖ≥ 86 showAuthorInfo = true # ÊñáÁ´†Êú´Â∞æÊòæÁ§∫‰ΩúËÄÖ‰ø°ÊÅØ 87 88 # ‰∏Ä‰∫õÂÖ®Â±ÄÂºÄÂÖ≥ÔºåËøô‰∫õÊòØÈªòËÆ§ÂÄºÔºå‰πüÂèØ‰ª•Âú®ÊØè‰∏ÄÁØáÂÜÖÂÆπÁöÑ front matter ‰∏≠ÂØπÂçïÁØáÂÜÖÂÆπÂÖ≥Èó≠ÊàñÂºÄÂêØÊüê‰∫õÂäüËÉΩÔºåÂú® archetypes/default.md Êü•ÁúãÊõ¥Â§ö‰ø°ÊÅØ„ÄÇ 89 toc = true # ÊòØÂê¶ÂºÄÂêØÁõÆÂΩï 90 photoswipe = true # ÊòØÂê¶ÂêØÁî®PhotoSwipeÔºàÂõæÁâáÂèØÁÇπÂáªÔºâ 91 bootcdn = true # ÊòØÂê¶‰ΩøÁî®bootcdn 92 mathjax = false # ÊòØÂê¶‰ΩøÁî®mathjaxÔºàÊï∞Â≠¶ÂÖ¨ÂºèÔºâ 93 contentCopyright = \u0026#39;ÂÖ≠ÁÇπÂàõ‰ΩúÔºåËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§ÑÔºÅ\u0026#39; # ÁâàÊùÉÂ£∞Êòé 94 95 customCSS = [] # if [\u0026#39;custom.css\u0026#39;], load \u0026#39;/static/css/custom.css\u0026#39; file 96 customJS = [] # if [\u0026#39;custom.js\u0026#39;], load \u0026#39;/static/js/custom.js\u0026#39; file 97#------------------------------------------------------------------- 98 99# CDNËÆæÁΩÆ 100#------------------------------------------------------------------- 101 [params.publicCDN] # load these files from public cdn 102 enable = true 103 jquery = \u0026#39;\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js\u0026#34; integrity=\u0026#34;sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026#39; 104 slideout = \u0026#39;\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/slideout@1.0.1/dist/slideout.min.js\u0026#34; integrity=\u0026#34;sha256-t+zJ/g8/KXIJMjSVQdnibt4dlaDxc9zXr/9oNPeWqdg=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026#39; 105 gitmentJS = \u0026#39;\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/gitment@0.0.3/dist/gitment.browser.min.js\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026#39; 106 gitmentCSS = \u0026#39;\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/gitment@0.0.3/style/default.min.css\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026#39; 107 photoswipe = \u0026#39;\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/photoswipe.js\u0026#34; integrity=\u0026#34;sha256-AC9ChpELidrhGHX23ZU53vmRdz3FhKaN9E28+BbcWBw=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026#39; 108 photoswipeUI = \u0026#39;\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/photoswipe-ui-default.min.js\u0026#34; integrity=\u0026#34;sha256-UKkzOn/w1mBxRmLLGrSeyB4e1xbrp4xylgAWb3M42pU=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026#39; 109 photoswipeCSS = \u0026#39;\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/photoswipe.css\u0026#34; integrity=\u0026#34;sha256-SBLU4vv6CA6lHsZ1XyTdhyjJxCjPif/TRkjnsyGAGnE=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026#39; 110 photoswipeSKIN = \u0026#39;\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/default-skin/default-skin.css\u0026#34; integrity=\u0026#34;sha256-c0uckgykQ9v5k+IqViZOZKc47Jn7KQil4/MP3ySA3F8=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026#39; 111#------------------------------------------------------------------- 112 113# ‰∏ãÈù¢ÊòØÂÖ≥‰∫éËØÑËÆ∫Á≥ªÁªüÔºåÊõ¥Êñ∞ÊòæÁ§∫commitÂÜÖÂÆπÔºåË∞∑Ê≠åÊêúÁ¥¢ÔºåÊñáÁ´†ÊâìËµèÔºåËÆøÈóÆÊï∞ÊçÆÁªüËÆ°Á≠âÁ≠â 114#------------------------------------------------------------------- 115 [params.utteranc] # utteranc is a comment system based on GitHub issues. see https://utteranc.es 116 enable = false 117 repo = \u0026#34;xianmin/comments-for-hugo-theme-jane\u0026#34; # The repo to store comments 118 issueTerm = \u0026#34;pathname\u0026#34; 119 120 [params.gitment] # Gitment is a comment system based on GitHub issues. see https://github.com/imsun/gitment 121 owner = \u0026#34;\u0026#34; # Your GitHub ID 122 repo = \u0026#34;\u0026#34; # The repo to store comments 123 clientId = \u0026#34;\u0026#34; # Your client ID 124 clientSecret = \u0026#34;\u0026#34; # Your client secret 125 126 [params.livere] #LiveRe comment. see https://www.livere.com/ 127 uid = \u0026#34;\u0026#34; 128 129 [params.reward] # ÊñáÁ´†ÊâìËµè 130 enable = false 131 wechat = \u0026#34;/path/to/your/wechat-qr-code.png\u0026#34; # ÂæÆ‰ø°‰∫åÁª¥Á†Å 132 alipay = \u0026#34;/path/to/your/alipay-qr-code.png\u0026#34; # ÊîØ‰ªòÂÆù‰∫åÁª¥Á†Å 133 134 [params.counter.busuanzi] # a Chinese visitor counter # ÂçúÁÆóÂ≠êËÆ°Êï∞Âô® 135 enable = false 136 137 [params.counter.leancloud] # Chinese leancloud visitor counter # leancloud ËÆ°Êï∞Âô® 138 enable = false 139 appId = \u0026#34;\u0026#34; 140 appKey = \u0026#34;\u0026#34; 141 142 [params.commentCount.disqus] # show counts of comments for Disqus 143 enable = false 144 145 [params.search.google] # google custom search, see https://cse.google.com 146 enable = false 147 id = \u0026#34;002186711602136249422:q1gkomof_em\u0026#34; 148 title = \u0026#34;Search\u0026#34; 149 150 [params.gitInfo] 151 gitRepo = \u0026#34;https://github.com/xianmin/xianmin.org\u0026#34; 152 showCommitMessage = false 153#------------------------------------------------------------------- 154 155#Á§æ‰∫§ÈìæÊé• 156#------------------------------------------------------------------- 157# [params.social] 158# a-email = \u0026#34;mailto:your@email.com\u0026#34; 159# b-stack-overflow = \u0026#34;http://localhost:1313\u0026#34; 160# c-twitter = \u0026#34;http://localhost:1313\u0026#34; 161# d-facebook = \u0026#34;http://localhost:1313\u0026#34; 162# e-linkedin = \u0026#34;http://localhost:1313\u0026#34; 163# f-google = \u0026#34;http://localhost:1313\u0026#34; 164# g-github = \u0026#34;http://localhost:1313\u0026#34; 165# h-weibo = \u0026#34;http://localhost:1313\u0026#34; 166# i-zhihu = \u0026#34;http://localhost:1313\u0026#34; 167# j-douban = \u0026#34;http://localhost:1313\u0026#34; 168# k-pocket = \u0026#34;http://localhost:1313\u0026#34; 169# l-tumblr = \u0026#34;http://localhost:1313\u0026#34; 170# m-instagram = \u0026#34;http://localhost:1313\u0026#34; 171# n-gitlab = \u0026#34;http://localhost:1313\u0026#34; 172# o-goodreads = \u0026#34;http://localhost:1313\u0026#34; 173# p-coding = \u0026#34;http://localhost:1313\u0026#34; 174# q-bilibili = \u0026#34;http://localhost:1313\u0026#34; 175# r-codeforces = \u0026#34;http://localhost:1313\u0026#34; 176# s-mastodon = \u0026#34;http://localhost:1313\u0026#34; 177#------------------------------------------------------------------- ¬© 2022-2023 üö¥ sixdian\n","permalink":"https://omgkill.github.io/post/knowledgesite/jane/","tags":["hugo","blob"],"title":"Hugo ‰ΩøÁî® Jane ‰∏ªÈ¢òÂ∏∏Áî®ÁöÑ‰∏Ä‰∫õÈÖçÁΩÆ"},{"categories":["docker"],"contents":" gmÊúçÈÉ®ÁΩ≤nexus3ÔºåËøô‰∏™Áî®‰∫édocker image ‰ªìÂ∫ì„ÄÇ ÂèÇËÄÉÔºöhttp://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=75479441 gmÊúçÈÉ®ÁΩ≤jenkins ÂèÇËÄÉÔºöhttp://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=75479445 ÈúÄË¶ÅÂÆâË£Ödocker plugin Êèí‰ª∂ÁÆ°ÁêÜ‰∏≠ÂÆâË£ÖDocker, Á≥ªÁªüÁÆ°ÁêÜ-\u0026gt;Êèí‰ª∂ÁÆ°ÁêÜ-\u0026gt; ÂèØÈÄâÊèí‰ª∂-\u0026gt;ÊêúÁ¥¢docker ÈÖçÁΩÆdockerÈïúÂÉè‰ªìÂ∫ìÂú∞ÂùÄÂíåÂØÜÈí•ÔºåË∑ØÂæÑÔºöÁ≥ªÁªüÁÆ°ÁêÜ-\u0026gt;Á≥ªÁªüÈÖçÁΩÆ-\u0026gt; Declarative Pipeline (Docker) ÂÆâË£Ögradle plugin ÈÖçÁΩÆgradleÔºåÂêçÂ≠óÔºögradle564ÔºåÁâàÊú¨ÔºöGradle 5.6.4ÔºåË∑ØÂæÑÔºöÁ≥ªÁªüÁÆ°ÁêÜ-\u0026gt;ÂÖ®Â±ÄÂ∑•ÂÖ∑ÈÖçÁΩÆ-\u0026gt; Gradle jenkinsÈÖçÁΩÆ ÂèÇËÄÉÔºöhttp://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=96209340 ÊûÑÂª∫ams2-base Âíå ams2-ds svn checkout ËÑöÊú¨ svnÂú∞ÂùÄÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/deploy_stressing ËøõÂÖ•deploy_stressingÊñá‰ª∂Â§π ÊâßË°åËÑöÊú¨Ôºå ÈªòËÆ§ÂêØÂä®8001Êúç python deploy_stressing_server.py -g \u0026lt;gameÊúçÂÜÖÁΩëip\u0026gt; -d \u0026lt;mysql‰∏éclusterRedisÊúçÂÜÖÁΩëip\u0026gt; -n \u0026lt;dockerÈïúÂÉè‰ªìÂ∫ìÊâÄÂú®ÊúçÂÜÖÁΩëip\u0026gt; Â¶ÇÊûúË¶ÅÈáçÂêØgameÊúçÔºåË¶ÅÂ§öÂä†‰∏Ä‰∏™ÂèÇÊï∞Ôºö-r python deploy_stressing_server.py -g \u0026lt;gameÊúçÂÜÖÁΩëip\u0026gt; -d \u0026lt;mysql‰∏éclusterRedisÊúçÂÜÖÁΩëip\u0026gt; -n \u0026lt;dockerÈïúÂÉè‰ªìÂ∫ìÊâÄÂú®ÊúçÂÜÖÁΩëip\u0026gt; -r true ËÑöÊú¨ÊîØÊåÅÈáçÂ§çÊâßË°åÔºåÂ¶ÇÊûúËÑöÊú¨‰∏≠ÈÄîÊâßË°åÂ§±Ë¥•ÔºåÂèØ‰ª•ÈáçÂ§çÊâßË°å dockerÂÇ®Â≠òÂà∞ÂÆø‰∏ªÊú∫ÁöÑÊï∞ÊçÆ mysqlÁöÑÊï∞ÊçÆÂ≠òÂÇ®Âú∞ÂùÄÔºåÂú®ÂÆø‰∏ªÊú∫ÁöÑ:/home/docker/docker/volume/stress_db_mysql redisÁöÑÊï∞ÊçÆÂ≠òÂÇ®Âú∞ÂùÄÔºåÂú®ÂÆø‰∏ªÊú∫Ôºö/home/docker/docker/volume/stress_db_redis game logÁöÑÊï∞ÊçÆÂ≠òÂÇ®Âú∞ÂùÄÔºåÂú®ÂÆø‰∏ªÊú∫Ôºö/home/docker/docker/volume/stress_game_log Á§∫‰æã python .\\deploy_stressing_server.py -g 10.0.3.203 -d 10.0.3.21 -n 10.0.3.2 ##ËÑöÊú¨ËØ¥Êòé\nËÑöÊú¨ÈúÄË¶Å‰∏§Âè∞ÊúçÂä°Âô®„ÄÇ ‰∏Ä‰∏™Âè∞ÈÉ®ÁΩ≤game‰∏élocal redisÔºå‰∏ÄÂè∞ÈÉ®ÁΩ≤mysql‰∏écluster redis ‰∏§Âè∞Êú∫Âô®ÂÆπÂô®Â¶Ç‰Ωï‰∫íËÅîÔºåÂèÇËÄÉÔºöhttp://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=96209514 Â¶ÇÊûúË¶ÅÂà†Èô§ÊâÄÊúâdockerÊï∞ÊçÆÔºåÊâßË°å‰∏Ä‰∏ãÂëΩ‰ª§ yum remove -y docker* ##Êä•ÈîôËß£ÂÜ≥\n1Êä•ÈîôËß£ÂÜ≥ 2 3[root@server2002 home]# docker network rm docker_gwbridge 4Error response from daemon: network docker_gwbridge has active endpoints 5 6 7 8 9[root@server2002 home]# docker network inspect docker_gwbridge 10[ 11 { 12 \u0026#34;Name\u0026#34;: \u0026#34;docker_gwbridge\u0026#34;, 13 \u0026#34;Id\u0026#34;: \u0026#34;0eecc7be54a618d305be26b9081998437529e5dace05c71b538da63611509cc3\u0026#34;, 14 \u0026#34;Created\u0026#34;: \u0026#34;2022-04-24T07:35:29.709419174Z\u0026#34;, 15 \u0026#34;Scope\u0026#34;: \u0026#34;local\u0026#34;, 16 \u0026#34;Driver\u0026#34;: \u0026#34;bridge\u0026#34;, 17 \u0026#34;EnableIPv6\u0026#34;: false, 18 \u0026#34;IPAM\u0026#34;: { 19 \u0026#34;Driver\u0026#34;: \u0026#34;default\u0026#34;, 20 \u0026#34;Options\u0026#34;: null, 21 \u0026#34;Config\u0026#34;: [ 22 { 23 \u0026#34;Subnet\u0026#34;: \u0026#34;172.19.0.0/16\u0026#34;, 24 \u0026#34;Gateway\u0026#34;: \u0026#34;172.19.0.1\u0026#34; 25 } 26 ] 27 }, 28 \u0026#34;Internal\u0026#34;: false, 29 \u0026#34;Attachable\u0026#34;: false, 30 \u0026#34;Containers\u0026#34;: { 31 \u0026#34;f32013a3de270374e0baf8e030e7182f0a75024a796b2459e703f15deeb48725\u0026#34;: { 32 \u0026#34;Name\u0026#34;: \u0026#34;gateway_f32013a3de27\u0026#34;, 33 \u0026#34;EndpointID\u0026#34;: \u0026#34;376c39efa00c1cd178d27f5daec7ffcb0ed06f71db8e15bab66834bb438342a2\u0026#34;, 34 \u0026#34;MacAddress\u0026#34;: \u0026#34;02:42:ac:13:00:02\u0026#34;, 35 \u0026#34;IPv4Address\u0026#34;: \u0026#34;172.19.0.2/16\u0026#34;, 36 \u0026#34;IPv6Address\u0026#34;: \u0026#34;\u0026#34; 37 } 38 }, 39 \u0026#34;Options\u0026#34;: { 40 \u0026#34;com.docker.network.bridge.enable_icc\u0026#34;: \u0026#34;false\u0026#34;, 41 \u0026#34;com.docker.network.bridge.enable_ip_masquerade\u0026#34;: \u0026#34;true\u0026#34;, 42 \u0026#34;com.docker.network.bridge.name\u0026#34;: \u0026#34;docker_gwbridge\u0026#34; 43 }, 44 \u0026#34;Labels\u0026#34;: {} 45 } 46] 47 48docker network disconnect -f docker_gwbridge gateway_def4bf4c78ab 49 50docker network rm docker_gwbridge ","permalink":"https://omgkill.github.io/post/docker/%E4%BD%BF%E7%94%A8docker%E5%90%AF%E5%8A%A8%E5%8E%8B%E6%B5%8B%E6%9C%8D/","tags":["docker","nexus3","jenkins","ÂéãÊµã"],"title":"‰ΩøÁî®DockerÂêØÂä®ÂéãÊµãÊúç"},{"categories":["docker"],"contents":" ÂÆâË£Ödocker\nyum install -y docker ÂàõÂª∫ÁΩëÁªú\ndocker network create test_net ÂàõÂª∫redis1\ndocker run -d \u0026ndash;rm \u0026ndash;name redis1 -h redis1 \u0026ndash;net test_net 10.0.3.2:5001/base_redis ÂàõÂª∫redis2\ndocker run -d \u0026ndash;rm \u0026ndash;name redis2 -h redis2 \u0026ndash;net test_net 10.0.3.2:5001/base_redis ÊµãËØï\ndocker exec -it redis1 ping -c 3 redis2 ","permalink":"https://omgkill.github.io/post/docker/docker%E5%8D%95%E6%9C%BA%E5%AE%B9%E5%99%A8%E4%BA%92%E8%BF%9E/","tags":["docker","ÁΩëÁªú"],"title":"DockerÂçïÊú∫ÂÆπÂô®‰∫íËøû"},{"categories":["docs","Development","index"],"contents":"Contributing to Jane There are many ways to contribute to the Jane theme: submitting pull requests, reporting issues, providing new translations, and creating suggestions.\nBuild and Run If you want to understand how Jane works, you\u0026rsquo;ll want to get the source, build it, and run locally.\nGetting the sources 1git clone https://github.com/xianmin/hugo-theme-jane.git Prerequisites You need install the Hugo_extended version to use Hugo Pipes.\nWe recommend that you use VSCode. And if you edit .html files, recommend you install prettier and prettier-plugin-go-template globally . And open Prettier: Resolve Global Modules in your VSCode Settings.\n1npm install -g prettier prettier-plugin-go-template Watch example Site 1hugo server --contentDir=\u0026#39;./exampleSite/content\u0026#39; --config=\u0026#39;dev-config.toml\u0026#39; Directory Structure layouts/ Stores templates in the form of .html files that specify how views of your content will be rendered into a static website. assets/ stores all the scss \u0026amp; js source files, Hugo Pipes will bundle them to resources/ folder. ","permalink":"https://omgkill.github.io/post/docs/how-to-contribute/","tags":["go","golang","hugo","Contribute"],"title":"How to Contribute"},{"categories":["Development","golang","index"],"contents":"Header This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nSubHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nThis is very long SubHeader, This is very long SubHeader, This is very long SubHeader, This is very long SubHeader, This is very long SubHeader, This is very long SubHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nSubHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader Header SubHeader SubHeader H4 H4 H5 H6 Header Header ","permalink":"https://omgkill.github.io/post/demo/2-toc/","tags":["toc","golang","templates","themes","development"],"title":"Demo: toc"},{"categories":["Development","golang","index"],"contents":"Header This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nSubHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nThis is very long SubHeader, This is very long SubHeader, This is very long SubHeader, This is very long SubHeader, This is very long SubHeader, This is very long SubHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nSubHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nHeader Header SubHeader SubHeader H4 H4 H5 H6 Header Header ","permalink":"https://omgkill.github.io/post/other/test-toc/global-toc-except-this/","tags":["toc","golang","templates","themes","development"],"title":"Demo: toc, global toc is true, but this post should not show toc"},{"categories":["Development","golang","index"],"contents":"This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\n","permalink":"https://omgkill.github.io/post/other/test-toc/no-header-dont-show-toc/","tags":["toc","golang","templates","themes","development"],"title":"no header, no toc"},{"categories":["docker","index"],"contents":" Áî≥ËØ∑Á´ØÂè£ check out svnÊñáÊ°£ÔºåsvnÂú∞ÂùÄÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/port.xlsx Â°´ÂÜôËá™Â∑±ÁöÑÂêçÂ≠óÂíåÁ´ØÂè£ÔºàÁ´ØÂè£‰ªé10000ÂºÄÂßãÔºå‰æùÊ¨°Â¢ûÂä†Ôºå‰∏çË¶ÅÈáçÂ§çÔºâÔºåÊèê‰∫§svn ‰∏ãËΩΩËÑöÊú¨ ËÑöÊú¨Âú∞ÂùÄÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/deploy_docker_game.sh ÊâßË°åËÑöÊú¨ ./deploy_docker_game.sh -p Á´ØÂè£ -s Êúçid -n ÂÆπÂô®Âêç Á´ØÂè£ Á´ØÂè£Â∞±ÊòØ‰∏äÈù¢Áî≥ËØ∑ÁöÑÁ´ØÂè£ Êúçid Ëøô‰∏™ÊúçidÊúâ‰∏§‰∏™ÈÄâÈ°πÔºå‰∏Ä‰∏™ÊòØËá™Â∑±ÁöÑÊúçidÔºå‰∏Ä‰∏™ÊòØÂÖ±ÈÄö‰ΩøÁî®‰∏Ä‰∏™Êúçid Â¶ÇÊûúÊòØÂºÄÂèëÔºåÂèØ‰ª•‰ΩøÁî®Ëá™Â∑±ÁöÑÊúçid Â¶ÇÊûúÊòØËøêËê•ÔºåÂèØ‰ª•‰ΩøÁî®ÂÖ±ÈÄöÁöÑÊúçid„ÄÇÂÖ±ÈÄöÊúçid:9000 ÂÆπÂô®Âêç Ëøô‰∏™ÊúÄÂ•ΩÊòØ‰ΩøÁî®ËÄÖÁöÑÂêçÂ≠óÔºå‰ª•ÂêéÂ•ΩÂå∫ÂàÜ ‰∏Ä‰∏™È¢ùÂ§ñÂèÇÊï∞ -bÔºåmysql ÂèÇÊï∞ INNODB_BUFFER_POOL_SIZEÔºå Âçï‰ΩçÊòØM,‰∏çÂ°´ÈªòËÆ§ÂÄºÊòØ128M Á§∫‰æãÔºö./deploy_docker_game.sh -p 10000 -s 11 -n name -b 6144 ËÑöÊú¨ÊâßË°åÔºå‰ºöÊúâlogÊòæÁ§∫ ÁúãÂà∞deploy successËØ¥ÊòéÈÉ®ÁΩ≤ÊàêÂäü tips docker ÁõÆÂâçÂè™ÊîØÊåÅlinux ÂèØ‰ª•Âú®10.0.3.2ÊúçÊµãËØï/home/ams2/ds Â¶Ç‰ΩïÊìç‰ΩúÂÆπÂô®\nÈÄöËøáÁÆ°ÁêÜÁïåÈù¢Êìç‰Ωú\nhttp://10.0.3.2:9000/#!/home ÊàñËÄÖÈÄöËøáÂëΩ‰ª§Ë°åÊìç‰ΩúÂÆπÂô®\nÊü•ÁúãÂΩìÂâçÊú∫Âô®ÊúâÂì™‰∫õÂÆπÂô® docker ps ÊàñËÄÖ docker container ls ËøêË°åÂÆπÂô®(Ëøô‰∏™ÈúÄË¶ÅË∞∑Ê≠å‰∏Ä‰∏ãÔºåÂëΩ‰ª§ÂèÇÊï∞ÊØîËæÉÂ§ö) docker run -d ÂÆπÂô®Âêç ËøõÂÖ•ÂÆπÂô® docker exec -it ÂÆπÂô®Âêç bash ÈÄÄÂá∫ÂÆπÂô® exit ÂÖ≥Èó≠ÂÆπÂô® docker stop ÂÆπÂô®Âêç ÂºÄÂêØÂÆπÂô® docker start ÂÆπÂô®Âêç ‰ΩÜÊòØËøô‰∏™‰∏ç‰ºöÂêØÂä®ÊúçÂä°ÔºåÊúÄÂ•ΩÁöÑÊñπÂºèÊòØÂà†Èô§ÂÆπÂô®ÔºåÁÑ∂Âêé‰ΩøÁî®docker run Âà†Èô§ÂÆπÂô® docker rm ÂÆπÂô®Âêç Âº∫Âà∂Âà†Èô§ docker rm -f ÂÆπÂô®Âêç Êü•ÁúãÂÆπÂô®Êó•Âøó docker logs ÂÆπÂô®Âêç docker logs -f ÂÆπÂô®Âêç ÂÆπÂô®ÂÜÖams2ÈÉ®ÁΩ≤Âú∞ÂùÄ /home/ams2_deploy ÂÆπÂô®ÂÜÖMysqlÂú∞ÂùÄ /home/elex/mysql ÂÆπÂô®ÂÜÖCluster Redis Âú∞ÂùÄ /home/elex/redis ","permalink":"https://omgkill.github.io/post/docker/%E4%BD%BF%E7%94%A8docker%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%9C%8D/","tags":["docker"],"title":"‰ΩøÁî®dockerÂêØÂä®ÊµãËØïÊúç"},{"categories":["demo","shortcodes","index"],"contents":"What a Shortcode is Hugo loves Markdown because of its simple content format, but there are times when Markdown falls short. Often, content authors are forced to add raw HTML (e.g., video \u0026lt;iframes\u0026gt;) to Markdown content. We think this contradicts the beautiful simplicity of Markdown\u0026rsquo;s syntax.\nHugo created shortcodes to circumvent these limitations.\nA shortcode is a simple snippet inside a content file that Hugo will render using a predefined template. Note that shortcodes will not work in template files. If you need the type of drop-in functionality that shortcodes provide but in a template, you most likely want a [partial template][partials] instead.\nIn addition to cleaner Markdown, shortcodes can be updated any time to reflect new classes, techniques, or standards. At the point of site generation, Hugo shortcodes will easily merge in your changes. You avoid a possibly complicated search and replace operation.\nMore details: https://gohugo.io/content-management/shortcodes/\nblockquotes Normal quote: This is a simple quote.\nQuote with author: This is a quote with only an Author named Author2.\nAuthor2 Quote with author and source: This is a quote from Author3 and source \u0026ldquo;source.\u0026rdquo;\nAuthor3 Source Quote with author and link: This is a quote from Author4 and links to https://www.google.com.\nAuthor4 google.com Quote with author, link and title: This is a quote from Author5 and links to https://www.google.com with title \u0026ldquo;Google.\u0026rdquo;\nAuthor5 Google Quote with author and a link longer than 32 characters, string is first cut at 32 characters then everything after the last forward slash is removed This is a quote from Author5 and links to https://twitter.com/CryptoGangsta/status/716427930126196737 which is longer than 32 characters. And this is a new line in the quote with the HTML br tag.\nAuthor6 twitter.com/CryptoGangsta/... Test from the Octopress blockquote page at: http://octopress.org/docs/plugins/blockquote/ Over the past 24 hours I\u0026rsquo;ve been reflecting on my life \u0026amp; I\u0026rsquo;ve realized only one thing. I need a medieval battle axe.\n@allanbranch twitter.com/allanbranch/status/... music gist We can embed the gist in our content via username and gist ID pulled from the URL:\n1{{\u0026lt; gist spf13 7896402 \u0026gt;}} Display:\nexpand The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example\nIs this learn theme rocks ? Yes !. Usage this shortcode takes exactly one optional parameter to define the text that appears next to the expand/collapse icon. (default is ‚ÄúClick to expand‚Äù)\n1{{\u0026lt; expand \u0026#34;Is this learn theme rocks ?\u0026#34; \u0026gt;}} 2Yes !. 3{{\u0026lt; /expand \u0026gt;}} youtube vimeo youku ","permalink":"https://omgkill.github.io/post/demo/7-shortcodes-preview/","tags":["preview","shortcodes","tag-6"],"title":"Demo: more Shortcodes"},{"categories":["demo","shortcodes","index"],"contents":"Thanks for liwenyip/hugo-easy-gallery \u0026amp; Zebradil ¬∑ Pull Request #48 .\nNow, we could use {{\u0026lt; gallery \u0026gt;}} shortcode in hugo-theme-jane.\nNormal Image This is an image in static/image folder.\n1![This is an image in `static/image` folder.](/image/example.jpg) {{\u0026lt; figure \u0026gt;}} shortcode figure image with title 1{{\u0026lt; figure src=\u0026#34;/image/example.jpg\u0026#34; title=\u0026#34;figure image with title\u0026#34; \u0026gt;}} figure image with caption 1{{\u0026lt; figure src=\u0026#34;/image/example.jpg\u0026#34; caption=\u0026#34;figure image with caption figure image with caption figure image with caption figure image with caption figure image with caption\u0026#34; \u0026gt;}} more {{\u0026lt; figure \u0026gt;}} shortcode usage Specifying your image files:\n{{\u0026lt; figure src=\u0026quot;thumb.jpg\u0026quot; link=\u0026quot;image.jpg\u0026quot; \u0026gt;}} will use thumb.jpg for thumbnail and image.jpg for lightbox {{\u0026lt; figure src=\u0026quot;image.jpg\u0026quot; \u0026gt;}} or {{\u0026lt; figure link=\u0026quot;image.jpg\u0026quot; \u0026gt;}} will use image.jpg for both thumbnail and lightbox {{\u0026lt; figure link=\u0026quot;image.jpg\u0026quot; thumb=\u0026quot;-small\u0026quot; \u0026gt;}} will use image-small.jpg for thumbnail and image.jpg for lightbox Optional parameters:\nAll the features/parameters of Hugo\u0026rsquo;s built-in figure shortcode work as normal, i.e. src, link, title, caption, class, attr (attribution), attrlink, alt size (e.g. size=\u0026quot;1024x768\u0026quot;) pre-defines the image size for PhotoSwipe. Use this option if you don\u0026rsquo;t want to pre-load the linked image to determine its size. class allows you to set any custom classes you want on the \u0026lt;figure\u0026gt; tag. Optional parameters for standalone {{\u0026lt; figure \u0026gt;}} shortcodes only (i.e. don\u0026rsquo;t use on {{\u0026lt; figure \u0026gt;}} inside {{\u0026lt; gallery \u0026gt;}} - strange things may happen if you do):\ncaption-position and caption-effect work the same as for the {{\u0026lt; gallery \u0026gt;}} shortcode (see below). width defines the max-width of the image displayed on the page. If using a thumbnail for a standalone figure, set this equal to your thumbnail\u0026rsquo;s native width to make the captions behave properly (or feel free to come up with a better solution and submit a pull request :-)). Also use this option if you don\u0026rsquo;t have a thumbnail and you don\u0026rsquo;t want the hi-res image to take up the entire width of the screen/container. class=\u0026quot;no-photoswipe\u0026quot; prevents a \u0026lt;figure\u0026gt; from being loaded into PhotoSwipe. If you click on the figure you\u0026rsquo;ll instead a good ol\u0026rsquo; fashioned hyperlink to a bigger image (or - if you haven\u0026rsquo;t specified a bigger image - the same one). {{\u0026lt; gallery \u0026gt;}} shortcode simple gallery To specify a directory of image files:\n1{{\u0026lt; gallery dir=\u0026#34;/img/your-directory-of-images/\u0026#34; \u0026gt;}} The images are automatically captioned with the file name. [image].jpg is used for the hi-res image, and [image]-thumb.jpg is used for the thumbnails. If [image]-thumb.jpg doesn\u0026rsquo;t exist, then [image].jpg will be used for both hi-res and thumbnail images. The default thumbnail suffix is -thumb, but you can specify a different one e.g. thumb=\u0026quot;-small\u0026quot; or thumb=\u0026quot;_150x150\u0026quot;. To specify individual image files 1{{\u0026lt; gallery \u0026gt;}} 2 {{\u0026lt; figure src=\u0026#34;image1.jpg\u0026#34; \u0026gt;}} 3 {{\u0026lt; figure src=\u0026#34;image2.jpg\u0026#34; \u0026gt;}} 4 {{\u0026lt; figure src=\u0026#34;image3.jpg\u0026#34; \u0026gt;}} 5{{\u0026lt; /gallery \u0026gt;}} Optional parameters:\ncaption-position - determines the captions\u0026rsquo; position over the image. Options: bottom (default) center none hides captions on the page (they will only show in PhotoSwipe) caption-effect - determines if/how captions appear upon hover. Options: slide (default) fade none (captions always visible) hover-effect - determines if/how images change upon hover. Options: zoom (default) grow shrink slideup slidedown none hover-transition - determines if/how images change upon hover. Options: not set - smooth transition (default) none - hard transition ","permalink":"https://omgkill.github.io/post/demo/1-image/","tags":["preview","image","shortcodes","tag-7"],"title":"Demo: Image"},{"categories":["demo","shortcodes","index"],"contents":"normal use Note example:\n1{{% notice note %}} 2A notice disclaimer 3{{% /notice %}} Result:\nnote A notice disclaimer You could custom title :\n1{{% notice note Á¨îËÆ∞ %}} 2A notice disclaimer 3{{% /notice %}} Á¨îËÆ∞ A notice disclaimer tip 1{{% notice tip %}} 2A tip disclaimer 3{{% /tip %}} tip A tip disclaimer info 1{{% notice info %}} 2A info disclaimer 3{{% /notice %}} info An information disclaimer warning 1{{% notice warning %}} 2A warning disclaimer 3{{% /notice %}} warning An warning disclaimer ","permalink":"https://omgkill.github.io/post/demo/6-shortcode-notice/","tags":["preview","shortcodes","tag-6"],"title":"Demo: Shortcodes Notice"},{"categories":["demo","index"],"contents":"Hugo-theme-jane optimized for footnote. When you mouse hover the footnote1 , footnote content will be displayed.\nFootnote-1 1You can create footnotes like this[^footnote]. 2 3[^footnote]: Here is the *text* of the **footnote**. will produce:\nYou can create footnotes like this2.\nMouse on the ‚Äòfootnote‚Äô superscript to see content of the footnote.\nFootnote-2 1You can create footnotes like this[^footnote2]. 2 3[^footnote2]: Here is the *text* of the **footnote**. will produce:\nYou can create footnotes like this3.\nMouse on the ‚Äòfootnote‚Äô superscript to see content of the footnote.\nFootnote-3 1You can create footnotes like this[^footnote]. 2 3[^footnote]: Here is the *text* of the **footnote**. will produce:\nYou can create footnotes like this4.\nMouse on the ‚Äòfootnote‚Äô superscript to see content of the footnote.\nFootnote-4 1You can create footnotes like this[^footnote]. 2 3[^footnote]: Here is the *text* of the **footnote**. will produce:\nYou can create footnotes like this5.\nMouse on the ‚Äòfootnote‚Äô superscript to see content of the footnote.\nFootnote-5 1You can create footnotes like this[^footnote]. 2 3[^footnote]: Here is the *text* of the **footnote**. will produce dddddddddddddddddddddddddddddddddddddddddddddd:\nYou can create footnotes like this6.\nMouse on the ‚Äòfootnote‚Äô superscript to see content of the footnote.\nexample footnote show.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nHere is the text of the footnote-1.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nHere is the text of the footnote-2. Here is the text of the footnote-2. Here is the text of the footnote-2. Here is the text of the footnote-2. Here is the text of the footnote-2. The world‚Äôs fastest framework for building websites | Hugo\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nHere is the text of the footnote-3.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nHere is the text of the footnote-4.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nHere is the text of the footnote-5.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://omgkill.github.io/post/demo/4-footnote/","tags":["footnote","markdown","tag-11"],"title":"Demo: Footnote"},{"categories":["English","index"],"contents":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template. Then we\u0026rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026ldquo;$\u0026rdquo; prompt. The output will follow. Lines that start with \u0026ldquo;#\u0026rdquo; are comments that I\u0026rsquo;ve added to explain a point. When I show updates to a file, the \u0026ldquo;:wq\u0026rdquo; on the last line means to save the file.\nHere\u0026rsquo;s an example:\n1## this is a comment 2$ echo this is a command 3this is a command 4 5## edit the file 6$vi foo.md 7+++ 8date = \u0026#34;2014-09-28\u0026#34; 9title = \u0026#34;creating a new theme\u0026#34; 10+++ 11 12bah and humbug 13:wq 14 15## show it 16$ cat foo.md 17+++ 18date = \u0026#34;2014-09-28\u0026#34; 19title = \u0026#34;creating a new theme\u0026#34; 20+++ 21 22bah and humbug 23$ Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It‚Äôs the CSS that controls colors and fonts, it‚Äôs the Javascript that determines actions and reactions. It‚Äôs also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don‚Äôt have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell Hugo where to search for the skin. It‚Äôs extra work, though, so why bother with it?\nThe difference between creating a skin in layouts/ and creating it in themes/ is very subtle. A skin in layouts/ can‚Äôt be customized without updating the templates and static files that it is built from. A skin created in themes/, on the other hand, can be and that makes it easier for other people to use it.\nThe rest of this tutorial will call a skin created in the themes/ directory a theme.\nNote that you can use this tutorial to create a skin in the layouts/ directory if you wish to. The main difference will be that you won‚Äôt need to update the site‚Äôs configuration file to use a theme.\nThe Home Page The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.\nSite Configuration File When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you‚Äôll need to translate my examples. You‚Äôll also need to change the name of the file since Hugo uses the extension to determine how to process it.\nHugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content/ directory and template files in your themes/ directory. It will create HTML files in your public/ directory. You can change this by specifying alternate locations in the configuration file.\nContent Content is stored in text files that contain two sections. The first section is the ‚Äúfront matter,‚Äù which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.\nFront Matter The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn‚Äôt use the file‚Äôs extension to know the format. It looks for markers to signal the type. TOML is surrounded by ‚Äú+++‚Äù, YAML by ‚Äú---‚Äù, and JSON is enclosed in curly braces. I prefer to use TOML, so you‚Äôll need to translate my examples if you prefer YAML or JSON.\nThe information in the front matter is passed into the template before the content is rendered into HTML.\nMarkdown Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.\nTemplate Files Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it\u0026rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.\nThere are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.\nHugo uses its knowledge of the content to find the template file used to render the content. If it can‚Äôt find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can‚Äôt find a template, it will use the default template for the site.\nPlease note that you can use the front matter to influence Hugo‚Äôs choice of templates.\nSingle Template A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.\nList Template A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.\nThe homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.\nPartial Template A partial template is a template that can be included in other templates. Partial templates must be called using the ‚Äúpartial‚Äù template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.\nCreate a New Site Let\u0026rsquo;s use Hugo to create a new web site. I\u0026rsquo;m a Mac user, so I\u0026rsquo;ll create mine in my home directory, in the Sites folder. If you\u0026rsquo;re using Linux, you might have to create the folder first.\nThe \u0026ldquo;new site\u0026rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.\n1$ hugo new site ~/Sites/zafta 2$ cd ~/Sites/zafta 3$ ls -l 4total 8 5drwxr-xr-x 7 quoha staff 238 Sep 29 16:49 . 6drwxr-xr-x 3 quoha staff 102 Sep 29 16:49 .. 7drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes 8-rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml 9drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content 10drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts 11drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static 12$ Take a look in the content/ directory to confirm that it is empty.\nThe other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That\u0026rsquo;s a topic for a different tutorial, so please ignore them for now.\nGenerate the HTML For the New Site Running the hugo command with no options will read all the available content and generate the HTML files. It will also copy all static files (that\u0026rsquo;s everything that\u0026rsquo;s not content). Since we have an empty site, it won\u0026rsquo;t do much, but it will do it very quickly.\n1$ hugo --verbose 2INFO: 2014/09/29 Using config file: config.toml 3INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 4WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] 5WARN: 2014/09/29 Unable to locate layout: [404.html] 60 draft content 70 future content 80 pages created 90 tags created 100 categories created 11in 2 ms 12$ The \u0026ldquo;--verbose\u0026rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with \u0026ldquo;INFO:\u0026rdquo; or \u0026ldquo;WARN:\u0026rdquo; is present because we used that flag. The lines that start with \u0026ldquo;WARN:\u0026rdquo; are warning messages. We\u0026rsquo;ll go over them later.\nWe can verify that the command worked by looking at the directory again.\n1$ ls -l 2total 8 3drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes 4-rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml 5drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content 6drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts 7drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public 8drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static 9$ See that new public/ directory? Hugo placed all generated content there. When you\u0026rsquo;re ready to publish your web site, that\u0026rsquo;s the place to start. For now, though, let\u0026rsquo;s just confirm that we have what we\u0026rsquo;d expect from a site with no content.\n1$ ls -l public 2total 16 3-rw-r--r-- 1 quoha staff 416 Sep 29 17:02 index.xml 4-rw-r--r-- 1 quoha staff 262 Sep 29 17:02 sitemap.xml 5$ Hugo created two XML files, which is standard, but there are no HTML files.\nTest the New Site Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the \u0026ldquo;server\u0026rdquo; command. If it is successful, you will see output similar to the following:\n1$ hugo server --verbose 2INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 3INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 4WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] 5WARN: 2014/09/29 Unable to locate layout: [404.html] 60 draft content 70 future content 80 pages created 90 tags created 100 categories created 11in 2 ms 12Serving pages from /Users/quoha/Sites/zafta/public 13Web Server is available at http://localhost:1313 14Press Ctrl+C to stop Connect to the listed URL (it\u0026rsquo;s on the line that starts with \u0026ldquo;Web Server\u0026rdquo;). If everything is working correctly, you should get a page that shows the following:\n1index.xml 2sitemap.xml That\u0026rsquo;s a listing of your public/ directory. Hugo didn\u0026rsquo;t create a home page because our site has no content. When there\u0026rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.\nLet‚Äôs go back and look at those warnings again.\n1WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] 2WARN: 2014/09/29 Unable to locate layout: [404.html] That second warning is easier to explain. We haven‚Äôt created a template to be used to generate ‚Äúpage not found errors.‚Äù The 404 message is a topic for a separate tutorial.\nNow for the first warning. It is for the home page. You can tell because the first layout that it looked for was ‚Äúindex.html.‚Äù That‚Äôs only used by the home page.\nI like that the verbose flag causes Hugo to list the files that it\u0026rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we\u0026rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn\u0026rsquo;t find a template for the home page and it told you so.\nAt this point, you\u0026rsquo;ve got a working installation and site that we can build upon. All that‚Äôs left is to add some content and a theme to display it.\nCreate a New Theme Hugo doesn\u0026rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.\nWe\u0026rsquo;re going to create a new theme called \u0026ldquo;zafta.\u0026rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.\nAll themes have opinions on content and layout. For example, Zafta uses \u0026ldquo;post\u0026rdquo; over \u0026ldquo;blog\u0026rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.\nCreate a Skeleton Use the hugo \u0026ldquo;new\u0026rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.\n1$ hugo new theme zafta 2 3$ ls -l 4total 8 5drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes 6-rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml 7drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content 8drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts 9drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public 10drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static 11drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes 12 13$ find themes -type f | xargs ls -l 14-rw-r--r-- 1 quoha staff 1081 Sep 29 17:31 themes/zafta/LICENSE.md 15-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/archetypes/default.md 16-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html 17-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html 18-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html 19-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html 20-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html 21-rw-r--r-- 1 quoha staff 93 Sep 29 17:31 themes/zafta/theme.toml 22$ The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.\nPlease take a minute to fill out the theme.toml and LICENSE.md files. They\u0026rsquo;re optional, but if you\u0026rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It\u0026rsquo;s also nice to declare the license so that people will know how they can use the theme.\n1$ vi themes/zafta/theme.toml 2author = \u0026#34;michael d henderson\u0026#34; 3description = \u0026#34;a minimal working template\u0026#34; 4license = \u0026#34;MIT\u0026#34; 5name = \u0026#34;zafta\u0026#34; 6source_repo = \u0026#34;\u0026#34; 7tags = [\u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34;] 8:wq 9 10## also edit themes/zafta/LICENSE.md and change 11## the bit that says \u0026#34;YOUR_NAME_HERE\u0026#34; Note that the the skeleton\u0026rsquo;s template files are empty. Don\u0026rsquo;t worry, we\u0026rsquo;ll be changing that shortly.\n1$ find themes/zafta -name \u0026#39;*.html\u0026#39; | xargs ls -l 2-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html 3-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html 4-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html 5-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html 6-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html 7$ Update the Configuration File to Use the Theme Now that we\u0026rsquo;ve got a theme to work with, it\u0026rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add \u0026ldquo;-t zafta\u0026rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don\u0026rsquo;t put it in the configuration file or specify it on the command line, you won\u0026rsquo;t use the template that you\u0026rsquo;re expecting to.\nEdit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.\n1$ vi config.toml 2theme = \u0026#34;zafta\u0026#34; 3baseurl = \u0026#34;\u0026#34; 4languageCode = \u0026#34;en-us\u0026#34; 5title = \u0026#34;zafta - totally refreshing\u0026#34; 6MetaDataFormat = \u0026#34;toml\u0026#34; 7:wq 8 9$ Generate the Site Now that we have an empty theme, let\u0026rsquo;s generate the site again.\n1$ hugo --verbose 2INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 3INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 60 draft content 70 future content 80 pages created 90 tags created 100 categories created 11in 2 ms 12$ Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme\u0026rsquo;s directory.\nLet\u0026rsquo;s check the public/ directory to see what Hugo\u0026rsquo;s created.\n1$ ls -l public 2total 16 3drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 css 4-rw-r--r-- 1 quoha staff 0 Sep 29 17:56 index.html 5-rw-r--r-- 1 quoha staff 407 Sep 29 17:56 index.xml 6drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 js 7-rw-r--r-- 1 quoha staff 243 Sep 29 17:56 sitemap.xml 8$ Notice four things:\nHugo created a home page. This is the file public/index.html. Hugo created a css/ directory. Hugo created a js/ directory. Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn\u0026rsquo;t create any pages. That\u0026rsquo;s because it considers a \u0026ldquo;page\u0026rdquo; to be a file created directly from a content file. It doesn\u0026rsquo;t count things like the index.html files that it creates automatically. The Home Page Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo\u0026rsquo;s warning message shows that it looks for three different templates:\n1WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] If it can\u0026rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.\nWhen Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.\n1$ find . -name index.html | xargs ls -l 2-rw-r--r-- 1 quoha staff 0 Sep 29 20:21 ./public/index.html 3-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 ./themes/zafta/layouts/index.html 4$ The Magic of Static Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.\nHugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo\u0026rsquo;s opinion is that you\u0026rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don\u0026rsquo;t like that, you can change the directory names in your theme directory or jane delete them completely. Hugo\u0026rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.\n1$ find themes/zafta -type d | xargs ls -ld 2drwxr-xr-x 7 quoha staff 238 Sep 29 17:38 themes/zafta 3drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes/zafta/archetypes 4drwxr-xr-x 5 quoha staff 170 Sep 29 17:31 themes/zafta/layouts 5drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/_default 6drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/partials 7drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/static 8drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/css 9drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/js 10$ The Theme Development Cycle When you\u0026rsquo;re working on a theme, you will make changes in the theme\u0026rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:\nPurge the public/ directory. Run the built in web server in watch mode. Open your site in a browser. Update the theme. Glance at your browser window to see changes. Return to step 4. I‚Äôll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.\nCheck the main Hugo site for information on using Git with Hugo.\nPurge the public/ Directory When generating the site, Hugo will create new files and update existing ones in the public/ directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.\nNote: If you\u0026rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.\nHugo\u0026rsquo;s Watch Option Hugo\u0026rsquo;s \u0026ldquo;--watch\u0026rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.\nLive Reload Hugo\u0026rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, \u0026ldquo;Wow, that\u0026rsquo;s totally amazing.\u0026rdquo;\nDevelopment Commands Use the following commands as the basis for your workflow.\n1## purge old files. hugo will recreate the public directory. 2## 3$ rm -rf public 4## 5## run hugo in watch mode 6## 7$ hugo server --watch --verbose Here\u0026rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I\u0026rsquo;ve said this before, it\u0026rsquo;s amazing.\n1$ rm -rf public 2$ hugo server --watch --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 70 draft content 80 future content 90 pages created 100 tags created 110 categories created 12in 2 ms 13Watching for changes in /Users/quoha/Sites/zafta/content 14Serving pages from /Users/quoha/Sites/zafta/public 15Web Server is available at http://localhost:1313 16Press Ctrl+C to stop 17INFO: 2014/09/29 File System Event: [\u0026#34;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html\u0026#34;: MODIFY|ATTRIB] 18Change detected, rebuilding site 19 20WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 210 draft content 220 future content 230 pages created 240 tags created 250 categories created 26in 1 ms Update the Home Page Template The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme\u0026rsquo;s layout/ directory:\nindex.html _default/list.html _default/single.html We could update one of the default templates, but a good design decision is to update the most specific template available. That\u0026rsquo;s not a hard and fast rule (in fact, we\u0026rsquo;ll break it a few times in this tutorial), but it is a good generalization.\nMake a Static Home Page Right now, that page is empty because we don\u0026rsquo;t have any content and we don\u0026rsquo;t have any logic in the template. Let\u0026rsquo;s change that by adding some text to the template.\n1$ vi themes/zafta/layouts/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; 6\u0026lt;/body\u0026gt; 7\u0026lt;/html\u0026gt; 8:wq 9 10$ Build the web site and then verify the results.\n1$ hugo --verbose 2INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 3INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 60 draft content 70 future content 80 pages created 90 tags created 100 categories created 11in 2 ms 12 13$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 14-rw-r--r-- 1 quoha staff 78 Sep 29 21:26 public/index.html 15 16$ cat public/index.html 17\u0026lt;!DOCTYPE html\u0026gt; 18\u0026lt;html\u0026gt; 19\u0026lt;body\u0026gt; 20 \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; 21\u0026lt;/html\u0026gt; Live Reload Note: If you\u0026rsquo;re running the server with the --watch option, you\u0026rsquo;ll see different content in the file:\n1$ cat public/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; 6\u0026lt;script\u0026gt;document.write(\u0026#39;\u0026lt;script src=\u0026#34;http://\u0026#39; 7 + (location.host || \u0026#39;localhost\u0026#39;).split(\u0026#39;:\u0026#39;)[0] 8 + \u0026#39;:1313/livereload.js?mindelay=10\u0026#34;\u0026gt;\u0026lt;/\u0026#39; 9 + \u0026#39;script\u0026gt;\u0026#39;)\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; When you use --watch, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.\nBuild a \u0026ldquo;Dynamic\u0026rdquo; Home Page \u0026ldquo;Dynamic home page?\u0026rdquo; Hugo\u0026rsquo;s a static web site generator, so this seems an odd thing to say. I mean let\u0026rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We\u0026rsquo;ll use iteration in the template to do that.\nCreate New Posts Now that we have the home page generating static content, let\u0026rsquo;s add some content to the site. We\u0026rsquo;ll display these posts as a list on the home page and on their own page, too.\nHugo has a command to generate a skeleton post, just like it does for sites and themes.\n1$ hugo --verbose new post/first.md 2INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 3INFO: 2014/09/29 attempting to create post/first.md of post 4INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md 5ERROR: 2014/09/29 Unable to Cast \u0026lt;nil\u0026gt; to map[string]interface{} 6 7$ That wasn\u0026rsquo;t very nice, was it?\nThe \u0026ldquo;new\u0026rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there\u0026rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.\n1$ vi themes/zafta/archetypes/post.md 2+++ 3Description = \u0026#34;\u0026#34; 4Tags = [] 5Categories = [] 6+++ 7:wq 8 9$ find themes/zafta/archetypes -type f | xargs ls -l 10-rw-r--r-- 1 quoha staff 0 Sep 29 21:53 themes/zafta/archetypes/default.md 11-rw-r--r-- 1 quoha staff 51 Sep 29 21:54 themes/zafta/archetypes/post.md 12 13$ hugo --verbose new post/first.md 14INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 15INFO: 2014/09/29 attempting to create post/first.md of post 16INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md 17INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md 18/Users/quoha/Sites/zafta/content/post/first.md created 19 20$ hugo --verbose new post/second.md 21INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 22INFO: 2014/09/29 attempting to create post/second.md of post 23INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md 24INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md 25/Users/quoha/Sites/zafta/content/post/second.md created 26 27$ ls -l content/post 28total 16 29-rw-r--r-- 1 quoha staff 104 Sep 29 21:54 first.md 30-rw-r--r-- 1 quoha staff 105 Sep 29 21:57 second.md 31 32$ cat content/post/first.md 33+++ 34Categories = [] 35Description = \u0026#34;\u0026#34; 36Tags = [] 37date = \u0026#34;2014-09-29T21:54:53-05:00\u0026#34; 38title = \u0026#34;first\u0026#34; 39 40+++ 41my first post 42 43$ cat content/post/second.md 44+++ 45Categories = [] 46Description = \u0026#34;\u0026#34; 47Tags = [] 48date = \u0026#34;2014-09-29T21:57:09-05:00\u0026#34; 49title = \u0026#34;second\u0026#34; 50 51+++ 52my second post 53 54$ Build the web site and then verify the results.\n1$ rm -rf public 2$ hugo --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;, \u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;} 7WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 80 draft content 90 future content 102 pages created 110 tags created 120 categories created 13in 4 ms 14$ The output says that it created 2 pages. Those are our new posts:\n1$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 2-rw-r--r-- 1 quoha staff 78 Sep 29 22:13 public/index.html 3-rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/first/index.html 4-rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/index.html 5-rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/second/index.html 6$ The new files are empty because because the templates used to generate the content are empty. The homepage doesn\u0026rsquo;t show the new content, either. We have to update the templates to add the posts.\nList and Single Templates In Hugo, we have three major kinds of templates. There\u0026rsquo;s the home page template that we updated previously. It is used only by the home page. We also have \u0026ldquo;single\u0026rdquo; templates which are used to generate output for a single content file. We also have \u0026ldquo;list\u0026rdquo; templates that are used to group multiple pieces of content before generating output.\nGenerally speaking, list templates are named \u0026ldquo;list.html\u0026rdquo; and single templates are named \u0026ldquo;single.html.\u0026rdquo;\nThere are three other types of templates: partials, content views, and terms. We will not go into much detail on these.\nAdd Content to the Homepage The home page will contain a list of posts. Let\u0026rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.\n1$ vi themes/zafta/layouts/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 {{ range first 10 .Data.Pages }} 6 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 7 {{ end }} 8\u0026lt;/body\u0026gt; 9\u0026lt;/html\u0026gt; 10:wq 11 12$ Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between \u0026ldquo;{{\u0026rdquo; and \u0026ldquo;}}\u0026rdquo;. In our template, the commands are:\nrange .Title end The \u0026ldquo;range\u0026rdquo; command is an iterator. We\u0026rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.\nThe \u0026ldquo;.Title\u0026rdquo; command prints the value of the \u0026ldquo;title\u0026rdquo; variable. Hugo pulls it from the front matter in the Markdown file.\nThe \u0026ldquo;end\u0026rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds \u0026ldquo;end.\u0026rdquo; Everything between the \u0026ldquo;range\u0026rdquo; and \u0026ldquo;end\u0026rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.\nIt\u0026rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.\nBuild the web site and then verify the results.\n1$ rm -rf public 2$ hugo --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;} 7WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 80 draft content 90 future content 102 pages created 110 tags created 120 categories created 13in 4 ms 14$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 15-rw-r--r-- 1 quoha staff 94 Sep 29 22:23 public/index.html 16-rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/first/index.html 17-rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/index.html 18-rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/second/index.html 19$ cat public/index.html 20\u0026lt;!DOCTYPE html\u0026gt; 21\u0026lt;html\u0026gt; 22\u0026lt;body\u0026gt; 23 24 \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; 25 26 \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; 27 28\u0026lt;/body\u0026gt; 29\u0026lt;/html\u0026gt; 30$ Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let\u0026rsquo;s take a moment to appreciate what we\u0026rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you\u0026rsquo;ve learned everything you need to know to build a theme. All that\u0026rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.\nAnd, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don\u0026rsquo;t worry, though, that\u0026rsquo;s all to come.\nAdd Content to the Posts We\u0026rsquo;re working with posts, which are in the content/post/ directory. That means that their section is \u0026ldquo;post\u0026rdquo; (and if we don\u0026rsquo;t do something weird, their type is also \u0026ldquo;post\u0026rdquo;).\nHugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can\u0026rsquo;t find one, then it will look in the _default/ directory. There are some twists that we\u0026rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.\nNow that we know the search rule, let\u0026rsquo;s see what we actually have available:\n1$ find themes/zafta -name single.html | xargs ls -l 2-rw-r--r-- 1 quoha staff 132 Sep 29 17:31 themes/zafta/layouts/_default/single.html We could create a new template, post/single.html, or change the default. Since we don\u0026rsquo;t know of any other content types, let\u0026rsquo;s start with updating the default.\nRemember, any content that we haven\u0026rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we\u0026rsquo;re going to be adding different types of content and we\u0026rsquo;re going to end up undoing some of the changes we\u0026rsquo;ve made. It\u0026rsquo;s good because we\u0026rsquo;ll be able to see immediate results. It\u0026rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we\u0026rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we\u0026rsquo;ll accept the cost and proceed.\nPlease see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you\u0026rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That\u0026rsquo;s a refreshing amount of joy right there.\nUpdate the Template File 1$ vi themes/zafta/layouts/_default/single.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;head\u0026gt; 5 \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 9 {{ .Content }} 10\u0026lt;/body\u0026gt; 11\u0026lt;/html\u0026gt; 12:wq 13 14$ Build the web site and verify the results.\n1$ rm -rf public 2$ hugo --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;} 7WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 80 draft content 90 future content 102 pages created 110 tags created 120 categories created 13in 4 ms 14 15$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 16-rw-r--r-- 1 quoha staff 94 Sep 29 22:40 public/index.html 17-rw-r--r-- 1 quoha staff 125 Sep 29 22:40 public/post/first/index.html 18-rw-r--r-- 1 quoha staff 0 Sep 29 22:40 public/post/index.html 19-rw-r--r-- 1 quoha staff 128 Sep 29 22:40 public/post/second/index.html 20 21$ cat public/post/first/index.html 22\u0026lt;!DOCTYPE html\u0026gt; 23\u0026lt;html\u0026gt; 24\u0026lt;head\u0026gt; 25 \u0026lt;title\u0026gt;first\u0026lt;/title\u0026gt; 26\u0026lt;/head\u0026gt; 27\u0026lt;body\u0026gt; 28 \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; 29 \u0026lt;p\u0026gt;my first post\u0026lt;/p\u0026gt; 30 31\u0026lt;/body\u0026gt; 32\u0026lt;/html\u0026gt; 33 34$ cat public/post/second/index.html 35\u0026lt;!DOCTYPE html\u0026gt; 36\u0026lt;html\u0026gt; 37\u0026lt;head\u0026gt; 38 \u0026lt;title\u0026gt;second\u0026lt;/title\u0026gt; 39\u0026lt;/head\u0026gt; 40\u0026lt;body\u0026gt; 41 \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; 42 \u0026lt;p\u0026gt;my second post\u0026lt;/p\u0026gt; 43 44\u0026lt;/body\u0026gt; 45\u0026lt;/html\u0026gt; 46$ Notice that the posts now have content. You can go to localhost:1313/post/first to verify.\nLinking to Content The posts are on the home page. Let\u0026rsquo;s add a link from there to the post. Since this is the home page, we\u0026rsquo;ll update its template.\n1$ vi themes/zafta/layouts/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 {{ range first 10 .Data.Pages }} 6 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 7 {{ end }} 8\u0026lt;/body\u0026gt; 9\u0026lt;/html\u0026gt; Build the web site and verify the results.\n1$ rm -rf public 2$ hugo --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;} 7WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 80 draft content 90 future content 102 pages created 110 tags created 120 categories created 13in 4 ms 14 15$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 16-rw-r--r-- 1 quoha staff 149 Sep 29 22:44 public/index.html 17-rw-r--r-- 1 quoha staff 125 Sep 29 22:44 public/post/first/index.html 18-rw-r--r-- 1 quoha staff 0 Sep 29 22:44 public/post/index.html 19-rw-r--r-- 1 quoha staff 128 Sep 29 22:44 public/post/second/index.html 20 21$ cat public/index.html 22\u0026lt;!DOCTYPE html\u0026gt; 23\u0026lt;html\u0026gt; 24\u0026lt;body\u0026gt; 25 26 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;/post/second/\u0026#34;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 27 28 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;/post/first/\u0026#34;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 29 30\u0026lt;/body\u0026gt; 31\u0026lt;/html\u0026gt; 32 33$ Create a Post Listing We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let\u0026rsquo;s make it show a list of all posts (not just the first ten).\nWe need to decide which template to update. This will be a listing, so it should be a list template. Let\u0026rsquo;s take a quick look and see which list templates are available.\n1$ find themes/zafta -name list.html | xargs ls -l 2-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don\u0026rsquo;t have multiple content types, so let\u0026rsquo;s stay consistent and update the default list template.\nCreating Top Level Pages Let\u0026rsquo;s add an \u0026ldquo;about\u0026rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).\nThe default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let\u0026rsquo;s verify that by creating an \u0026ldquo;about\u0026rdquo; page at the top level:\n1$ vi content/about.md 2+++ 3title = \u0026#34;about\u0026#34; 4description = \u0026#34;about this site\u0026#34; 5date = \u0026#34;2014-09-27\u0026#34; 6slug = \u0026#34;about time\u0026#34; 7+++ 8 9## about us 10 11i\u0026#39;m speechless 12:wq Generate the web site and verify the results.\n1$ find public -name \u0026#39;*.html\u0026#39; | xargs ls -l 2-rw-rw-r-- 1 mdhender staff 334 Sep 27 15:08 public/about-time/index.html 3-rw-rw-r-- 1 mdhender staff 527 Sep 27 15:08 public/index.html 4-rw-rw-r-- 1 mdhender staff 358 Sep 27 15:08 public/post/first-post/index.html 5-rw-rw-r-- 1 mdhender staff 0 Sep 27 15:08 public/post/index.html 6-rw-rw-r-- 1 mdhender staff 342 Sep 27 15:08 public/post/second-post/index.html Notice that the page wasn\u0026rsquo;t created at the top level. It was created in a sub-directory named \u0026lsquo;about-time/\u0026rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It\u0026rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.\nOne other thing. Take a look at the home page.\n1$ cat public/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/theme/\u0026#34;\u0026gt;creating a new theme\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 6 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/about-time/\u0026#34;\u0026gt;about\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 7 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/second-post/\u0026#34;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 8 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/first-post/\u0026#34;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 9\u0026lt;script\u0026gt;document.write(\u0026#39;\u0026lt;script src=\u0026#34;http://\u0026#39; 10 + (location.host || \u0026#39;localhost\u0026#39;).split(\u0026#39;:\u0026#39;)[0] 11\t+ \u0026#39;:1313/livereload.js?mindelay=10\u0026#34;\u0026gt;\u0026lt;/\u0026#39; 12 + \u0026#39;script\u0026gt;\u0026#39;)\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; 13\u0026lt;/html\u0026gt; Notice that the \u0026ldquo;about\u0026rdquo; link is listed with the posts? That\u0026rsquo;s not desirable, so let\u0026rsquo;s change that first.\n1$ vi themes/zafta/layouts/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; 6 {{ range first 10 .Data.Pages }} 7 {{ if eq .Type \u0026#34;post\u0026#34;}} 8 \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; 9 {{ end }} 10 {{ end }} 11 12 \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; 13 {{ range .Data.Pages }} 14 {{ if eq .Type \u0026#34;page\u0026#34; }} 15 \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; 16 {{ end }} 17 {{ end }} 18\u0026lt;/body\u0026gt; 19\u0026lt;/html\u0026gt; 20:wq Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.\nBut, that about page still renders to about-time/index.html.\n1$ find public -name \u0026#39;*.html\u0026#39; | xargs ls -l 2-rw-rw-r-- 1 mdhender staff 334 Sep 27 15:33 public/about-time/index.html 3-rw-rw-r-- 1 mdhender staff 645 Sep 27 15:33 public/index.html 4-rw-rw-r-- 1 mdhender staff 358 Sep 27 15:33 public/post/first-post/index.html 5-rw-rw-r-- 1 mdhender staff 0 Sep 27 15:33 public/post/index.html 6-rw-rw-r-- 1 mdhender staff 342 Sep 27 15:33 public/post/second-post/index.html Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let\u0026rsquo;s do it the hard way and change the permalink in the configuration file.\n1$ vi config.toml 2[permalinks] 3\tpage = \u0026#34;/:title/\u0026#34; 4\tabout = \u0026#34;/:filename/\u0026#34; Generate the web site and verify that this didn\u0026rsquo;t work. Hugo lets \u0026ldquo;slug\u0026rdquo; or \u0026ldquo;URL\u0026rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.\nSharing Templates If you\u0026rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn\u0026rsquo;t. That\u0026rsquo;s because we didn\u0026rsquo;t put the title in the home page\u0026rsquo;s template (layouts/index.html). That\u0026rsquo;s an easy thing to do, but let\u0026rsquo;s look at a different option.\nWe can put the common bits into a shared template that\u0026rsquo;s stored in the themes/zafta/layouts/partials/ directory.\nCreate the Header and Footer Partials In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme\u0026rsquo;s presentation.\n1$ vi themes/zafta/layouts/partials/header.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;head\u0026gt; 5\t\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8:wq 9 10$ vi themes/zafta/layouts/partials/footer.html 11\u0026lt;/body\u0026gt; 12\u0026lt;/html\u0026gt; 13:wq Update the Home Page Template to Use the Partials The most noticeable difference between a template call and a partials call is the lack of path:\n1{{ template \u0026#34;theme/partials/header.html\u0026#34; . }} versus\n1{{ partial \u0026#34;header.html\u0026#34; . }} Both pass in the context.\nLet\u0026rsquo;s change the home page template to use these new partials.\n1$ vi themes/zafta/layouts/index.html 2{{ partial \u0026#34;header.html\u0026#34; . }} 3 4 \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; 5 {{ range first 10 .Data.Pages }} 6 {{ if eq .Type \u0026#34;post\u0026#34;}} 7 \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; 8 {{ end }} 9 {{ end }} 10 11 \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; 12 {{ range .Data.Pages }} 13 {{ if or (eq .Type \u0026#34;page\u0026#34;) (eq .Type \u0026#34;about\u0026#34;) }} 14 \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; 15 {{ end }} 16 {{ end }} 17 18{{ partial \u0026#34;footer.html\u0026#34; . }} 19:wq Generate the web site and verify the results. The title on the home page is now \u0026ldquo;your title here\u0026rdquo;, which comes from the \u0026ldquo;title\u0026rdquo; variable in the config.toml file.\nUpdate the Default Single Template to Use the Partials 1$ vi themes/zafta/layouts/_default/single.html 2{{ partial \u0026#34;header.html\u0026#34; . }} 3 4 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 5 {{ .Content }} 6 7{{ partial \u0026#34;footer.html\u0026#34; . }} 8:wq Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.\nAdd ‚ÄúDate Published‚Äù to Posts It\u0026rsquo;s common to have posts display the date that they were written or published, so let\u0026rsquo;s add that. The front matter of our posts has a variable named \u0026ldquo;date.\u0026rdquo; It\u0026rsquo;s usually the date the content was created, but let\u0026rsquo;s pretend that\u0026rsquo;s the value we want to display.\nAdd ‚ÄúDate Published‚Äù to the Template We\u0026rsquo;ll start by updating the template used to render the posts. The template code will look like:\n1{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }} Posts use the default single template, so we\u0026rsquo;ll change that file.\n1$ vi themes/zafta/layouts/_default/single.html 2{{ partial \u0026#34;header.html\u0026#34; . }} 3 4 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 5 \u0026lt;h2\u0026gt;{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }}\u0026lt;/h2\u0026gt; 6 {{ .Content }} 7 8{{ partial \u0026#34;footer.html\u0026#34; . }} 9:wq Generate the web site and verify the results. The posts now have the date displayed in them. There\u0026rsquo;s a problem, though. The \u0026ldquo;about\u0026rdquo; page also has the date displayed.\nAs usual, there are a couple of ways to make the date display only on posts. We could do an \u0026ldquo;if\u0026rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.\nThe \u0026ldquo;if\u0026rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of \u0026ldquo;code for today,\u0026rdquo; too.\nLet\u0026rsquo;s assume, though, that we\u0026rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we\u0026rsquo;re going to create a section template.\nLet\u0026rsquo;s restore the default single template before we forget.\n1$ mkdir themes/zafta/layouts/post 2$ vi themes/zafta/layouts/_default/single.html 3{{ partial \u0026#34;header.html\u0026#34; . }} 4 5 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 6 {{ .Content }} 7 8{{ partial \u0026#34;footer.html\u0026#34; . }} 9:wq Now we\u0026rsquo;ll update the post\u0026rsquo;s version of the single template. If you remember Hugo\u0026rsquo;s rules, the template engine will use this version over the default.\n1$ vi themes/zafta/layouts/post/single.html 2{{ partial \u0026#34;header.html\u0026#34; . }} 3 4 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 5 \u0026lt;h2\u0026gt;{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }}\u0026lt;/h2\u0026gt; 6 {{ .Content }} 7 8{{ partial \u0026#34;footer.html\u0026#34; . }} 9:wq Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn\u0026rsquo;t.\nDon\u0026rsquo;t Repeat Yourself DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you\u0026rsquo;re figuring that out, accept that you\u0026rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it\u0026rsquo;s okay to delay splitting up a template.\n","permalink":"https://omgkill.github.io/post/other/english-preview/","tags":["preview","English","tag-2"],"title":"English Creating a New Theme"},{"categories":["Development","golang","index"],"contents":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template. Then we\u0026rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026ldquo;$\u0026rdquo; prompt. The output will follow. Lines that start with \u0026ldquo;#\u0026rdquo; are comments that I\u0026rsquo;ve added to explain a point. When I show updates to a file, the \u0026ldquo;:wq\u0026rdquo; on the last line means to save the file.\nHere\u0026rsquo;s an example:\n1## this is a comment 2$ echo this is a command 3this is a command 4 5## edit the file 6$vi foo.md 7+++ 8date = \u0026#34;2014-09-28\u0026#34; 9title = \u0026#34;creating a new theme\u0026#34; 10+++ 11 12bah and humbug 13:wq 14 15## show it 16$ cat foo.md 17+++ 18date = \u0026#34;2014-09-28\u0026#34; 19title = \u0026#34;creating a new theme\u0026#34; 20+++ 21 22bah and humbug 23$ Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It‚Äôs the CSS that controls colors and fonts, it‚Äôs the Javascript that determines actions and reactions. It‚Äôs also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don‚Äôt have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell Hugo where to search for the skin. It‚Äôs extra work, though, so why bother with it?\nThe difference between creating a skin in layouts/ and creating it in themes/ is very subtle. A skin in layouts/ can‚Äôt be customized without updating the templates and static files that it is built from. A skin created in themes/, on the other hand, can be and that makes it easier for other people to use it.\nThe rest of this tutorial will call a skin created in the themes/ directory a theme.\nNote that you can use this tutorial to create a skin in the layouts/ directory if you wish to. The main difference will be that you won‚Äôt need to update the site‚Äôs configuration file to use a theme.\nThe Home Page The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.\nSite Configuration File When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you‚Äôll need to translate my examples. You‚Äôll also need to change the name of the file since Hugo uses the extension to determine how to process it.\nHugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content/ directory and template files in your themes/ directory. It will create HTML files in your public/ directory. You can change this by specifying alternate locations in the configuration file.\nContent Content is stored in text files that contain two sections. The first section is the ‚Äúfront matter,‚Äù which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.\nFront Matter The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn‚Äôt use the file‚Äôs extension to know the format. It looks for markers to signal the type. TOML is surrounded by ‚Äú+++‚Äù, YAML by ‚Äú---‚Äù, and JSON is enclosed in curly braces. I prefer to use TOML, so you‚Äôll need to translate my examples if you prefer YAML or JSON.\nThe information in the front matter is passed into the template before the content is rendered into HTML.\nMarkdown Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.\nTemplate Files Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it\u0026rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.\nThere are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.\nHugo uses its knowledge of the content to find the template file used to render the content. If it can‚Äôt find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can‚Äôt find a template, it will use the default template for the site.\nPlease note that you can use the front matter to influence Hugo‚Äôs choice of templates.\nSingle Template A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.\nList Template A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.\nThe homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.\nPartial Template A partial template is a template that can be included in other templates. Partial templates must be called using the ‚Äúpartial‚Äù template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.\nCreate a New Site Let\u0026rsquo;s use Hugo to create a new web site. I\u0026rsquo;m a Mac user, so I\u0026rsquo;ll create mine in my home directory, in the Sites folder. If you\u0026rsquo;re using Linux, you might have to create the folder first.\nThe \u0026ldquo;new site\u0026rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.\n1$ hugo new site ~/Sites/zafta 2$ cd ~/Sites/zafta 3$ ls -l 4total 8 5drwxr-xr-x 7 quoha staff 238 Sep 29 16:49 . 6drwxr-xr-x 3 quoha staff 102 Sep 29 16:49 .. 7drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes 8-rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml 9drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content 10drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts 11drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static 12$ Take a look in the content/ directory to confirm that it is empty.\nThe other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That\u0026rsquo;s a topic for a different tutorial, so please ignore them for now.\nGenerate the HTML For the New Site Running the hugo command with no options will read all the available content and generate the HTML files. It will also copy all static files (that\u0026rsquo;s everything that\u0026rsquo;s not content). Since we have an empty site, it won\u0026rsquo;t do much, but it will do it very quickly.\n1$ hugo --verbose 2INFO: 2014/09/29 Using config file: config.toml 3INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 4WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] 5WARN: 2014/09/29 Unable to locate layout: [404.html] 60 draft content 70 future content 80 pages created 90 tags created 100 categories created 11in 2 ms 12$ The \u0026ldquo;--verbose\u0026rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with \u0026ldquo;INFO:\u0026rdquo; or \u0026ldquo;WARN:\u0026rdquo; is present because we used that flag. The lines that start with \u0026ldquo;WARN:\u0026rdquo; are warning messages. We\u0026rsquo;ll go over them later.\nWe can verify that the command worked by looking at the directory again.\n1$ ls -l 2total 8 3drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes 4-rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml 5drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content 6drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts 7drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public 8drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static 9$ See that new public/ directory? Hugo placed all generated content there. When you\u0026rsquo;re ready to publish your web site, that\u0026rsquo;s the place to start. For now, though, let\u0026rsquo;s just confirm that we have what we\u0026rsquo;d expect from a site with no content.\n1$ ls -l public 2total 16 3-rw-r--r-- 1 quoha staff 416 Sep 29 17:02 index.xml 4-rw-r--r-- 1 quoha staff 262 Sep 29 17:02 sitemap.xml 5$ Hugo created two XML files, which is standard, but there are no HTML files.\nTest the New Site Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the \u0026ldquo;server\u0026rdquo; command. If it is successful, you will see output similar to the following:\n1$ hugo server --verbose 2INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 3INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 4WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] 5WARN: 2014/09/29 Unable to locate layout: [404.html] 60 draft content 70 future content 80 pages created 90 tags created 100 categories created 11in 2 ms 12Serving pages from /Users/quoha/Sites/zafta/public 13Web Server is available at http://localhost:1313 14Press Ctrl+C to stop Connect to the listed URL (it\u0026rsquo;s on the line that starts with \u0026ldquo;Web Server\u0026rdquo;). If everything is working correctly, you should get a page that shows the following:\n1index.xml 2sitemap.xml That\u0026rsquo;s a listing of your public/ directory. Hugo didn\u0026rsquo;t create a home page because our site has no content. When there\u0026rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.\nLet‚Äôs go back and look at those warnings again.\n1WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] 2WARN: 2014/09/29 Unable to locate layout: [404.html] That second warning is easier to explain. We haven‚Äôt created a template to be used to generate ‚Äúpage not found errors.‚Äù The 404 message is a topic for a separate tutorial.\nNow for the first warning. It is for the home page. You can tell because the first layout that it looked for was ‚Äúindex.html.‚Äù That‚Äôs only used by the home page.\nI like that the verbose flag causes Hugo to list the files that it\u0026rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we\u0026rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn\u0026rsquo;t find a template for the home page and it told you so.\nAt this point, you\u0026rsquo;ve got a working installation and site that we can build upon. All that‚Äôs left is to add some content and a theme to display it.\nCreate a New Theme Hugo doesn\u0026rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.\nWe\u0026rsquo;re going to create a new theme called \u0026ldquo;zafta.\u0026rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.\nAll themes have opinions on content and layout. For example, Zafta uses \u0026ldquo;post\u0026rdquo; over \u0026ldquo;blog\u0026rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.\nCreate a Skeleton Use the hugo \u0026ldquo;new\u0026rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.\n1$ hugo new theme zafta 2 3$ ls -l 4total 8 5drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes 6-rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml 7drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content 8drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts 9drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public 10drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static 11drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes 12 13$ find themes -type f | xargs ls -l 14-rw-r--r-- 1 quoha staff 1081 Sep 29 17:31 themes/zafta/LICENSE.md 15-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/archetypes/default.md 16-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html 17-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html 18-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html 19-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html 20-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html 21-rw-r--r-- 1 quoha staff 93 Sep 29 17:31 themes/zafta/theme.toml 22$ The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.\nPlease take a minute to fill out the theme.toml and LICENSE.md files. They\u0026rsquo;re optional, but if you\u0026rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It\u0026rsquo;s also nice to declare the license so that people will know how they can use the theme.\n1$ vi themes/zafta/theme.toml 2author = \u0026#34;michael d henderson\u0026#34; 3description = \u0026#34;a minimal working template\u0026#34; 4license = \u0026#34;MIT\u0026#34; 5name = \u0026#34;zafta\u0026#34; 6source_repo = \u0026#34;\u0026#34; 7tags = [\u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34;] 8:wq 9 10## also edit themes/zafta/LICENSE.md and change 11## the bit that says \u0026#34;YOUR_NAME_HERE\u0026#34; Note that the the skeleton\u0026rsquo;s template files are empty. Don\u0026rsquo;t worry, we\u0026rsquo;ll be changing that shortly.\n1$ find themes/zafta -name \u0026#39;*.html\u0026#39; | xargs ls -l 2-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html 3-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html 4-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html 5-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html 6-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html 7$ Update the Configuration File to Use the Theme Now that we\u0026rsquo;ve got a theme to work with, it\u0026rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add \u0026ldquo;-t zafta\u0026rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don\u0026rsquo;t put it in the configuration file or specify it on the command line, you won\u0026rsquo;t use the template that you\u0026rsquo;re expecting to.\nEdit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.\n1$ vi config.toml 2theme = \u0026#34;zafta\u0026#34; 3baseurl = \u0026#34;\u0026#34; 4languageCode = \u0026#34;en-us\u0026#34; 5title = \u0026#34;zafta - totally refreshing\u0026#34; 6MetaDataFormat = \u0026#34;toml\u0026#34; 7:wq 8 9$ Generate the Site Now that we have an empty theme, let\u0026rsquo;s generate the site again.\n1$ hugo --verbose 2INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 3INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 60 draft content 70 future content 80 pages created 90 tags created 100 categories created 11in 2 ms 12$ Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme\u0026rsquo;s directory.\nLet\u0026rsquo;s check the public/ directory to see what Hugo\u0026rsquo;s created.\n1$ ls -l public 2total 16 3drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 css 4-rw-r--r-- 1 quoha staff 0 Sep 29 17:56 index.html 5-rw-r--r-- 1 quoha staff 407 Sep 29 17:56 index.xml 6drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 js 7-rw-r--r-- 1 quoha staff 243 Sep 29 17:56 sitemap.xml 8$ Notice four things:\nHugo created a home page. This is the file public/index.html. Hugo created a css/ directory. Hugo created a js/ directory. Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn\u0026rsquo;t create any pages. That\u0026rsquo;s because it considers a \u0026ldquo;page\u0026rdquo; to be a file created directly from a content file. It doesn\u0026rsquo;t count things like the index.html files that it creates automatically. The Home Page Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo\u0026rsquo;s warning message shows that it looks for three different templates:\n1WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] If it can\u0026rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.\nWhen Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.\n1$ find . -name index.html | xargs ls -l 2-rw-r--r-- 1 quoha staff 0 Sep 29 20:21 ./public/index.html 3-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 ./themes/zafta/layouts/index.html 4$ The Magic of Static Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.\nHugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo\u0026rsquo;s opinion is that you\u0026rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don\u0026rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo\u0026rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.\n1$ find themes/zafta -type d | xargs ls -ld 2drwxr-xr-x 7 quoha staff 238 Sep 29 17:38 themes/zafta 3drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes/zafta/archetypes 4drwxr-xr-x 5 quoha staff 170 Sep 29 17:31 themes/zafta/layouts 5drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/_default 6drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/partials 7drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/static 8drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/css 9drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/js 10$ The Theme Development Cycle When you\u0026rsquo;re working on a theme, you will make changes in the theme\u0026rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:\nPurge the public/ directory. Run the built in web server in watch mode. Open your site in a browser. Update the theme. Glance at your browser window to see changes. Return to step 4. I‚Äôll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.\nCheck the main Hugo site for information on using Git with Hugo.\nPurge the public/ Directory When generating the site, Hugo will create new files and update existing ones in the public/ directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.\nNote: If you\u0026rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.\nHugo\u0026rsquo;s Watch Option Hugo\u0026rsquo;s \u0026ldquo;--watch\u0026rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.\nLive Reload Hugo\u0026rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, \u0026ldquo;Wow, that\u0026rsquo;s totally amazing.\u0026rdquo;\nDevelopment Commands Use the following commands as the basis for your workflow.\n1## purge old files. hugo will recreate the public directory. 2## 3$ rm -rf public 4## 5## run hugo in watch mode 6## 7$ hugo server --watch --verbose Here\u0026rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I\u0026rsquo;ve said this before, it\u0026rsquo;s amazing.\n1$ rm -rf public 2$ hugo server --watch --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 70 draft content 80 future content 90 pages created 100 tags created 110 categories created 12in 2 ms 13Watching for changes in /Users/quoha/Sites/zafta/content 14Serving pages from /Users/quoha/Sites/zafta/public 15Web Server is available at http://localhost:1313 16Press Ctrl+C to stop 17INFO: 2014/09/29 File System Event: [\u0026#34;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html\u0026#34;: MODIFY|ATTRIB] 18Change detected, rebuilding site 19 20WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 210 draft content 220 future content 230 pages created 240 tags created 250 categories created 26in 1 ms Update the Home Page Template The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme\u0026rsquo;s layout/ directory:\nindex.html _default/list.html _default/single.html We could update one of the default templates, but a good design decision is to update the most specific template available. That\u0026rsquo;s not a hard and fast rule (in fact, we\u0026rsquo;ll break it a few times in this tutorial), but it is a good generalization.\nMake a Static Home Page Right now, that page is empty because we don\u0026rsquo;t have any content and we don\u0026rsquo;t have any logic in the template. Let\u0026rsquo;s change that by adding some text to the template.\n1$ vi themes/zafta/layouts/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; 6\u0026lt;/body\u0026gt; 7\u0026lt;/html\u0026gt; 8:wq 9 10$ Build the web site and then verify the results.\n1$ hugo --verbose 2INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 3INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 60 draft content 70 future content 80 pages created 90 tags created 100 categories created 11in 2 ms 12 13$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 14-rw-r--r-- 1 quoha staff 78 Sep 29 21:26 public/index.html 15 16$ cat public/index.html 17\u0026lt;!DOCTYPE html\u0026gt; 18\u0026lt;html\u0026gt; 19\u0026lt;body\u0026gt; 20 \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; 21\u0026lt;/html\u0026gt; Live Reload Note: If you\u0026rsquo;re running the server with the --watch option, you\u0026rsquo;ll see different content in the file:\n1$ cat public/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; 6\u0026lt;script\u0026gt;document.write(\u0026#39;\u0026lt;script src=\u0026#34;http://\u0026#39; 7 + (location.host || \u0026#39;localhost\u0026#39;).split(\u0026#39;:\u0026#39;)[0] 8 + \u0026#39;:1313/livereload.js?mindelay=10\u0026#34;\u0026gt;\u0026lt;/\u0026#39; 9 + \u0026#39;script\u0026gt;\u0026#39;)\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; When you use --watch, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.\nBuild a \u0026ldquo;Dynamic\u0026rdquo; Home Page \u0026ldquo;Dynamic home page?\u0026rdquo; Hugo\u0026rsquo;s a static web site generator, so this seems an odd thing to say. I mean let\u0026rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We\u0026rsquo;ll use iteration in the template to do that.\nCreate New Posts Now that we have the home page generating static content, let\u0026rsquo;s add some content to the site. We\u0026rsquo;ll display these posts as a list on the home page and on their own page, too.\nHugo has a command to generate a skeleton post, just like it does for sites and themes.\n1$ hugo --verbose new post/first.md 2INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 3INFO: 2014/09/29 attempting to create post/first.md of post 4INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md 5ERROR: 2014/09/29 Unable to Cast \u0026lt;nil\u0026gt; to map[string]interface{} 6 7$ That wasn\u0026rsquo;t very nice, was it?\nThe \u0026ldquo;new\u0026rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there\u0026rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.\n1$ vi themes/zafta/archetypes/post.md 2+++ 3Description = \u0026#34;\u0026#34; 4Tags = [] 5Categories = [] 6+++ 7:wq 8 9$ find themes/zafta/archetypes -type f | xargs ls -l 10-rw-r--r-- 1 quoha staff 0 Sep 29 21:53 themes/zafta/archetypes/default.md 11-rw-r--r-- 1 quoha staff 51 Sep 29 21:54 themes/zafta/archetypes/post.md 12 13$ hugo --verbose new post/first.md 14INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 15INFO: 2014/09/29 attempting to create post/first.md of post 16INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md 17INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md 18/Users/quoha/Sites/zafta/content/post/first.md created 19 20$ hugo --verbose new post/second.md 21INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 22INFO: 2014/09/29 attempting to create post/second.md of post 23INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md 24INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md 25/Users/quoha/Sites/zafta/content/post/second.md created 26 27$ ls -l content/post 28total 16 29-rw-r--r-- 1 quoha staff 104 Sep 29 21:54 first.md 30-rw-r--r-- 1 quoha staff 105 Sep 29 21:57 second.md 31 32$ cat content/post/first.md 33+++ 34Categories = [] 35Description = \u0026#34;\u0026#34; 36Tags = [] 37date = \u0026#34;2014-09-29T21:54:53-05:00\u0026#34; 38title = \u0026#34;first\u0026#34; 39 40+++ 41my first post 42 43$ cat content/post/second.md 44+++ 45Categories = [] 46Description = \u0026#34;\u0026#34; 47Tags = [] 48date = \u0026#34;2014-09-29T21:57:09-05:00\u0026#34; 49title = \u0026#34;second\u0026#34; 50 51+++ 52my second post 53 54$ Build the web site and then verify the results.\n1$ rm -rf public 2$ hugo --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;, \u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;} 7WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 80 draft content 90 future content 102 pages created 110 tags created 120 categories created 13in 4 ms 14$ The output says that it created 2 pages. Those are our new posts:\n1$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 2-rw-r--r-- 1 quoha staff 78 Sep 29 22:13 public/index.html 3-rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/first/index.html 4-rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/index.html 5-rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/second/index.html 6$ The new files are empty because because the templates used to generate the content are empty. The homepage doesn\u0026rsquo;t show the new content, either. We have to update the templates to add the posts.\nList and Single Templates In Hugo, we have three major kinds of templates. There\u0026rsquo;s the home page template that we updated previously. It is used only by the home page. We also have \u0026ldquo;single\u0026rdquo; templates which are used to generate output for a single content file. We also have \u0026ldquo;list\u0026rdquo; templates that are used to group multiple pieces of content before generating output.\nGenerally speaking, list templates are named \u0026ldquo;list.html\u0026rdquo; and single templates are named \u0026ldquo;single.html.\u0026rdquo;\nThere are three other types of templates: partials, content views, and terms. We will not go into much detail on these.\nAdd Content to the Homepage The home page will contain a list of posts. Let\u0026rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.\n1$ vi themes/zafta/layouts/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 {{ range first 10 .Data.Pages }} 6 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 7 {{ end }} 8\u0026lt;/body\u0026gt; 9\u0026lt;/html\u0026gt; 10:wq 11 12$ Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between \u0026ldquo;{{\u0026rdquo; and \u0026ldquo;}}\u0026rdquo;. In our template, the commands are:\nrange .Title end The \u0026ldquo;range\u0026rdquo; command is an iterator. We\u0026rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.\nThe \u0026ldquo;.Title\u0026rdquo; command prints the value of the \u0026ldquo;title\u0026rdquo; variable. Hugo pulls it from the front matter in the Markdown file.\nThe \u0026ldquo;end\u0026rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds \u0026ldquo;end.\u0026rdquo; Everything between the \u0026ldquo;range\u0026rdquo; and \u0026ldquo;end\u0026rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.\nIt\u0026rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.\nBuild the web site and then verify the results.\n1$ rm -rf public 2$ hugo --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;} 7WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 80 draft content 90 future content 102 pages created 110 tags created 120 categories created 13in 4 ms 14$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 15-rw-r--r-- 1 quoha staff 94 Sep 29 22:23 public/index.html 16-rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/first/index.html 17-rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/index.html 18-rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/second/index.html 19$ cat public/index.html 20\u0026lt;!DOCTYPE html\u0026gt; 21\u0026lt;html\u0026gt; 22\u0026lt;body\u0026gt; 23 24 \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; 25 26 \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; 27 28\u0026lt;/body\u0026gt; 29\u0026lt;/html\u0026gt; 30$ Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let\u0026rsquo;s take a moment to appreciate what we\u0026rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you\u0026rsquo;ve learned everything you need to know to build a theme. All that\u0026rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.\nAnd, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don\u0026rsquo;t worry, though, that\u0026rsquo;s all to come.\nAdd Content to the Posts We\u0026rsquo;re working with posts, which are in the content/post/ directory. That means that their section is \u0026ldquo;post\u0026rdquo; (and if we don\u0026rsquo;t do something weird, their type is also \u0026ldquo;post\u0026rdquo;).\nHugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can\u0026rsquo;t find one, then it will look in the _default/ directory. There are some twists that we\u0026rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.\nNow that we know the search rule, let\u0026rsquo;s see what we actually have available:\n1$ find themes/zafta -name single.html | xargs ls -l 2-rw-r--r-- 1 quoha staff 132 Sep 29 17:31 themes/zafta/layouts/_default/single.html We could create a new template, post/single.html, or change the default. Since we don\u0026rsquo;t know of any other content types, let\u0026rsquo;s start with updating the default.\nRemember, any content that we haven\u0026rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we\u0026rsquo;re going to be adding different types of content and we\u0026rsquo;re going to end up undoing some of the changes we\u0026rsquo;ve made. It\u0026rsquo;s good because we\u0026rsquo;ll be able to see immediate results. It\u0026rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we\u0026rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we\u0026rsquo;ll accept the cost and proceed.\nPlease see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you\u0026rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That\u0026rsquo;s a refreshing amount of joy right there.\nUpdate the Template File 1$ vi themes/zafta/layouts/_default/single.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;head\u0026gt; 5 \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 9 {{ .Content }} 10\u0026lt;/body\u0026gt; 11\u0026lt;/html\u0026gt; 12:wq 13 14$ Build the web site and verify the results.\n1$ rm -rf public 2$ hugo --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;} 7WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 80 draft content 90 future content 102 pages created 110 tags created 120 categories created 13in 4 ms 14 15$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 16-rw-r--r-- 1 quoha staff 94 Sep 29 22:40 public/index.html 17-rw-r--r-- 1 quoha staff 125 Sep 29 22:40 public/post/first/index.html 18-rw-r--r-- 1 quoha staff 0 Sep 29 22:40 public/post/index.html 19-rw-r--r-- 1 quoha staff 128 Sep 29 22:40 public/post/second/index.html 20 21$ cat public/post/first/index.html 22\u0026lt;!DOCTYPE html\u0026gt; 23\u0026lt;html\u0026gt; 24\u0026lt;head\u0026gt; 25 \u0026lt;title\u0026gt;first\u0026lt;/title\u0026gt; 26\u0026lt;/head\u0026gt; 27\u0026lt;body\u0026gt; 28 \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; 29 \u0026lt;p\u0026gt;my first post\u0026lt;/p\u0026gt; 30 31\u0026lt;/body\u0026gt; 32\u0026lt;/html\u0026gt; 33 34$ cat public/post/second/index.html 35\u0026lt;!DOCTYPE html\u0026gt; 36\u0026lt;html\u0026gt; 37\u0026lt;head\u0026gt; 38 \u0026lt;title\u0026gt;second\u0026lt;/title\u0026gt; 39\u0026lt;/head\u0026gt; 40\u0026lt;body\u0026gt; 41 \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; 42 \u0026lt;p\u0026gt;my second post\u0026lt;/p\u0026gt; 43 44\u0026lt;/body\u0026gt; 45\u0026lt;/html\u0026gt; 46$ Notice that the posts now have content. You can go to localhost:1313/post/first to verify.\nLinking to Content The posts are on the home page. Let\u0026rsquo;s add a link from there to the post. Since this is the home page, we\u0026rsquo;ll update its template.\n1$ vi themes/zafta/layouts/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 {{ range first 10 .Data.Pages }} 6 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 7 {{ end }} 8\u0026lt;/body\u0026gt; 9\u0026lt;/html\u0026gt; Build the web site and verify the results.\n1$ rm -rf public 2$ hugo --verbose 3INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml 4INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ 5INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ 6INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;} 7WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 80 draft content 90 future content 102 pages created 110 tags created 120 categories created 13in 4 ms 14 15$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l 16-rw-r--r-- 1 quoha staff 149 Sep 29 22:44 public/index.html 17-rw-r--r-- 1 quoha staff 125 Sep 29 22:44 public/post/first/index.html 18-rw-r--r-- 1 quoha staff 0 Sep 29 22:44 public/post/index.html 19-rw-r--r-- 1 quoha staff 128 Sep 29 22:44 public/post/second/index.html 20 21$ cat public/index.html 22\u0026lt;!DOCTYPE html\u0026gt; 23\u0026lt;html\u0026gt; 24\u0026lt;body\u0026gt; 25 26 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;/post/second/\u0026#34;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 27 28 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;/post/first/\u0026#34;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 29 30\u0026lt;/body\u0026gt; 31\u0026lt;/html\u0026gt; 32 33$ Create a Post Listing We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let\u0026rsquo;s make it show a list of all posts (not just the first ten).\nWe need to decide which template to update. This will be a listing, so it should be a list template. Let\u0026rsquo;s take a quick look and see which list templates are available.\n1$ find themes/zafta -name list.html | xargs ls -l 2-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don\u0026rsquo;t have multiple content types, so let\u0026rsquo;s stay consistent and update the default list template.\nCreating Top Level Pages Let\u0026rsquo;s add an \u0026ldquo;about\u0026rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).\nThe default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let\u0026rsquo;s verify that by creating an \u0026ldquo;about\u0026rdquo; page at the top level:\n1$ vi content/about.md 2+++ 3title = \u0026#34;about\u0026#34; 4description = \u0026#34;about this site\u0026#34; 5date = \u0026#34;2014-09-27\u0026#34; 6slug = \u0026#34;about time\u0026#34; 7+++ 8 9## about us 10 11i\u0026#39;m speechless 12:wq Generate the web site and verify the results.\n1$ find public -name \u0026#39;*.html\u0026#39; | xargs ls -l 2-rw-rw-r-- 1 mdhender staff 334 Sep 27 15:08 public/about-time/index.html 3-rw-rw-r-- 1 mdhender staff 527 Sep 27 15:08 public/index.html 4-rw-rw-r-- 1 mdhender staff 358 Sep 27 15:08 public/post/first-post/index.html 5-rw-rw-r-- 1 mdhender staff 0 Sep 27 15:08 public/post/index.html 6-rw-rw-r-- 1 mdhender staff 342 Sep 27 15:08 public/post/second-post/index.html Notice that the page wasn\u0026rsquo;t created at the top level. It was created in a sub-directory named \u0026lsquo;about-time/\u0026rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It\u0026rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.\nOne other thing. Take a look at the home page.\n1$ cat public/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/theme/\u0026#34;\u0026gt;creating a new theme\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 6 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/about-time/\u0026#34;\u0026gt;about\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 7 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/second-post/\u0026#34;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 8 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/first-post/\u0026#34;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 9\u0026lt;script\u0026gt;document.write(\u0026#39;\u0026lt;script src=\u0026#34;http://\u0026#39; 10 + (location.host || \u0026#39;localhost\u0026#39;).split(\u0026#39;:\u0026#39;)[0] 11\t+ \u0026#39;:1313/livereload.js?mindelay=10\u0026#34;\u0026gt;\u0026lt;/\u0026#39; 12 + \u0026#39;script\u0026gt;\u0026#39;)\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; 13\u0026lt;/html\u0026gt; Notice that the \u0026ldquo;about\u0026rdquo; link is listed with the posts? That\u0026rsquo;s not desirable, so let\u0026rsquo;s change that first.\n1$ vi themes/zafta/layouts/index.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;body\u0026gt; 5 \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; 6 {{ range first 10 .Data.Pages }} 7 {{ if eq .Type \u0026#34;post\u0026#34;}} 8 \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; 9 {{ end }} 10 {{ end }} 11 12 \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; 13 {{ range .Data.Pages }} 14 {{ if eq .Type \u0026#34;page\u0026#34; }} 15 \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; 16 {{ end }} 17 {{ end }} 18\u0026lt;/body\u0026gt; 19\u0026lt;/html\u0026gt; 20:wq Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.\nBut, that about page still renders to about-time/index.html.\n1$ find public -name \u0026#39;*.html\u0026#39; | xargs ls -l 2-rw-rw-r-- 1 mdhender staff 334 Sep 27 15:33 public/about-time/index.html 3-rw-rw-r-- 1 mdhender staff 645 Sep 27 15:33 public/index.html 4-rw-rw-r-- 1 mdhender staff 358 Sep 27 15:33 public/post/first-post/index.html 5-rw-rw-r-- 1 mdhender staff 0 Sep 27 15:33 public/post/index.html 6-rw-rw-r-- 1 mdhender staff 342 Sep 27 15:33 public/post/second-post/index.html Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let\u0026rsquo;s do it the hard way and change the permalink in the configuration file.\n1$ vi config.toml 2[permalinks] 3\tpage = \u0026#34;/:title/\u0026#34; 4\tabout = \u0026#34;/:filename/\u0026#34; Generate the web site and verify that this didn\u0026rsquo;t work. Hugo lets \u0026ldquo;slug\u0026rdquo; or \u0026ldquo;URL\u0026rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.\nSharing Templates If you\u0026rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn\u0026rsquo;t. That\u0026rsquo;s because we didn\u0026rsquo;t put the title in the home page\u0026rsquo;s template (layouts/index.html). That\u0026rsquo;s an easy thing to do, but let\u0026rsquo;s look at a different option.\nWe can put the common bits into a shared template that\u0026rsquo;s stored in the themes/zafta/layouts/partials/ directory.\nCreate the Header and Footer Partials In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme\u0026rsquo;s presentation.\n1$ vi themes/zafta/layouts/partials/header.html 2\u0026lt;!DOCTYPE html\u0026gt; 3\u0026lt;html\u0026gt; 4\u0026lt;head\u0026gt; 5\t\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8:wq 9 10$ vi themes/zafta/layouts/partials/footer.html 11\u0026lt;/body\u0026gt; 12\u0026lt;/html\u0026gt; 13:wq Update the Home Page Template to Use the Partials The most noticeable difference between a template call and a partials call is the lack of path:\n1{{ template \u0026#34;theme/partials/header.html\u0026#34; . }} versus\n1{{ partial \u0026#34;header.html\u0026#34; . }} Both pass in the context.\nLet\u0026rsquo;s change the home page template to use these new partials.\n1$ vi themes/zafta/layouts/index.html 2{{ partial \u0026#34;header.html\u0026#34; . }} 3 4 \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; 5 {{ range first 10 .Data.Pages }} 6 {{ if eq .Type \u0026#34;post\u0026#34;}} 7 \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; 8 {{ end }} 9 {{ end }} 10 11 \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; 12 {{ range .Data.Pages }} 13 {{ if or (eq .Type \u0026#34;page\u0026#34;) (eq .Type \u0026#34;about\u0026#34;) }} 14 \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; 15 {{ end }} 16 {{ end }} 17 18{{ partial \u0026#34;footer.html\u0026#34; . }} 19:wq Generate the web site and verify the results. The title on the home page is now \u0026ldquo;your title here\u0026rdquo;, which comes from the \u0026ldquo;title\u0026rdquo; variable in the config.toml file.\nUpdate the Default Single Template to Use the Partials 1$ vi themes/zafta/layouts/_default/single.html 2{{ partial \u0026#34;header.html\u0026#34; . }} 3 4 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 5 {{ .Content }} 6 7{{ partial \u0026#34;footer.html\u0026#34; . }} 8:wq Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.\nAdd ‚ÄúDate Published‚Äù to Posts It\u0026rsquo;s common to have posts display the date that they were written or published, so let\u0026rsquo;s add that. The front matter of our posts has a variable named \u0026ldquo;date.\u0026rdquo; It\u0026rsquo;s usually the date the content was created, but let\u0026rsquo;s pretend that\u0026rsquo;s the value we want to display.\nAdd ‚ÄúDate Published‚Äù to the Template We\u0026rsquo;ll start by updating the template used to render the posts. The template code will look like:\n1{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }} Posts use the default single template, so we\u0026rsquo;ll change that file.\n1$ vi themes/zafta/layouts/_default/single.html 2{{ partial \u0026#34;header.html\u0026#34; . }} 3 4 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 5 \u0026lt;h2\u0026gt;{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }}\u0026lt;/h2\u0026gt; 6 {{ .Content }} 7 8{{ partial \u0026#34;footer.html\u0026#34; . }} 9:wq Generate the web site and verify the results. The posts now have the date displayed in them. There\u0026rsquo;s a problem, though. The \u0026ldquo;about\u0026rdquo; page also has the date displayed.\nAs usual, there are a couple of ways to make the date display only on posts. We could do an \u0026ldquo;if\u0026rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.\nThe \u0026ldquo;if\u0026rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of \u0026ldquo;code for today,\u0026rdquo; too.\nLet\u0026rsquo;s assume, though, that we\u0026rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we\u0026rsquo;re going to create a section template.\nLet\u0026rsquo;s restore the default single template before we forget.\n1$ mkdir themes/zafta/layouts/post 2$ vi themes/zafta/layouts/_default/single.html 3{{ partial \u0026#34;header.html\u0026#34; . }} 4 5 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 6 {{ .Content }} 7 8{{ partial \u0026#34;footer.html\u0026#34; . }} 9:wq Now we\u0026rsquo;ll update the post\u0026rsquo;s version of the single template. If you remember Hugo\u0026rsquo;s rules, the template engine will use this version over the default.\n1$ vi themes/zafta/layouts/post/single.html 2{{ partial \u0026#34;header.html\u0026#34; . }} 3 4 \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; 5 \u0026lt;h2\u0026gt;{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }}\u0026lt;/h2\u0026gt; 6 {{ .Content }} 7 8{{ partial \u0026#34;footer.html\u0026#34; . }} 9:wq Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn\u0026rsquo;t.\nDon\u0026rsquo;t Repeat Yourself DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you\u0026rsquo;re figuring that out, accept that you\u0026rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it\u0026rsquo;s okay to delay splitting up a template.\n","permalink":"https://omgkill.github.io/post/other/creating-a-new-theme/","tags":["go","golang","templates","themes","development"],"title":"Creating a New Theme"},{"categories":["Development","golang","index"],"contents":"Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.\nThis document is a brief primer on using go templates. The go docs provide more details.\nIntroduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that go templates parse very quickly.\nA unique characteristic of go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the go docs.\nBasic Syntax Go lang templates are html files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026ldquo;foo\u0026rdquo;:\n{{ foo }} Parameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }} Methods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026ldquo;bar\u0026rdquo;\n{{ .Params.bar }} Parentheses can be used to group items together\n{{ if or (isset .Params \u0026quot;alt\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;) }} Caption {{ end }} Variables Each go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; Variables can also be defined and referenced.\n{{ $address := \u0026quot;123 Main St.\u0026quot;}} {{ $address }} Functions Go template ship with a few functions which provide basic functionality. The go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.\nExample:\n{{ add 1 2 }} Includes When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.\nExample:\n{{ template \u0026quot;chrome/header.html\u0026quot; . }} Logic Go templates provide the most basic iteration and conditional logic.\nIteration Just like in go, the go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.\nExample 1: Using Context\n{{ range array }} {{ . }} {{ end }} Example 2: Declaring value variable name\n{{range $element := array}} {{ $element }} {{ end }} Example 2: Declaring key and value variable name\n{{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }} Conditionals If, else, with, or, \u0026amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.\nGo Templates treat the following values as false:\nfalse 0 any array, slice, map, or string of length zero Example 1: If\n{{ if isset .Params \u0026quot;title\u0026quot; }}\u0026lt;h4\u0026gt;{{ index .Params \u0026quot;title\u0026quot; }}\u0026lt;/h4\u0026gt;{{ end }} Example 2: If -\u0026gt; Else\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{else}} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }} Example 3: And \u0026amp; Or\n{{ if and (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Example 4: With\nAn alternative way of writing \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.\nThe first example above could be simplified as:\n{{ with .Params.title }}\u0026lt;h4\u0026gt;{{ . }}\u0026lt;/h4\u0026gt;{{ end }} Example 5: If -\u0026gt; Else If\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{ else if isset .Params \u0026quot;caption\u0026quot; }} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }} Pipes One of the most powerful components of go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline\u0026rsquo;s output becomes the input of the following pipe.\nBecause of the very simple syntax of go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.\nA few simple examples should help convey how to use the pipe.\nExample 1 :\n{{ if eq 1 1 }} Same {{ end }} is the same as\n{{ eq 1 1 | if }} Same {{ end }} It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.\nExample 2 :\n{{ index .Params \u0026quot;disqus_url\u0026quot; | html }} Access the page parameter called \u0026ldquo;disqus_url\u0026rdquo; and escape the HTML.\nExample 3 :\n{{ if or (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Stuff Here {{ end }} Could be rewritten as\n{{ isset .Params \u0026quot;caption\u0026quot; | or isset .Params \u0026quot;title\u0026quot; | or isset .Params \u0026quot;attr\u0026quot; | if }} Stuff Here {{ end }} Context (aka. the dot) The most easily overlooked concept to understand about go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.\nExample:\n{{ $title := .Site.Title }} {{ range .Params.tags }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;{{ $baseurl }}/tags/{{ . | urlize }}\u0026quot;\u0026gt;{{ . }}\u0026lt;/a\u0026gt; - {{ $title }} \u0026lt;/li\u0026gt; {{ end }} Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.\nHugo Parameters Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.\nUsing Content (page) Parameters In each piece of content you can provide variables to be used by the templates. This happens in the front matter.\nAn example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn\u0026rsquo;t make a lot of sense. We\u0026rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.\nHere is the example front matter:\n1--- 2title: \u0026#34;Permalinks\u0026#34; 3date: \u0026#34;2013-11-18\u0026#34; 4aliases: 5 - \u0026#34;/doc/permalinks/\u0026#34; 6groups: [\u0026#34;extras\u0026#34;] 7groups_weight: 30 8notoc: true 9--- Here is the corresponding code inside of the template:\n{{ if not .Params.notoc }} \u0026lt;div id=\u0026quot;toc\u0026quot; class=\u0026quot;well col-md-4 col-sm-6\u0026quot;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; {{ end }} Using Site (config) Parameters In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.\nFor instance, you might declare:\n1params: 2 CopyrightHTML: \u0026#34;Copyright \u0026amp;#xA9; 2013 John Doe. All Rights Reserved.\u0026#34; 3 TwitterUser: \u0026#34;spf13\u0026#34; 4 SidebarRecentLimit: 5 Within a footer layout, you might then declare a \u0026lt;footer\u0026gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.\n1{{if .Site.Params.CopyrightHTML}}\u0026lt;footer\u0026gt; 2\u0026lt;div class=\u0026#34;text-center\u0026#34;\u0026gt;{{.Site.Params.CopyrightHTML | safeHtml}}\u0026lt;/div\u0026gt; 3\u0026lt;/footer\u0026gt;{{end}} An alternative way of writing the \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:\n1{{with .Site.Params.TwitterUser}}\u0026lt;span class=\u0026#34;twitter\u0026#34;\u0026gt; 2\u0026lt;a href=\u0026#34;https://twitter.com/{{.}}\u0026#34; rel=\u0026#34;author\u0026#34;\u0026gt; 3\u0026lt;img src=\u0026#34;/images/twitter.png\u0026#34; width=\u0026#34;48\u0026#34; height=\u0026#34;48\u0026#34; title=\u0026#34;Twitter: {{.}}\u0026#34; 4 alt=\u0026#34;Twitter\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; 5\u0026lt;/span\u0026gt;{{end}} Finally, if you want to pull \u0026ldquo;magic constants\u0026rdquo; out of your layouts, you can do so, such as in this example:\n1\u0026lt;nav class=\u0026#34;recent\u0026#34;\u0026gt; 2 \u0026lt;h1\u0026gt;Recent Posts\u0026lt;/h1\u0026gt; 3 \u0026lt;ul\u0026gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}} 4 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34;\u0026gt;{{.Title}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 5 {{end}}\u0026lt;/ul\u0026gt; 6\u0026lt;/nav\u0026gt; ","permalink":"https://omgkill.github.io/post/other/goisforlovers/","tags":["go","golang","templates","themes","development"],"title":"(Hu)go Template Primer"},{"categories":["Development","golang","index"],"contents":"Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at installing hugo\nStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\nClone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:\ngit clone https://github.com/gohugoio/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Press ctrl+c to stop Once you\u0026rsquo;ve gotten here, follow along the rest of this page on your local build.\nStep 3. Change the docs site Stop the Hugo process by hitting ctrl+c.\nNow we are going to run hugo again, but this time with hugo in watch mode.\n/path/to/hugo/from/step/1/hugo server --source=./docs --watch \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Watching for changes in /Users/spf13/Code/hugo/docs/content \u0026gt; Press ctrl+c to stop Open your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.\nContent files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.\nChange and save this file.. Notice what happened in your terminal.\n\u0026gt; Change detected, rebuilding site \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 26 ms Refresh the browser and observe that the typo is now fixed.\nNotice how quick that was. Try to refresh the site before it\u0026rsquo;s finished building.. I double dare you. Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.\nStep 4. Have fun The best way to learn something is to play with it.\n","permalink":"https://omgkill.github.io/post/other/hugoisforlovers/","tags":["go","golang","hugo","development"],"title":"Getting Started with Hugo"},{"categories":["Development","golang","index"],"contents":"Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n‚ñæ \u0026lt;root\u0026gt;/ ‚ñæ images/ logo.png should become\n‚ñæ \u0026lt;root\u0026gt;/ ‚ñæ static/ ‚ñæ images/ logo.png Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.\nCreate your Hugo configuration file Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.\nSet your configuration publish folder to _site The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you\u0026rsquo;ll want to do one of two alternatives:\nChange your submodule to point to map gh-pages to public instead of _site (recommended).\ngit submodule deinit _site git rm _site git submodule add -b gh-pages git@github.com:your-username/your-repo.git public Or, change the Hugo configuration to use _site instead of public.\n{ .. \u0026quot;publishdir\u0026quot;: \u0026quot;_site\u0026quot;, .. } Convert Jekyll templates to Hugo templates That\u0026rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll\u0026rsquo;s template documentation if you need to refresh your memory on how you built your blog and Hugo\u0026rsquo;s template to learn Hugo\u0026rsquo;s way.\nAs a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours.\nConvert Jekyll plugins to Hugo shortcodes Jekyll has plugins; Hugo has shortcodes. It\u0026rsquo;s fairly trivial to do a port.\nImplementation As an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.\nJekyll\u0026rsquo;s plugin:\nmodule Jekyll class ImageTag \u0026lt; Liquid::Tag @url = nil @caption = nil @class = nil @link = nil // Patterns IMAGE_URL_WITH_CLASS_AND_CAPTION = IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;(\\s+)-\u0026gt;((https?:\\/\\/|\\/)(\\S+))(\\s*)/i IMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;/i IMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i IMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i def initialize(tag_name, markup, tokens) super if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK @class = $1 @url = $3 @caption = $7 @link = $9 elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION @class = $1 @url = $3 @caption = $7 elsif markup =~ IMAGE_URL_WITH_CAPTION @url = $1 @caption = $5 elsif markup =~ IMAGE_URL_WITH_CLASS @class = $1 @url = $3 elsif markup =~ IMAGE_URL @url = $1 end end def render(context) if @class source = \u0026quot;\u0026lt;figure class='#{@class}'\u0026gt;\u0026quot; else source = \u0026quot;\u0026lt;figure\u0026gt;\u0026quot; end if @link source += \u0026quot;\u0026lt;a href=\\\u0026quot;#{@link}\\\u0026quot;\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;img src=\\\u0026quot;#{@url}\\\u0026quot;\u0026gt;\u0026quot; if @link source += \u0026quot;\u0026lt;/a\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;figcaption\u0026gt;#{@caption}\u0026lt;/figcaption\u0026gt;\u0026quot; if @caption source += \u0026quot;\u0026lt;/figure\u0026gt;\u0026quot; source end end end Liquid::Template.register_tag('image', Jekyll::ImageTag) is written as this Hugo shortcode:\n\u0026lt;!-- image --\u0026gt; \u0026lt;figure {{ with .Get \u0026quot;class\u0026quot; }}class=\u0026quot;{{.}}\u0026quot;{{ end }}\u0026gt; {{ with .Get \u0026quot;link\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt;{{ end }} \u0026lt;img src=\u0026quot;{{ .Get \u0026quot;src\u0026quot; }}\u0026quot; {{ if or (.Get \u0026quot;alt\u0026quot;) (.Get \u0026quot;caption\u0026quot;) }}alt=\u0026quot;{{ with .Get \u0026quot;alt\u0026quot;}}{{.}}{{else}}{{ .Get \u0026quot;caption\u0026quot; }}{{ end }}\u0026quot;{{ end }} /\u0026gt; {{ if .Get \u0026quot;link\u0026quot;}}\u0026lt;/a\u0026gt;{{ end }} {{ if or (or (.Get \u0026quot;title\u0026quot;) (.Get \u0026quot;caption\u0026quot;)) (.Get \u0026quot;attr\u0026quot;)}} \u0026lt;figcaption\u0026gt;{{ if isset .Params \u0026quot;title\u0026quot; }} {{ .Get \u0026quot;title\u0026quot; }}{{ end }} {{ if or (.Get \u0026quot;caption\u0026quot;) (.Get \u0026quot;attr\u0026quot;)}}\u0026lt;p\u0026gt; {{ .Get \u0026quot;caption\u0026quot; }} {{ with .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt; {{ end }} {{ .Get \u0026quot;attr\u0026quot; }} {{ if .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;/a\u0026gt; {{ end }} \u0026lt;/p\u0026gt; {{ end }} \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; \u0026lt;!-- image --\u0026gt; Usage I simply changed:\n{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg \u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were \u0026quot;having fun\u0026quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; -\u0026gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %} to this (this example uses a slightly extended version named fig, different than the built-in figure):\n{{% fig class=\u0026quot;full\u0026quot; src=\u0026quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg\u0026quot; title=\u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; link=\u0026quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/\u0026quot; %}} As a bonus, the shortcode named parameters are, arguably, more readable.\nFinishing touches Fix content Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed.\nClean up You\u0026rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn\u0026rsquo;t used, delete it.\nA practical example in a diff Hey, it\u0026rsquo;s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff.\n","permalink":"https://omgkill.github.io/post/other/migrate-from-jekyll/","tags":["go","golang","templates","themes","development","jekyll"],"title":"Migrate to Hugo from Jekyll"},{"categories":["demo","Syntax Highlighting","index"],"contents":"More detail: Syntax Highlighting | Hugo\n1function helloWorld () { 2 alert(\u0026#34;Hello, World!\u0026#34;) 3} 1public class HelloWorld { 2 public static void main(String[] args) { 3 System.out.println(\u0026#34;Hello, World!\u0026#34;); 4 } 5} 1package hello 2 3fun main(args: Array\u0026lt;String\u0026gt;) { 4 println(\u0026#34;Hello World!\u0026#34;) 5} 1#include \u0026lt;stdio.h\u0026gt; 2 3/* Hello */ 4int main(void){ 5 printf(\u0026#34;Hello, World!\u0026#34;); 6 return 0; 7} 1// \u0026#39;Hello World!\u0026#39; program 2 3#include \u0026lt;iostream\u0026gt; 4 5int main(){ 6 std::cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34; \u0026lt;\u0026lt; std::endl; 7 return 0; 8} 1using System; 2class HelloWorld{ 3 public static void Main(){ 4 System.Console.WriteLine(\u0026#34;Hello, World!\u0026#34;); 5 } 6} 1\u0026lt;html\u0026gt; 2\u0026lt;body\u0026gt; 3 Hello, World! 4\u0026lt;/body\u0026gt; 5\u0026lt;/html\u0026gt; 1package main 2import fmt \u0026#34;fmt\u0026#34; 3 4func main() 5{ 6 fmt.Printf(\u0026#34;Hello, World!\\n\u0026#34;); 7} 1object HelloWorld with Application { 2 Console.println(\u0026#34;Hello, World!\u0026#34;); 3} 1\u0026lt;?php 2 echo \u0026#39;Hello, World!\u0026#39;; 3?\u0026gt; 1print(\u0026#34;Hello, World!\u0026#34;) no named code block 1## this is a comment 2$ echo this is a command 3this is a command 4 5## edit the file 6$vi foo.md 7+++ 8date = \u0026#34;2014-09-28\u0026#34; 9title = \u0026#34;creating a new theme\u0026#34; 10+++ 11 12bah and humbug 13:wq 14 15## show it 16$ cat foo.md 17+++ 18date = \u0026#34;2014-09-28\u0026#34; 19title = \u0026#34;creating a new theme\u0026#34; 20+++ 21 22bah and humbug 23$ highlight shortcode example:\n1{{\u0026lt; highlight go \u0026#34;linenos=table,hl_lines=8 15-17,linenostart=199\u0026#34; \u0026gt;}} 2// ... code 3{{\u0026lt; /highlight \u0026gt;}} result:\n199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 // GetTitleFunc returns a func that can be used to transform a string to // title case. // // The supported styles are // // - \u0026#34;Go\u0026#34; (strings.Title) // - \u0026#34;AP\u0026#34; (see https://www.apstylebook.com/) // - \u0026#34;Chicago\u0026#34; (see http://www.chicagomanualofstyle.org/home.html) // // If an unknown or empty style is provided, AP style is what you get. func GetTitleFunc(style string) func(s string) string { switch strings.ToLower(style) { case \u0026#34;go\u0026#34;: return strings.Title case \u0026#34;chicago\u0026#34;: tc := transform.NewTitleConverter(transform.ChicagoStyle) return tc.Title default: tc := transform.NewTitleConverter(transform.APStyle) return tc.Title } } ","permalink":"https://omgkill.github.io/post/demo/3-syntax-highlighting/","tags":["preview","Syntax Highlighting","tag-5"],"title":"Demo: Syntax Highlighting"},{"categories":null,"contents":"#Docker Ë∑®‰∏ªÊú∫ÂÆπÂô®ÈÄö‰ø°ÂÆûË∑µ\nDockerOverlayÁΩëÁªú\nOverlayÊòØ‰∏ÄÁßçË¶ÜÁõñÂú®‰∏ªÊú∫‰∏äÁöÑËôöÊãüÁΩëÁªúÔºåÊàëÁêÜËß£ÁöÑoverlay‰ªñÈúÄË¶ÅÂÄüÂä©Êèí‰ª∂ÊàñÂ∑•ÂÖ∑ÂÆåÊàêÂØπÊï∞ÊçÆÁöÑ‰øùÂ≠òÂíåËΩ¨Âèë„ÄÇÊàë‰ª¨ËøôÈáå‰ΩøÁî®etcdÊù•ÂÆåÊàêoverlayÁöÑË∑®‰∏ªÊú∫ÂÆπÂô®ÈÄö‰ø° Êú¨Êñá‰ª•‰∏§Âè∞Êú∫Âô®‰∏∫‰æãÔºåipÂàÜÈÖçÊòØ 10.0.3.2 ‰∏é 10.0.3.21\nÊ£ÄÊü•‰∏§Âè∞Êú∫Âô®hostnameÊòØÂê¶‰∏çÂêåÔºåÂ¶ÇÊûúÁõ∏ÂêåÈúÄË¶Å‰øÆÊîπ„ÄÇ‰∏çÁÑ∂Êó†Ê≥ïËÅîÈÄö\n‰∏§Âè∞Êú∫Âô®ÂÆâË£Ödocker\nyum install -y docker ‰øÆÊîπdockerÈÖçÁΩÆ,ÊåáÂÆöÂ§ñÈÉ®Â≠òÂÇ®‰ΩøÁî®etcdÔºå/etc/docker/daemon.json Âä†Â¶Ç‰∏ãÊï∞ÊçÆ\n‰∏ªÊú∫10.0.3.2 \u0026ldquo;cluster-store\u0026rdquo;:\u0026ldquo;etcd://10.0.3.2:2379\u0026rdquo;,\u0026ldquo;cluster-advertise\u0026rdquo;:\u0026ldquo;10.0.3.2:2375\u0026rdquo; ‰∏ªÊú∫10.0.3.21 \u0026ldquo;cluster-store\u0026rdquo;:\u0026ldquo;etcd://10.0.3.21:2379\u0026rdquo;,\u0026ldquo;cluster-advertise\u0026rdquo;:\u0026ldquo;10.0.3.21:2375\u0026rdquo; ÈáçÂêØdocker\nsystemctl daemon-reload systemctl restart docker ÂêØÂä®etcd\n‰∏ªÊú∫10.0.3.2, etcdËäÇÁÇπÂêç‰∏∫node1 1 docker run -d --name etcd --rm \\ 2 --publish 2379:2379 \\ 3 --publish 2380:2380 \\ 4 --env ALLOW_NONE_AUTHENTICATION=yes \\ 5 --env ETCD_NAME=node1 \\ 6 --env ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380 \\ 7 --env ETCD_ADVERTISE_CLIENT_URLS=http://10.0.3.2:2379 \\ 8 --env ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379 \\ 9 --env ETCD_INITIAL_ADVERTISE_PEER_URLS=http://10.0.3.2:2380 \\ 10 --env ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster \\ 11 --env ETCD_INITIAL_CLUSTER=node1=http://10.0.3.2:2380,node2=http://10.0.3.21:2380 \\ 12 --env ETCD_INITIAL_CLUSTER_STATE=new \\ 13 bitnami/etcd:3.5.3 etcd --enable-v2 ‰∏ªÊú∫10.0.3.21, etcdËäÇÁÇπÂêç‰∏∫node1 1docker run -d --name etcd --rm \\ 2--publish 2379:2379 \\ 3--publish 2380:2380 \\ 4--env ALLOW_NONE_AUTHENTICATION=yes \\ 5--env ETCD_NAME=node2 \\ 6--env ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380 \\ 7--env ETCD_ADVERTISE_CLIENT_URLS=http://10.0.3.21:2379 \\ 8--env ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379 \\ 9--env ETCD_INITIAL_ADVERTISE_PEER_URLS=http://10.0.3.21:2380 \\ 10--env ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster \\ 11--env ETCD_INITIAL_CLUSTER=node1=http://10.0.3.2:2380,node2=http://10.0.3.21:2380 \\ 12--env ETCD_INITIAL_CLUSTER_STATE=new \\ 13bitnami/etcd:3.5.3 etcd --enable-v2 Êü•Áúãetcd node\n1[root@ams2-10 ~]# docker exec -it etcd etcdctl member list 2796e13f38b3a972b, started, node2, http://10.0.3.21:2380, http://10.0.3.21:2379, false 3ff63796d3826f6b6, started, node1, http://10.0.3.2:2380, http://10.0.3.2:2379, false ÂàõÂª∫overlay network\n‰∏ªÊú∫10.0.3.2\n1 [root@ams2-10 SFS2X]# docker network create -d overlay etcdnet 2 f2c12e0259409c0f11c9c4a4a585753d46a80ac60c336625fd48e5322be9084e Êü•ÁúãÁΩëÁªúÔºåÂèëÁé∞Â§ö‰∫ÜÂàöÂàöÂàõÂª∫ÁöÑetcdnet.ËÄå‰∏îscopeÊòØglobalÁöÑ 1 [root@ams2-10 SFS2X]# docker network ls 2 NETWORK ID NAME DRIVER SCOPE 3 f406ad6eb59c bridge bridge local 4 f2c12e025940 etcdnet overlay global 5 097d3b78ec65 host host local 6 02d4e89d5af5 none null local Êàë‰ª¨inspect‰∏ãetcdnet‰ø°ÊÅØ 1 [root@ams2-10 SFS2X]# docker network inspect etcdnet 2 [ 3 { 4 \u0026#34;Name\u0026#34;: \u0026#34;etcdnet\u0026#34;, 5 \u0026#34;Id\u0026#34;: \u0026#34;f2c12e0259409c0f11c9c4a4a585753d46a80ac60c336625fd48e5322be9084e\u0026#34;, 6 \u0026#34;Created\u0026#34;: \u0026#34;2022-04-18T14:18:10.96517192Z\u0026#34;, 7 \u0026#34;Scope\u0026#34;: \u0026#34;global\u0026#34;, 8 \u0026#34;Driver\u0026#34;: \u0026#34;overlay\u0026#34;, 9 \u0026#34;EnableIPv6\u0026#34;: false, 10 \u0026#34;IPAM\u0026#34;: { 11 \u0026#34;Driver\u0026#34;: \u0026#34;default\u0026#34;, 12 \u0026#34;Options\u0026#34;: {}, 13 \u0026#34;Config\u0026#34;: [ 14 { 15 \u0026#34;Subnet\u0026#34;: \u0026#34;10.0.0.0/24\u0026#34;, 16 \u0026#34;Gateway\u0026#34;: \u0026#34;10.0.0.1\u0026#34; 17 } 18 ] 19 }, 20 \u0026#34;Internal\u0026#34;: false, 21 \u0026#34;Attachable\u0026#34;: false, 22 \u0026#34;Containers\u0026#34;: {}, 23 \u0026#34;Options\u0026#34;: {}, 24 \u0026#34;Labels\u0026#34;: {} 25 } 26 ] ‰∏ªÊú∫10.0.3.21\nÊü•ÁúãÁΩëÁªúÔºåÂèëÁé∞‰πüÊúâetcdnet‰∫ÜÔºå‰πüÂ∞±ÊòØËØ¥‰∏Ä‰∏™‰∏ªÊú∫ÂàõÂª∫ÔºåÂêåÈõÜÁæ§‰∏ãÁöÑ‰∏ªÊú∫ÈÉΩ‰ºöËá™Âä®ÂàõÂª∫ 1 [root@ams2-10 ~]# docker network ls 2 NETWORK ID NAME DRIVER SCOPE 3 3ed479747a1e bridge bridge local 4 f2c12e025940 etcdnet overlay global 5 4097f7659809 host host local 6 e72e71890e1a none null local ÂºÄÂêØ‰∏Ä‰∏™redisÊúçÂä°\n‰∏ªÊú∫ 10.0.3.2 1 [root@ams2-10 SFS2X]# docker run -d --rm --name redis1 -h redis1 --net etcdnet 10.0.3.2:5001/base_redis 2 8769e01b7003bb42edf226c812405a2e955fb0e16fae0752c37a703efdcc2135 ‰∏ªÊú∫10.0.3.21 Â∞ùËØï‰πüÂàõÂª∫‰∏Ä‰∏™docker name‰∏∫redis1ÁöÑÂÆπÂô®. 1 [root@ams2-10 ~]# docker run -d --rm --name redis1 -h redis1 --net etcdnet 10.0.3.2:5001/base_redis 2 9499adbbce469022ec1bef41415d58398fa79bc1a155316a07182f0278657a4d 3 /usr/bin/docker-current: Error response from daemon: service endpoint with name redis1 already exists. Êä•Èîô‰∫ÜÔºå‰πüÂ∞±ÊòØ‰∏çËÉΩÂàõÂª∫Áõ∏ÂêånameÁöÑÂÆπÂô®„ÄÇÊàë‰ª¨Ëµ∑‰∏Ä‰∏™name‰∏∫redis2ÁöÑÂÆπÂô® 1 [root@ams2-10 ~]# docker run -d --rm --name redis2 -h redis2 --net etcdnet 10.0.3.2:5001/base_redis 2 fea93e725e69f01ffa2e5431d470e230aa8496d8a9106a10ea738c0ff411e340 Êü•ÁúãÁΩëÁªú‰ø°ÊÅØ\n‰∏ªÊú∫ 10.0.3.2 ËøêË°ådocker network lsÔºåÂ§ö‰∫Ü‰∏Ä‰∏™docker_gwbridgeÔºåÁúã‰∏ãËøô‰∏™ÁΩëÁªúÂÆπÂô®ÁöÑËØ¶ÊÉÖ‰ø°ÊÅØ 1 [root@ams2-10 SFS2X]# docker inspect docker_gwbridge 2 [ 3 { 4 \u0026#34;Name\u0026#34;: \u0026#34;docker_gwbridge\u0026#34;, 5 \u0026#34;Id\u0026#34;: \u0026#34;d56f9aef3da6f93cc2749efcdace3265bb29150f145041e4d736e3928fd4e363\u0026#34;, 6 \u0026#34;Created\u0026#34;: \u0026#34;2022-04-18T14:34:44.715406625Z\u0026#34;, 7 \u0026#34;Scope\u0026#34;: \u0026#34;local\u0026#34;, 8 \u0026#34;Driver\u0026#34;: \u0026#34;bridge\u0026#34;, 9 \u0026#34;EnableIPv6\u0026#34;: false, 10 \u0026#34;IPAM\u0026#34;: { 11 \u0026#34;Driver\u0026#34;: \u0026#34;default\u0026#34;, 12 \u0026#34;Options\u0026#34;: null, 13 \u0026#34;Config\u0026#34;: [ 14 { 15 \u0026#34;Subnet\u0026#34;: \u0026#34;172.18.0.0/16\u0026#34;, 16 \u0026#34;Gateway\u0026#34;: \u0026#34;172.18.0.1\u0026#34; 17 } 18 ] 19 }, 20 \u0026#34;Internal\u0026#34;: false, 21 \u0026#34;Attachable\u0026#34;: false, 22 \u0026#34;Containers\u0026#34;: { 23 \u0026#34;d0ffff5fdc19975d8930e25438b1e03f7a960f5387dc5a577e02c89809be0d62\u0026#34;: { 24 \u0026#34;Name\u0026#34;: \u0026#34;gateway_d0ffff5fdc19\u0026#34;, 25 \u0026#34;EndpointID\u0026#34;: \u0026#34;e90ebc5c48f17d5e64bdcf442173617d0b35ed81af33a901a3ae8a75a7d11a55\u0026#34;, 26 \u0026#34;MacAddress\u0026#34;: \u0026#34;02:42:ac:12:00:02\u0026#34;, 27 \u0026#34;IPv4Address\u0026#34;: \u0026#34;172.18.0.2/16\u0026#34;, 28 \u0026#34;IPv6Address\u0026#34;: \u0026#34;\u0026#34; 29 } 30 }, 31 \u0026#34;Options\u0026#34;: { 32 \u0026#34;com.docker.network.bridge.enable_icc\u0026#34;: \u0026#34;false\u0026#34;, 33 \u0026#34;com.docker.network.bridge.enable_ip_masquerade\u0026#34;: \u0026#34;true\u0026#34;, 34 \u0026#34;com.docker.network.bridge.name\u0026#34;: \u0026#34;docker_gwbridge\u0026#34; 35 }, 36 \u0026#34;Labels\u0026#34;: {} 37 } 38 ] Êàë‰ª¨ÂÜçÁúã‰∏ã etcdnetËØ¶ÊÉÖ, ÂèØ‰ª•ÁúãÂà∞Áªô‰∏§‰∏™ÂÆπÂô®ÂàÜÈÖç‰∫Üip 1 [root@ams2-10 SFS2X]# docker network inspect etcdnet 2 [ 3 { 4 \u0026#34;Name\u0026#34;: \u0026#34;etcdnet\u0026#34;, 5 \u0026#34;Id\u0026#34;: \u0026#34;f2c12e0259409c0f11c9c4a4a585753d46a80ac60c336625fd48e5322be9084e\u0026#34;, 6 \u0026#34;Created\u0026#34;: \u0026#34;2022-04-18T14:18:10.96517192Z\u0026#34;, 7 \u0026#34;Scope\u0026#34;: \u0026#34;global\u0026#34;, 8 \u0026#34;Driver\u0026#34;: \u0026#34;overlay\u0026#34;, 9 \u0026#34;EnableIPv6\u0026#34;: false, 10 \u0026#34;IPAM\u0026#34;: { 11 \u0026#34;Driver\u0026#34;: \u0026#34;default\u0026#34;, 12 \u0026#34;Options\u0026#34;: {}, 13 \u0026#34;Config\u0026#34;: [ 14 { 15 \u0026#34;Subnet\u0026#34;: \u0026#34;10.0.0.0/24\u0026#34;, 16 \u0026#34;Gateway\u0026#34;: \u0026#34;10.0.0.1\u0026#34; 17 } 18 ] 19 }, 20 \u0026#34;Internal\u0026#34;: false, 21 \u0026#34;Attachable\u0026#34;: false, 22 \u0026#34;Containers\u0026#34;: { 23 \u0026#34;d0ffff5fdc19975d8930e25438b1e03f7a960f5387dc5a577e02c89809be0d62\u0026#34;: { 24 \u0026#34;Name\u0026#34;: \u0026#34;redis1\u0026#34;, 25 \u0026#34;EndpointID\u0026#34;: \u0026#34;fbc06b25b76eb1e4475582f0eeb51d509ca72f070891140ab482d0f54a140601\u0026#34;, 26 \u0026#34;MacAddress\u0026#34;: \u0026#34;02:42:0a:00:00:02\u0026#34;, 27 \u0026#34;IPv4Address\u0026#34;: \u0026#34;10.0.0.2/24\u0026#34;, 28 \u0026#34;IPv6Address\u0026#34;: \u0026#34;\u0026#34; 29 }, 30 \u0026#34;ep-69ecc615e82eeddbd03cd27006130607e2440d2e1025978c00267c1ba2f7544b\u0026#34;: { 31 \u0026#34;Name\u0026#34;: \u0026#34;redis2\u0026#34;, 32 \u0026#34;EndpointID\u0026#34;: \u0026#34;69ecc615e82eeddbd03cd27006130607e2440d2e1025978c00267c1ba2f7544b\u0026#34;, 33 \u0026#34;MacAddress\u0026#34;: \u0026#34;02:42:0a:00:00:03\u0026#34;, 34 \u0026#34;IPv4Address\u0026#34;: \u0026#34;10.0.0.3/24\u0026#34;, 35 \u0026#34;IPv6Address\u0026#34;: \u0026#34;\u0026#34; 36 } 37 }, 38 \u0026#34;Options\u0026#34;: {}, 39 \u0026#34;Labels\u0026#34;: {} 40 } 41 ] ËøõÂÖ•redis1ÂÆπÂô®ÔºåifconfigÁúã‰∏ã‰∏Ä‰∏ã 1 [root@ams2-10 SFS2X]# docker exec -it redis1 yum install -y net-tools.x86_64 2 [root@ams2-10 SFS2X]# docker exec -it redis1 ifconfig 3 eth0: flags=4163\u0026lt;UP,BROADCAST,RUNNING,MULTICAST\u0026gt; mtu 1450 4 inet 10.0.0.2 netmask 255.255.255.0 broadcast 0.0.0.0 5 inet6 fe80::42:aff:fe00:2 prefixlen 64 scopeid 0x20\u0026lt;link\u0026gt; 6 ether 02:42:0a:00:00:02 txqueuelen 0 (Ethernet) 7 RX packets 13 bytes 1034 (1.0 KiB) 8 RX errors 0 dropped 0 overruns 0 frame 0 9 TX packets 11 bytes 894 (894.0 B) 10 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 11 12 eth1: flags=4163\u0026lt;UP,BROADCAST,RUNNING,MULTICAST\u0026gt; mtu 1500 13 inet 172.18.0.2 netmask 255.255.0.0 broadcast 0.0.0.0 14 inet6 fe80::42:acff:fe12:2 prefixlen 64 scopeid 0x20\u0026lt;link\u0026gt; 15 ether 02:42:ac:12:00:02 txqueuelen 0 (Ethernet) 16 RX packets 7138 bytes 16361245 (15.6 MiB) 17 RX errors 0 dropped 0 overruns 0 frame 0 18 TX packets 7125 bytes 387572 (378.4 KiB) 19 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 20 21 lo: flags=73\u0026lt;UP,LOOPBACK,RUNNING\u0026gt; mtu 65536 22 inet 127.0.0.1 netmask 255.0.0.0 23 inet6 ::1 prefixlen 128 scopeid 0x10\u0026lt;host\u0026gt; 24 loop txqueuelen 1000 (Local Loopback) 25 RX packets 56 bytes 4827 (4.7 KiB) 26 RX errors 0 dropped 0 overruns 0 frame 0 27 TX packets 56 bytes 4827 (4.7 KiB) 28 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 29 30 [root@ams2-10 SFS2X]# ÊµãËØïÊòØÂê¶pingÈÄö\n‰∏ªÊú∫10.0.3.2 Êàë‰ª¨ping‰∏Ä‰∏ãredis2 ÁöÑip ÂíåÂÆπÂô®ÂêçÔºåÂèëÁé∞ÈÉΩÂèØ‰ª•pingÈÄö 1 [root@ams2-10 SFS2X]# docker exec -it redis1 ping -c 5 redis2 2 PING redis2 (10.0.0.3) 56(84) bytes of data. 3 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=1 ttl=64 time=0.325 ms 4 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=2 ttl=64 time=0.557 ms 5 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=3 ttl=64 time=0.446 ms 6 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=4 ttl=64 time=0.430 ms 7 64 bytes from redis2.etcdnet (10.0.0.3): icmp_seq=5 ttl=64 time=0.578 ms 8 --- redis2 ping statistics --- 9 5 packets transmitted, 5 received, 0% packet loss, time 3999ms 10 rtt min/avg/max/mdev = 0.325/0.467/0.578/0.093 ms Â∞ùËØïËøûÊé•redis2ÁöÑÊúçÂä°ÔºåÁúãÂà∞Ê≤°ÈóÆÈ¢ò 1 # ÂèØ‰ª•Ê≠£Â∏∏ÈìæÊé• 2 [root@ams2-10 SFS2X]# docker exec -it redis1 /home/elex/redis/bin/redis-cli -h redis2 set m1 dd 3 OK 4 [root@ams2-10 SFS2X]# docker exec -it redis1 /home/elex/redis/bin/redis-cli -h redis2 get m1 5 \u0026#34;dd\u0026#34; ‰∏ªÊú∫10.0.3.21Ôºå redis2 ÂêåÊ†∑ÂèØ‰ª•ÈÄöËøáipÂíåÂÆπÂô®Âêç pingÈÄö ps\nÊü•ÁúãetcdÁâàÊú¨Âè∑ curl http://10.0.3.2:2379/versoin ","permalink":"https://omgkill.github.io/bak/docker/docker-%E8%B7%A8%E4%B8%BB%E6%9C%BA%E5%AE%B9%E5%99%A8%E9%97%B4%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/","tags":null,"title":""},{"categories":null,"contents":" ÂÆâË£Ödocker\nyum install -y docker ÂàõÂª∫ÁΩëÁªú\ndocker network create test_net ÂàõÂª∫redis1\ndocker run -d \u0026ndash;rm \u0026ndash;name redis1 -h redis1 \u0026ndash;net test_net 10.0.3.2:5001/base_redis ÂàõÂª∫redis2\ndocker run -d \u0026ndash;rm \u0026ndash;name redis2 -h redis2 \u0026ndash;net test_net 10.0.3.2:5001/base_redis ÊµãËØï\ndocker exec -it redis1 ping -c 3 redis2 ","permalink":"https://omgkill.github.io/bak/docker/docker%E5%8D%95%E6%9C%BA%E5%AE%B9%E5%99%A8%E4%BA%92%E8%BF%9E/","tags":null,"title":""},{"categories":null,"contents":"ams2 ÂéãÊµãÊúçgameÊúçÂä°ÂÆπÂô®Âåñ Áî±‰∫éÂéãÊµãÈÉΩÊòØÊâæÁ©∫Èó≤ÁöÑÊú∫Âô®Êù•ÊµãËØïÔºåÊâÄ‰ª•ÊØèÊ¨°ÂéãÊµãÈÉΩË¶ÅÈáçÊñ∞ÈÉ®ÁΩ≤ÁéØÂ¢ÉÔºå‰∏∫‰∫ÜÁÆÄÂåñÊµÅÁ®ãÔºåÊÉ≥ÈÄöËøádockerÁÆÄÂåñÊìç‰Ωú\nÂèÇËÄÉlostÁßÅÊúçÂÅöÁöÑ‰øÆÊîπ\nlostÁßÅÊúç:http://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=75476077 Êñá‰ª∂Ë∑ØÂæÑ\nhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds ‰ΩøÁî®jenkinsÊûÑÂª∫dockerÈïúÂÉè\njenkinsÂú∞ÂùÄÔºöhttp://10.0.3.2:7005/ ‰ΩøÁî®nexus3‰Ωú‰∏∫dockerÈïúÂÉè‰ªìÂ∫ì\n‰ªìÂ∫ìÂú∞ÂùÄÔºöhttp://10.0.3.2:8082/ docker ÁÆ°ÁêÜÁïåÈù¢\nÂú∞ÂùÄÔºöhttp://10.0.3.2:9000/ ÂÖ≥‰∫ébaseÁöÑÊûÑÂª∫\nbaseÁöÑÊÑèÊÄùÊòØÊê≠Âª∫‰∏Ä‰∏™Âü∫Á°ÄÁéØÂ¢É\nÂåÖÂê´cetos7„ÄÅjdkÂÆâË£Ö„ÄÅmysqlÂÆâË£Ö„ÄÅredisÂÆâË£Ö„ÄÅsshÂÆâË£Ö\njenkinsÊûÑÂª∫base\nËøõÂÖ•jenkinsÁïåÈù¢ÔºåÁÇπÂáªbuild_ams2_base\n‚Äã\nÂÜçÁÇπÂáªÁ´ãÂç≥ÊûÑÂª∫ÔºåÂ∞±‰ºöËá™Âä®ÁºñËØëÔºåÂπ∂ÁºñËØëÊé®ÈÄÅÂà∞‰ªìÂ∫ì\njenkinsÈÖçÁΩÆÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/jenkins/build_ams2_base.jenkins\ndockerfile‰ª•ÂèäÂÖ∂‰ªñÊñá‰ª∂Ôºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/docker/base\nÂÖ≥‰∫éams2ÁöÑÊûÑÂª∫\nËøô‰∏™Â∞±ÊòØÁúüÊ≠£ÊûÑÂª∫gameÊúçÂä° ÂåÖÂê´redisÂêØÂä®„ÄÅmysqlÂêØÂä®„ÄÅmysqlÊï∞ÊçÆÂØºÂÖ•„ÄÅgameÈÉ®ÁΩ≤Êñá‰ª∂„ÄÅgameÂêØÂä® jenkinsÊûÑÂª∫base ËøõÂÖ•jenkinsÁïåÈù¢ÔºåÁÇπÂáªbuild_ams2_ds ÂÜçÁÇπÂáªÁ´ãÂç≥ÊûÑÂª∫ÔºåÂ∞±‰ºöËá™Âä®ÁºñËØëÔºåÂπ∂ÁºñËØëÊé®ÈÄÅÂà∞‰ªìÂ∫ì jenkinsÈÖçÁΩÆÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/jenkins/build_ams2_ds.jenkins dockerfile‰ª•ÂèäÂÖ∂‰ªñÊñá‰ª∂Ôºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/docker/ams2 ËØ¥‰∏Ä‰∏ãbuild_ams2_base Ëøô‰∏™‰ªªÂä°Â¶Ç‰ΩïÂàõÂª∫ÁöÑ„ÄÇbuild_ams2_dsÂêåÁêÜ\nÁÇπÂáªÊñ∞Âª∫‰ªªÂä°Ôºå ËæìÂÖ•‰ªªÂä°ÂêçÂ≠óÔºåÁÇπÂáªÊµÅÊ∞¥Á∫øÔºåÂÜçÁÇπÂáªÊä•Èîô Â°´ÂÜôÊèèËø∞ÔºåÁÇπÂáª‰∏çÂÖÅËÆ∏Âπ∂ÂèëÊûÑÂª∫ ÊåâÁÖßÂ¶Ç‰∏ãÈÖçÁΩÆÔºåCredentialsÊòØsvnÁöÑË¥¶Âè∑ÂØÜÁ†Å ËøòÊúâ‰∏Ä‰∏™ËÑöÊú¨Ë∑ØÂæÑÔºåËøô‰∏™ÊòØÁõ∏ÂØπË∑ØÂæÑ„ÄÇÁõ∏ÂØπ‰∫ésvn downÁöÑÁõÆÂΩï ÁÇπÂáª‰øùÂ≠òÂ∞±Â•Ω‰∫Ü ","permalink":"https://omgkill.github.io/bak/docker/game%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8%E5%8C%96/","tags":null,"title":""},{"categories":null,"contents":" windowsÁ≥ªÁªüË¶ÅÊ±Ç Á≥ªÁªüÊòØ‰∏ì‰∏öÁâà Á≥ªÁªüÁâàÊú¨Âè∑Windows10 2018 AprilÔºàWindows 1803ÔºâÂèä‰ª•‰∏äÁâàÊú¨ ÂÆâË£ÖÈúÄË¶ÅÁöÑÂäüËÉΩ ÊâìÂºÄÊéßÂà∂Èù¢Êùø -\u0026gt; ÊêúÁ¥¢ÂêØÂä®ÊàñÂÖ≥Èó≠WindowsÂäüËÉΩ -\u0026gt; ÈÄâÊã©‰ª•‰∏ãÂäüËÉΩ -\u0026gt; ÁÇπÂáªÁ°ÆÂÆö -\u0026gt; ÂÆâË£Ö -\u0026gt; ÈáçÂêØ Êõ¥Êñ∞wsl2 ‰∏ãËΩΩÂÆâË£Ö https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi Âú®ÁÆ°ÁêÜÂëò‰∏ãÊâßË°åÂëΩ‰ª§ wsl \u0026ndash;set-default-version 2 ÈúÄË¶ÅÊõ¥Â§öÁöÑËÆæÁΩÆÂèÇËÄÉ https://docs.microsoft.com/zh-cn/windows/wsl/setup/environment https://docs.microsoft.com/zh-cn/windows/wsl/tutorials/gui-apps https://docs.microsoft.com/en-us/windows/wsl/install-manual Êõ¥Êñ∞wsl2ÂÜÖÊ†∏ - Âú®ÁÆ°ÁêÜÂëò‰∏ãÊâßË°åÂëΩ‰ª§ Êõ¥Êñ∞Ôºöwsl \u0026ndash;update ÈáçÂêØÔºöwsl \u0026ndash;shutdown ÂÆâË£Öcentos7Â≠êÁ≥ªÁªü ‰∏ãËΩΩÂú∞ÂùÄÔºåÂØπÂ∫îcentos7 https://github.com/wsldl-pg/CentWSL/releases/ Ëß£ÂéãÂà∞ÊåáÂÆöÁõÆÂΩï ÁÇπÂáªcentos7.exe,‰ºöËá™Âä®ÂÆâË£Ö ÂÆåÊàêÂêéÔºåÊàë‰ª¨Êü•ÁúãÂΩìÂâçÂ≠êÁ≥ªÁªü ÂëΩ‰ª§Ë°å‰∏ãÊâßË°åÔºöwsl -l -v ËÆæÁΩÆcentos7‰∏∫ÈªòËÆ§Â≠êÁ≥ªÁªü wslconfig /s CentOS7 wsl ËøõÂÖ•centos7,Êü•ÁúãÁ≥ªÁªü‰ø°ÊÅØ cat /etc/redhat-release ÁõÆÂâç‰∏∫Ê≠¢Ôºåwindows‰∏ãlinuxÂ≠êÁ≥ªÁªüÂ∑≤ÂÆâË£ÖÂÆåÊàêÔºåÊé•‰∏ãËøûÂÆâË£Ödocker docker ‰∏ãËΩΩÂú∞ÂùÄ https://www.docker.com/get-started/ ÈÄâÊã©wsl2ÂÆâË£Ö ÂÆâË£ÖÂÆåÊàêÂêéÔºåÈúÄË¶ÅÊîπÁöÑÈÖçÁΩÆ Âä†‰ªìÂ∫ìÂú∞ÂùÄ docker‰πüÂÆâË£ÖÂÆåÊàê ÂêØÂä®dockerÂëΩ‰ª§ ÈúÄË¶ÅÊääÊúçidÔºàSERVER_IDÔºâÊîπ‰∏∫Ëá™Â∑±ÁöÑÊúçid 1docker run -d --privileged --rm --name game -h game -v C:\\Users\\Administrator\\Desktop\\td\\ClashOfKingProject:/home/ams2/ClashOfKingProject --env SERVER_ID=11 -p 8080:8080 -p 8088:8088 -p 8788:8788 -v redis_data:/home/elex/redis/data 10.0.3.2:5001/developer/game ÂÖºÂÆπÁöÑÊ®°ÊãüÂô® ‰∏ãËΩΩÂú∞ÂùÄ https://www.bluestacks.com/download.html psÔºöwindows ‰∏ã docker‰∏éwslÂç†Áî®ÂÜÖÂ≠òÂ§™È´ò‰∫ÜÔºå‰∏çÂª∫ËÆÆÁî® ","permalink":"https://omgkill.github.io/bak/docker/windows%E5%B9%B3%E5%8F%B0%E4%BD%BF%E7%94%A8docker%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%9C%8D/","tags":null,"title":""},{"categories":null,"contents":" gmÊúçÈÉ®ÁΩ≤nexus3ÔºåËøô‰∏™Áî®‰∫édocker image ‰ªìÂ∫ì„ÄÇ ÂèÇËÄÉÔºöhttp://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=75479441 gmÊúçÈÉ®ÁΩ≤jenkins ÂèÇËÄÉÔºöhttp://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=75479445 ÈúÄË¶ÅÂÆâË£Ödocker plugin Êèí‰ª∂ÁÆ°ÁêÜ‰∏≠ÂÆâË£ÖDocker, Á≥ªÁªüÁÆ°ÁêÜ-\u0026gt;Êèí‰ª∂ÁÆ°ÁêÜ-\u0026gt; ÂèØÈÄâÊèí‰ª∂-\u0026gt;ÊêúÁ¥¢docker ÈÖçÁΩÆdockerÈïúÂÉè‰ªìÂ∫ìÂú∞ÂùÄÂíåÂØÜÈí•ÔºåË∑ØÂæÑÔºöÁ≥ªÁªüÁÆ°ÁêÜ-\u0026gt;Á≥ªÁªüÈÖçÁΩÆ-\u0026gt; Declarative Pipeline (Docker) ÂÆâË£Ögradle plugin ÈÖçÁΩÆgradleÔºåÂêçÂ≠óÔºögradle564ÔºåÁâàÊú¨ÔºöGradle 5.6.4ÔºåË∑ØÂæÑÔºöÁ≥ªÁªüÁÆ°ÁêÜ-\u0026gt;ÂÖ®Â±ÄÂ∑•ÂÖ∑ÈÖçÁΩÆ-\u0026gt; Gradle jenkinsÈÖçÁΩÆ ÂèÇËÄÉÔºöhttp://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=96209340 ÊûÑÂª∫ams2-base Âíå ams2-ds svn checkout ËÑöÊú¨ svnÂú∞ÂùÄÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/deploy_stressing ËøõÂÖ•deploy_stressingÊñá‰ª∂Â§π ÊâßË°åËÑöÊú¨Ôºå ÈªòËÆ§ÂêØÂä®8001Êúç python deploy_stressing_server.py -g \u0026lt;gameÊúçÂÜÖÁΩëip\u0026gt; -d \u0026lt;mysql‰∏éclusterRedisÊúçÂÜÖÁΩëip\u0026gt; -n \u0026lt;dockerÈïúÂÉè‰ªìÂ∫ìÊâÄÂú®ÊúçÂÜÖÁΩëip\u0026gt; Â¶ÇÊûúË¶ÅÈáçÂêØgameÊúçÔºåË¶ÅÂ§öÂä†‰∏Ä‰∏™ÂèÇÊï∞Ôºö-r python deploy_stressing_server.py -g \u0026lt;gameÊúçÂÜÖÁΩëip\u0026gt; -d \u0026lt;mysql‰∏éclusterRedisÊúçÂÜÖÁΩëip\u0026gt; -n \u0026lt;dockerÈïúÂÉè‰ªìÂ∫ìÊâÄÂú®ÊúçÂÜÖÁΩëip\u0026gt; -r true ËÑöÊú¨ÊîØÊåÅÈáçÂ§çÊâßË°åÔºåÂ¶ÇÊûúËÑöÊú¨‰∏≠ÈÄîÊâßË°åÂ§±Ë¥•ÔºåÂèØ‰ª•ÈáçÂ§çÊâßË°å dockerÂÇ®Â≠òÂà∞ÂÆø‰∏ªÊú∫ÁöÑÊï∞ÊçÆ mysqlÁöÑÊï∞ÊçÆÂ≠òÂÇ®Âú∞ÂùÄÔºåÂú®ÂÆø‰∏ªÊú∫ÁöÑ:/home/docker/docker/volume/stress_db_mysql redisÁöÑÊï∞ÊçÆÂ≠òÂÇ®Âú∞ÂùÄÔºåÂú®ÂÆø‰∏ªÊú∫Ôºö/home/docker/docker/volume/stress_db_redis game logÁöÑÊï∞ÊçÆÂ≠òÂÇ®Âú∞ÂùÄÔºåÂú®ÂÆø‰∏ªÊú∫Ôºö/home/docker/docker/volume/stress_game_log Á§∫‰æã python .\\deploy_stressing_server.py -g 10.0.3.203 -d 10.0.3.21 -n 10.0.3.2 ##ËÑöÊú¨ËØ¥Êòé\nËÑöÊú¨ÈúÄË¶Å‰∏§Âè∞ÊúçÂä°Âô®„ÄÇ ‰∏Ä‰∏™Âè∞ÈÉ®ÁΩ≤game‰∏élocal redisÔºå‰∏ÄÂè∞ÈÉ®ÁΩ≤mysql‰∏écluster redis ‰∏§Âè∞Êú∫Âô®ÂÆπÂô®Â¶Ç‰Ωï‰∫íËÅîÔºåÂèÇËÄÉÔºöhttp://confluence.super-chameleon.com:8093/pages/viewpage.action?pageId=96209514 Â¶ÇÊûúË¶ÅÂà†Èô§ÊâÄÊúâdockerÊï∞ÊçÆÔºåÊâßË°å‰∏Ä‰∏ãÂëΩ‰ª§ yum remove -y docker* ##Êä•ÈîôËß£ÂÜ≥\n1Êä•ÈîôËß£ÂÜ≥ 2 3[root@server2002 home]# docker network rm docker_gwbridge 4Error response from daemon: network docker_gwbridge has active endpoints 5 6 7 8 9[root@server2002 home]# docker network inspect docker_gwbridge 10[ 11 { 12 \u0026#34;Name\u0026#34;: \u0026#34;docker_gwbridge\u0026#34;, 13 \u0026#34;Id\u0026#34;: \u0026#34;0eecc7be54a618d305be26b9081998437529e5dace05c71b538da63611509cc3\u0026#34;, 14 \u0026#34;Created\u0026#34;: \u0026#34;2022-04-24T07:35:29.709419174Z\u0026#34;, 15 \u0026#34;Scope\u0026#34;: \u0026#34;local\u0026#34;, 16 \u0026#34;Driver\u0026#34;: \u0026#34;bridge\u0026#34;, 17 \u0026#34;EnableIPv6\u0026#34;: false, 18 \u0026#34;IPAM\u0026#34;: { 19 \u0026#34;Driver\u0026#34;: \u0026#34;default\u0026#34;, 20 \u0026#34;Options\u0026#34;: null, 21 \u0026#34;Config\u0026#34;: [ 22 { 23 \u0026#34;Subnet\u0026#34;: \u0026#34;172.19.0.0/16\u0026#34;, 24 \u0026#34;Gateway\u0026#34;: \u0026#34;172.19.0.1\u0026#34; 25 } 26 ] 27 }, 28 \u0026#34;Internal\u0026#34;: false, 29 \u0026#34;Attachable\u0026#34;: false, 30 \u0026#34;Containers\u0026#34;: { 31 \u0026#34;f32013a3de270374e0baf8e030e7182f0a75024a796b2459e703f15deeb48725\u0026#34;: { 32 \u0026#34;Name\u0026#34;: \u0026#34;gateway_f32013a3de27\u0026#34;, 33 \u0026#34;EndpointID\u0026#34;: \u0026#34;376c39efa00c1cd178d27f5daec7ffcb0ed06f71db8e15bab66834bb438342a2\u0026#34;, 34 \u0026#34;MacAddress\u0026#34;: \u0026#34;02:42:ac:13:00:02\u0026#34;, 35 \u0026#34;IPv4Address\u0026#34;: \u0026#34;172.19.0.2/16\u0026#34;, 36 \u0026#34;IPv6Address\u0026#34;: \u0026#34;\u0026#34; 37 } 38 }, 39 \u0026#34;Options\u0026#34;: { 40 \u0026#34;com.docker.network.bridge.enable_icc\u0026#34;: \u0026#34;false\u0026#34;, 41 \u0026#34;com.docker.network.bridge.enable_ip_masquerade\u0026#34;: \u0026#34;true\u0026#34;, 42 \u0026#34;com.docker.network.bridge.name\u0026#34;: \u0026#34;docker_gwbridge\u0026#34; 43 }, 44 \u0026#34;Labels\u0026#34;: {} 45 } 46] 47 48docker network disconnect -f docker_gwbridge gateway_def4bf4c78ab 49 50docker network rm docker_gwbridge ","permalink":"https://omgkill.github.io/bak/docker/%E4%BD%BF%E7%94%A8docker%E5%90%AF%E5%8A%A8%E5%8E%8B%E6%B5%8B%E6%9C%8D/","tags":null,"title":""},{"categories":null,"contents":" Áî≥ËØ∑Á´ØÂè£ check out svnÊñáÊ°£ÔºåsvnÂú∞ÂùÄÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/port.xlsx Â°´ÂÜôËá™Â∑±ÁöÑÂêçÂ≠óÂíåÁ´ØÂè£ÔºàÁ´ØÂè£‰ªé10000ÂºÄÂßãÔºå‰æùÊ¨°Â¢ûÂä†Ôºå‰∏çË¶ÅÈáçÂ§çÔºâÔºåÊèê‰∫§svn ‰∏ãËΩΩËÑöÊú¨ ËÑöÊú¨Âú∞ÂùÄÔºöhttp://svn.super-chameleon.com:8822/svn/AMS_TD/Source/trunk/Server/Tools/Ops/ds/deploy_docker_game.sh ÊâßË°åËÑöÊú¨ ./deploy_docker_game.sh -p Á´ØÂè£ -s Êúçid -n ÂÆπÂô®Âêç Á´ØÂè£ Á´ØÂè£Â∞±ÊòØ‰∏äÈù¢Áî≥ËØ∑ÁöÑÁ´ØÂè£ Êúçid Ëøô‰∏™ÊúçidÊúâ‰∏§‰∏™ÈÄâÈ°πÔºå‰∏Ä‰∏™ÊòØËá™Â∑±ÁöÑÊúçidÔºå‰∏Ä‰∏™ÊòØÂÖ±ÈÄö‰ΩøÁî®‰∏Ä‰∏™Êúçid Â¶ÇÊûúÊòØÂºÄÂèëÔºåÂèØ‰ª•‰ΩøÁî®Ëá™Â∑±ÁöÑÊúçid Â¶ÇÊûúÊòØËøêËê•ÔºåÂèØ‰ª•‰ΩøÁî®ÂÖ±ÈÄöÁöÑÊúçid„ÄÇÂÖ±ÈÄöÊúçid:9000 ÂÆπÂô®Âêç Ëøô‰∏™ÊúÄÂ•ΩÊòØ‰ΩøÁî®ËÄÖÁöÑÂêçÂ≠óÔºå‰ª•ÂêéÂ•ΩÂå∫ÂàÜ ‰∏Ä‰∏™È¢ùÂ§ñÂèÇÊï∞ -bÔºåmysql ÂèÇÊï∞ INNODB_BUFFER_POOL_SIZEÔºå Âçï‰ΩçÊòØM,‰∏çÂ°´ÈªòËÆ§ÂÄºÊòØ128M Á§∫‰æãÔºö./deploy_docker_game.sh -p 10000 -s 11 -n name -b 6144 ËÑöÊú¨ÊâßË°åÔºå‰ºöÊúâlogÊòæÁ§∫ ÁúãÂà∞deploy successËØ¥ÊòéÈÉ®ÁΩ≤ÊàêÂäü tips docker ÁõÆÂâçÂè™ÊîØÊåÅlinux ÂèØ‰ª•Âú®10.0.3.2ÊúçÊµãËØï/home/ams2/ds Â¶Ç‰ΩïÊìç‰ΩúÂÆπÂô®\nÈÄöËøáÁÆ°ÁêÜÁïåÈù¢Êìç‰Ωú\nhttp://10.0.3.2:9000/#!/home ÊàñËÄÖÈÄöËøáÂëΩ‰ª§Ë°åÊìç‰ΩúÂÆπÂô®\nÊü•ÁúãÂΩìÂâçÊú∫Âô®ÊúâÂì™‰∫õÂÆπÂô® docker ps ÊàñËÄÖ docker container ls ËøêË°åÂÆπÂô®(Ëøô‰∏™ÈúÄË¶ÅË∞∑Ê≠å‰∏Ä‰∏ãÔºåÂëΩ‰ª§ÂèÇÊï∞ÊØîËæÉÂ§ö) docker run -d ÂÆπÂô®Âêç ËøõÂÖ•ÂÆπÂô® docker exec -it ÂÆπÂô®Âêç bash ÈÄÄÂá∫ÂÆπÂô® exit ÂÖ≥Èó≠ÂÆπÂô® docker stop ÂÆπÂô®Âêç ÂºÄÂêØÂÆπÂô® docker start ÂÆπÂô®Âêç ‰ΩÜÊòØËøô‰∏™‰∏ç‰ºöÂêØÂä®ÊúçÂä°ÔºåÊúÄÂ•ΩÁöÑÊñπÂºèÊòØÂà†Èô§ÂÆπÂô®ÔºåÁÑ∂Âêé‰ΩøÁî®docker run Âà†Èô§ÂÆπÂô® docker rm ÂÆπÂô®Âêç Âº∫Âà∂Âà†Èô§ docker rm -f ÂÆπÂô®Âêç Êü•ÁúãÂÆπÂô®Êó•Âøó docker logs ÂÆπÂô®Âêç docker logs -f ÂÆπÂô®Âêç ÂÆπÂô®ÂÜÖams2ÈÉ®ÁΩ≤Âú∞ÂùÄ /home/ams2_deploy ÂÆπÂô®ÂÜÖMysqlÂú∞ÂùÄ /home/elex/mysql ÂÆπÂô®ÂÜÖCluster Redis Âú∞ÂùÄ /home/elex/redis ","permalink":"https://omgkill.github.io/bak/docker/%E4%BD%BF%E7%94%A8docker%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95%E6%9C%8D/","tags":null,"title":""},{"categories":null,"contents":"‰ª£Á†ÅËß£ÂÜ≥ÊñπÊ°à\n1. ÈóÆÈ¢òÔºöÈÄªËæëÊúâÁÇπÂ§çÊùÇÔºåËøòË¶ÅÂú®Â§çÊùÇÁöÑÈÄªËæë‰∏ä‰øÆÊîπ - Ëß£ÂÜ≥ÊñπÊ°àÔºö - 1. ÊîπÂä®Â∞èÔºå‰ª£Á†ÅÊâßË°åÊòØÊ≤°ÈóÆÈ¢ò„ÄÇ‰ΩÜ‰∏çÂÆπÊòìÁêÜËß£ - 2. ÊîπÂä®Â§ßÔºå‰ª£Á†ÅÊòØËß£ÊûÑÁöÑ„ÄÇÊõ¥ÂÆπÊòìÁêÜËß£ - ÊúÄÁªàËß£ÂÜ≥ - ÈÄâÊã©ÁöÑÊñπÊ°à2 - ÂéüÂõ†Ôºö - ÁªìÊûÑÊ∏ÖÊô∞ÔºåÊõ¥ÂÆπÊòìÁêÜËß£ - reviewer‰πüÊõ¥ÂÆπÊòìÁúãÊòéÁôΩÔºåÁ°Æ‰øùÊ≤°ÊúâÈóÆÈ¢ò 2. ÈóÆÈ¢òÔºöleaderÂ∏åÊúõÂ§çÁî®ÂÖ±ÂêåÁöÑÈÄªËæëÔºå‰ΩÜÈÖçÁΩÆÂç¥ÊòØÁã¨Á´ãÁöÑÔºåÊ≤°ÊúâÁî®ÂÖ±ÂêåÁöÑ„ÄÇÂêåÊó∂ÈÖçÁΩÆÂèàÊ∑±ÂÖ•ÂµåÂÖ•Âà∞ÈÄªËæëÁöÑÂêÑÂ§Ñ - leaderÂ∏åÊúõÁöÑ - Â§çÁî®ÂÖ±ÂêåÈÄªËæëÔºåÂèØ‰ª•Áî®Ê®°ÊùøÊñπÊ≥ïËß£ÂÜ≥ - Êàë‰∏ÄÂºÄÂßãÁöÑÂÅöÊ≥ï - Âè™ÂÖ±Áî®‰∏Ä‰∏™Êé•Âè£ÔºåÈÄªËæë‰ª£Á†ÅÊòØcopyÁöÑ - ËøôÊ†∑Â∞±ÂèàÂÜ≤Á™Å‰∫Ü„ÄÇ - ÊúÄÂêéÊñπÊ°à - ‰ΩøÁî®ÈÄÇÈÖçÂô®Ê®°ÂºèÔºåÈÄöËøá‰∏Ä‰∏™ÈÖçÁΩÆÁ±ªÂÖ≥ËÅî‰∏§‰∏™Áã¨Á´ãÁöÑÈÖçÁΩÆ - ËøôÊ†∑Â∫ïÂ±ÇÁöÑÈÖçÁΩÆËØªÂèñÂ∞±ÊòØÂÖ±ÂêåÁöÑÔºå‰∏çÈúÄË¶ÅÂÅöÁâπÊÆäÂ§ÑÁêÜ„ÄÇÂêéÁª≠Áõ∏ÂÖ≥ÁöÑÊ¥ªÂä®‰πüÂèØ‰ª•ËøôÊ†∑Â§ÑÁêÜ - ÂàõÂª∫‰∏Ä‰∏™stageÁ±ªÔºåÁÑ∂ÂêéÂÜçÂàõÂª∫stageGcÁ±ªÂπ∂ÁªßÊâøstage„ÄÇÂêåÊó∂‰∏Ä‰∏™ÈÖçÁΩÆËß£ÊûêÁ±ª ","permalink":"https://omgkill.github.io/bak/%E4%BB%A3%E7%A0%81%E6%8C%87%E5%8D%97/%E4%BB%A3%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","tags":null,"title":""},{"categories":null,"contents":"","permalink":"https://omgkill.github.io/search/","tags":null,"title":"Search Results"}]